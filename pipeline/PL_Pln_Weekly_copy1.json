{
	"name": "PL_Pln_Weekly_copy1",
	"properties": {
		"activities": [
			{
				"name": "Critical Issues",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE f_pln_criticalissue_tracker;\r\nINSERT INTO f_pln_criticalissue_tracker\r\nWITH CRITICAL_CLEANING AS (\r\nSELECT\r\n            DATE(OPCIT.upload_time) AS `Upload Time`,\r\n            OPCIT.`Reference Number`,\r\n            OPCIT.`PR / PO / Other Ref No`,\r\n            OPCIT.`Raised On`,\r\n            CASE\r\n                WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 1%' THEN 'SBU 1'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 2%' THEN 'SBU 2'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 3%' THEN 'SBU 3'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 4%' THEN 'SBU 4'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 5%' THEN 'SBU 5'\r\n        ELSE 'UNKNOWN'\r\n    END AS SBU_SCLICER,\r\n            CASE\r\n                WHEN OPCIT.`Pending With` IS NULL\r\n        OR TRIM(OPCIT.`Pending With`) = '' THEN 'Not Available'\r\n        ELSE OPCIT.`Pending With`\r\n    END AS `Pending With`,\r\n            OPCIT.`Issue Description`,\r\n            OPCIT.`Current Status`,\r\n            OPCIT.`Impact On`,\r\n            OPCIT.`Target Closure Date`,\r\n            OPCIT.`Status`,\r\n            OPCIT.`Actual Closure Date`,\r\n            OPCIT.`Project`,\r\n            PROJECTS.Project_Identifier\r\nFROM\r\n        O_PLN_CRITICAL_ISSUE_TRACKER OPCIT\r\n    LEFT JOIN PROJECTS ON\r\n        OPCIT.Project = PROJECTS.Project_Short\r\nWHERE\r\n        TRIM(OPCIT.`Issue Description`) NOT IN ('')),\r\nAPPLYING_RANK AS (\r\nSELECT\r\n        *,\r\n        DENSE_RANK() OVER (PARTITION BY CRITICAL_CLEANING.SBU_SCLICER\r\nORDER BY\r\n        CRITICAL_CLEANING.`Upload Time` DESC) AS DENSER_RANK\r\nFROM\r\n        CRITICAL_CLEANING\r\nORDER BY\r\n        2\r\n),\r\nSTAGGING AS (\r\nSELECT\r\n        OPCIT.`Upload Time`,\r\n        OPCIT.`Reference Number`,\r\n        OPCIT.`PR / PO / Other Ref No`,\r\n        CASE \r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'may','05')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'dec','12') \r\n            ELSE OPCIT.`Raised On`\r\n        END AS `Raised On`,\r\n        OPCIT.SBU_SCLICER,\r\n        CASE \r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 1' THEN 1\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 2' THEN 2\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 3' THEN 3\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 4' THEN 4\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 5' THEN 5\r\n            ELSE 6\r\n        END AS SBU_SORT,        \r\n        OPCIT.`Pending With`,\r\n        OPCIT.`Issue Description`,\r\n        OPCIT.`Current Status`,\r\n        OPCIT.`Impact On`,\r\n        CASE\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'may','05')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'dec','12')\r\n            ELSE OPCIT.`Target Closure Date`\r\n        END AS `Target Closure Date`,\r\n        OPCIT.Status,\r\n        CASE \r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'may','05')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'dec','12')\r\n            ELSE OPCIT.`Actual Closure Date`    \r\n        END AS `Actual Closure Date`,\r\n        OPCIT.Project,\r\n        OPCIT.Project_Identifier\r\nFROM\r\n        APPLYING_RANK OPCIT \r\nWHERE\r\n        DENSER_RANK = 1),\r\nSTAGGING2 AS ( \r\n    SELECT     \r\n        ST.`Upload Time`,\r\n        ST.`Reference Number`,\r\n        ST.`PR / PO / Other Ref No`, \r\n        ST.SBU_SCLICER,\r\n        ST.SBU_SORT,\r\n        ST.`Pending With`,\r\n        ST.`Issue Description`,\r\n        ST.`Current Status`,\r\n        ST.`Impact On`,\r\n        ST.Status,\r\n        ST.Project,\r\n        ST.Project_Identifier,\r\n        CASE \r\n            WHEN ST.`Raised On` IS NOT NULL AND TRIM(ST.`Raised On`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Raised On`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Raised On`,\r\n        CASE \r\n            WHEN ST.`Actual Closure Date` IS NOT NULL AND TRIM(ST.`Actual Closure Date`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Actual Closure Date`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Actual Closure Date`,\r\n        CASE \r\n            WHEN ST.`Target Closure Date` IS NOT NULL AND TRIM(ST.`Target Closure Date`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Target Closure Date`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Target Closure Date`\r\n    FROM STAGGING ST),\r\nFINAL_OUTPUT AS (\r\n    SELECT \r\n        ST2.*,\r\n        CASE \r\n            WHEN TRIM(LOWER(ST2.Status)) = 'open' THEN DATEDIFF(CURRENT_DATE(),DATE(ST2.`Raised On`))\r\n            WHEN TRIM(LOWER(ST2.Status)) = 'closed' AND ST2.`Actual Closure Date` IS NOT NULL THEN  DATEDIFF(ST2.`Actual Closure Date`,ST2.`Raised On`)\r\n        ELSE NULL \r\n    END AS Ageing        \r\n    FROM STAGGING2 ST2)\r\n    SELECT \r\n        FO.*,\r\n        CASE \r\n            WHEN FO.Ageing <=7  THEN  '(0-7)'\r\n            WHEN FO.Ageing <= 14 THEN '(8-14)'\r\n            WHEN FO.Ageing <= 21 THEN '(15-21)'\r\n            WHEN FO.Ageing <= 30 THEN '(22-30)'\r\n            WHEN FO.Ageing IS NULL THEN NULL\r\n            ELSE '>30'\r\n        END AS Agetub,\r\n        CASE \r\n            WHEN FO.Ageing <=7  THEN 1\r\n            WHEN FO.Ageing <=14 THEN 2\r\n            WHEN FO.Ageing <=21 THEN 3\r\n            WHEN FO.Ageing <=30 THEN 4\r\n            WHEN FO.Ageing IS NULL THEN NULL\r\n            ELSE 5\r\n        END AS Agetub_sort        \r\n    FROM FINAL_OUTPUT FO ;\r\n    \r\n    /**/\r\n\r\n    SELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Staircase Template",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Critical Issues",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE f_pln_staircase;\r\nINSERT INTO f_pln_staircase\r\nWITH CLEANING_DATA AS (\r\n    SELECT\r\n        DATE(OPSR.upload_time) AS Upload_Date, \r\n        OPSR.project_id,\r\n        OPSR.tower,\r\n        OPSR.`Level`,\r\n        OPSR.`Stair Case No`,\r\n        'Staircase Area' AS sclicer,\r\n        Column_Name.*,\r\n        OPSM.ACTIVITY_ID,\r\n        OPSM.SBU_ID,\r\n        OPSM.Category,\r\n        DENSE_RANK () OVER (PARTITION BY  OPSR.project_id ORDER BY  DATE(OPSR.upload_time) DESC) Project_Udate_DRANK\r\n    from O_PLN_STAIRCASE_RAW OPSR\r\n    CROSS JOIN LATERAL (\r\n                SELECT `MEP Conduit Marking` , 'MEP Conduit Marking'\r\n            UNION ALL SELECT `Cutting and Chasing` , 'Cutting and Chasing'\r\n            UNION ALL SELECT `MEP Conduit Fixtures` , 'MEP Conduit Fixtures'\r\n            UNION ALL SELECT `Wall Packing` , 'Wall Packing'\r\n            UNION ALL SELECT Plaster , 'Plaster'\r\n            UNION ALL SELECT Grinding , 'Grinding'\r\n            UNION ALL SELECT POP , 'POP'\r\n            UNION ALL SELECT `Medium Coat Ceiling Spray Plaster` , 'Medium Coat Ceiling Spray Plaster'\r\n            UNION ALL SELECT `Two Coat Fine Ceiling Spray Plaster` , 'Two Coat Fine Ceiling Spray Plaster'\r\n            UNION ALL SELECT `Ceiling Primer` , 'Ceiling Primer'\r\n            UNION ALL SELECT `Ceiling Texture` , 'Ceiling Texture'\r\n            UNION ALL SELECT `Wall Primer` , 'Wall Primer'\r\n            UNION ALL SELECT `Wall Stucco banding` , 'Wall Stucco banding'\r\n            UNION ALL SELECT `Wall Stucco (1st and 2nd Coat)` , 'Wall Stucco (1st and 2nd Coat)'\r\n            UNION ALL SELECT `MEP Pressurization Equipment` , 'MEP Pressurization Equipment'\r\n            UNION ALL SELECT Sanding , 'Sanding'\r\n            UNION ALL SELECT `Wall First Coat Paint` , 'Wall First Coat Paint'\r\n            UNION ALL SELECT `Ceiling First Coat Paint` , 'Ceiling First Coat Paint'\r\n            UNION ALL SELECT `Handrail Floor Mounted` , 'Handrail Floor Mounted'\r\n            UNION ALL SELECT `Handrail Wall Mounted` , 'Handrail Wall Mounted'\r\n            UNION ALL SELECT `Epoxy Grinding` , 'Epoxy Grinding'\r\n            UNION ALL SELECT `Epoxy Bug Fill` , 'Epoxy Bug Fill'\r\n            UNION ALL SELECT `Epoxy Primer` , 'Epoxy Primer'\r\n            UNION ALL SELECT `Epoxy Base Coat` , 'Epoxy Base Coat'\r\n            UNION ALL SELECT `Epoxy Final Coat` , 'Epoxy Final Coat'\r\n            UNION ALL SELECT `Threshold Installation` , 'Threshold Installation'\r\n            UNION ALL SELECT `Door - Frame Installation` , 'Door - Frame Installation'\r\n            UNION ALL SELECT `Door - Architrave Installation` , 'Door - Architrave Installation'\r\n            UNION ALL SELECT `Door - Shutter Installation` , 'Door - Shutter Installation'\r\n            UNION ALL SELECT `Door - Ironmongery Installation` , 'Door - Ironmongery Installation'\r\n            UNION ALL SELECT `Door - Silicone Works` , 'Door - Silicone Works'\r\n            UNION ALL SELECT Signage , 'Signage'\r\n            UNION ALL SELECT `Nosing Installation` , 'Nosing Installation'\r\n            UNION ALL SELECT `Handrail Painting` , 'Handrail Painting'\r\n            UNION ALL SELECT `Preparation for Final Coat Paint` , 'Preparation for Final Coat Paint'\r\n            UNION ALL SELECT `MEP Final Fixtures Installation` , 'MEP Final Fixtures Installation'\r\n            UNION ALL SELECT `Final Coat Paint` , 'Final Coat Paint'\r\n            UNION ALL SELECT `Staircase Pressurization` , 'Staircase Pressurization'\r\n        )\r\n        as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_STAIRCASE_MAP OPSM\r\n    ON Column_Name.Type_of_work = OPSM.ACTIVITY_SEQUENCE\r\n    WHERE Column_Name.value IS NOT NULL AND (TRIM(OPSR.`Level`) NOT IN ('') AND OPSR.`Level` IS NOT NULL)\r\n        ),\r\nSTAGGING AS (\r\n    SELECT \r\n        CD.Upload_Date,\r\n        CD.project_id,\r\n        CD.tower,\r\n        CD.`Level`,\r\n        CD.`Stair Case No`,\r\n        CD.sclicer,\r\n        CASE \r\n            WHEN TRIM(CD.value) IN ('','NA') THEN '0%'\r\n            ELSE CD.value\r\n        END AS value,\r\n        CD.Type_of_work,\r\n        CD.ACTIVITY_ID,\r\n        CD.SBU_ID,\r\n        CD.Category,\r\n        OLMA.level_map\r\n    FROM CLEANING_DATA CD \r\n        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n            ON CD.`Level` = OLMA.`level`\r\n    WHERE CD.Project_Udate_DRANK = 1\r\n)\r\nSELECT \r\n    CD.Upload_Date,\r\n    CD.project_id,\r\n    CD.tower,\r\n    CD.`Level`,\r\n    CD.`Stair Case No`,\r\n    CD.sclicer,\r\n    CAST(REPLACE(CD.value,'%','') AS DECIMAL(4,0))/100 AS value,\r\n    CD.Type_of_work,\r\n    CD.ACTIVITY_ID,\r\n    CD.SBU_ID,\r\n    CD.Category,\r\n    CD.level_map,\r\n    CASE \r\n        WHEN TRIM(CD.CATEGORY) IN('MEP') THEN  8\r\n        WHEN TRIM(CD.CATEGORY) IN('Builders Work') THEN  2\r\n        WHEN TRIM(CD.CATEGORY) IN('Plaster') THEN  3\r\n        WHEN TRIM(CD.CATEGORY) IN('Paint') THEN  9\r\n        WHEN TRIM(CD.CATEGORY) IN('Handrail') THEN  4\r\n        WHEN TRIM(CD.CATEGORY) IN('Marble') THEN  5\r\n        WHEN TRIM(CD.CATEGORY) IN('Joinery') THEN  6\r\n        WHEN TRIM(CD.CATEGORY) IN('Signage') THEN  7\r\n        WHEN TRIM(CD.CATEGORY) IN('PMT') THEN  1\r\n        ELSE 10\r\n    END AS CATEGORY_SORT\r\nFROM STAGGING CD;\r\n\r\n/**/\r\n\r\nSELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Engineering Drawing",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE f_pln_engineeringdrawing;\r\nINSERT INTO f_pln_engineeringdrawing\r\nWITH AA AS (\r\n    SELECT \r\n        DATE(upload_time) AS Upload_Date,\r\n        project_id,\r\n        `Type`,\r\n        `Villa Type`,\r\n        Category,\r\n        `Drawing Number`,\r\n        `Drawing Title`,\r\n        NULLIF(`Scheduled Date`,'') AS `Scheduled Date`,\r\n        `PNCA commitment`,\r\n        DENSE_RANK () OVER (PARTITION BY  project_id ORDER BY  DATE(upload_time) DESC) Project_Udate_DRANK,\r\n        NULLIF(R0,'') AS R0,\r\n        NULLIF(`R0-Trans_Id`,'') AS `R0-Trans_Id`,\r\n        NULLIF(R1,'') AS R1,\r\n        NULLIF(`R1-Trans_Id`,'') AS `R1-Trans_Id`,\r\n        NULLIF(R2,'') AS R2,\r\n        NULLIF(`R2-Trans_Id`,'') AS `R2-Trans_Id`,\r\n        NULLIF(R3,'') AS R3,\r\n        NULLIF(`R3-Trans_Id`,'') AS `R3-Trans_Id`,\r\n        NULLIF(R4,'') AS R4,\r\n        NULLIF(`R4-Trans_Id`,'') AS `R4-Trans_Id`,\r\n        NULLIF(R5,'') AS R5,\r\n        NULLIF(`R5-Trans_Id`,'') AS `R5-Trans_Id`,\r\n        NULLIF(R6,'') AS R6,\r\n        NULLIF(`R6-Trans_Id`,'') AS `R6-Trans_Id`,\r\n        NULLIF(R7,'') AS R7,\r\n        NULLIF(`R7-Trans_Id`,'') AS `R7-Trans_Id`,\r\n        NULLIF(R8,'') AS R8,\r\n        NULLIF(`R8-Trans_Id`,'') AS `R8-Trans_Id`,\r\n        NULLIF(R9,'') AS R9,\r\n        NULLIF(`R9-Trans_Id`,'') AS `R9-Trans_Id`,\r\n        NULLIF(R10,'') AS R10,\r\n        NULLIF(`R10-Trans_Id`,'') AS `R10-Trans_Id`,\r\n        NULLIF(R11,'') AS R11,\r\n        NULLIF(`R11-Trans_Id`,'') AS `R11-Trans_Id`,\r\n        NULLIF(R12,'') AS R12,\r\n        NULLIF(`R12-Trans_Id`,'') AS `R12-Trans_Id`,\r\n        NULLIF(R11,'') AS R13,\r\n        NULLIF(`R11-Trans_Id`,'') AS `R13-Trans_Id`,\r\n        NULLIF(R12,'') AS R14,\r\n        NULLIF(`R12-Trans_Id`,'') AS `R14-Trans_Id`,\r\n        NULLIF(R13,'') AS R15,\r\n        NULLIF(`R13-Trans_Id`,'') AS `R15-Trans_Id`,\r\n        NULLIF(R14,'') AS R16,\r\n        NULLIF(`R14-Trans_Id`,'') AS `R16-Trans_Id`,\r\n        NULLIF(R15,'') AS R17,\r\n        NULLIF(`R15-Trans_Id`,'') AS `R17-Trans_Id`,\r\n        NULLIF(R16,'') AS R18,\r\n        NULLIF(`R16-Trans_Id`,'') AS `R18-Trans_Id`,\r\n        NULLIF(R17,'') AS R19,\r\n        NULLIF(`R17-Trans_Id`,'') AS `R19-Trans_Id`,\r\n        NULLIF(R18,'') AS R20,\r\n        NULLIF(`R18-Trans_Id`,'') AS `R20-Trans_Id`,\r\n        NULLIF(R19,'') AS R21,\r\n        NULLIF(`R19-Trans_Id`,'') AS `R21-Trans_Id`,\r\n        NULLIF(R20,'') AS R22,\r\n        NULLIF(`R20-Trans_Id`,'') AS `R22-Trans_Id`,\r\n        NULLIF(R21,'') AS R23,\r\n        NULLIF(`R21-Trans_Id`,'') AS `R23-Trans_Id`,\r\n        NULLIF(R22,'') AS R24,\r\n        NULLIF(`R22-Trans_Id`,'') AS `R24-Trans_Id`,\r\n        NULLIF(R23,'') AS R25,\r\n        NULLIF(`R23-Trans_Id`,'') AS `R25-Trans_Id`\r\n    FROM O_PLN_DRAWING_DETAIL_DRAW\r\n    WHERE (`Type` IS NOT NULL AND TRIM(`Type`) NOT IN (''))),\r\nAB AS (\r\nSELECT * FROM AA\r\nWHERE Project_Udate_DRANK = 1) SELECT * FROM  AB;\r\n\r\n/**/\r\n\r\nSELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Drawing 2",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Engineering Drawing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE f_pln_drawing2;\r\nINSERT INTO f_pln_drawing2\r\nWITH Main_Filters AS (\r\n    SELECT * FROM O_PLN_DRAWING_DETAIL_DRAW\r\n        WHERE ((`Type` IS NOT NULL AND TRIM(`Type`) NOT IN (''))\r\n            OR (Category IS NOT NULL AND TRIM(Category) NOT IN (''))\r\n            OR (`Drawing Number` IS NOT NULL AND TRIM(`Drawing Number`) NOT IN (''))\r\n            OR (`Drawing Title` IS NOT NULL AND TRIM(`Drawing Title`) NOT IN ('')))),\r\nPRILIMINARY_DATE_CORRECTOR AS (\r\n    SELECT\r\n        *,\r\n        CASE\r\n            WHEN MF.`Scheduled Date` IS NULL AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN MF.`Scheduled Date` IS NULL AND (MF.R0 IS NULL OR MF.R0 IN (''))    THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) IN ('') AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) IN ('') AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '00/%' AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '00/%' AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '%-00' AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '%-00' AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            ELSE MF.`Scheduled Date`\r\n        END AS 'Remastered'\r\n    FROM Main_Filters MF),\r\nUNPIVOTING_DATA AS (\r\n    SELECT\r\n        DATE(PDC.upload_time) AS Upload_Date,\r\n        PDC.project_id,\r\n        PDC.sbu_id,\r\n        PDC.`Type`,\r\n        PDC.`Villa Type`,\r\n        PDC.Category,\r\n        PDC.`Drawing Number`,\r\n        PDC.`Drawing Title`,\r\n        CASE\r\n            WHEN PDC.Remastered IS NULL OR TRIM(PDC.Remastered) = '' THEN NULL\r\n            ELSE STR_TO_DATE(PDC.Remastered,'%d-%b-%y')\r\n        END AS `Scheduled Date`,\r\n        PDC.`PNCA commitment`,\r\n        ColumnName.*,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                    ORDER BY  DATE(upload_time) DESC\r\n                    )     Project_Update_DRANK\r\n    FROM PRILIMINARY_DATE_CORRECTOR PDC\r\n    CROSS JOIN LATERAL (\r\n            SELECT 'R0' , R0, `R0-Trans_Id`\r\n                UNION ALL SELECT  'R9' , R9, `R9-Trans_Id`\r\n                UNION ALL SELECT  'R8' , R8, `R8-Trans_Id`\r\n                UNION ALL SELECT  'R7' , R7, `R7-Trans_Id`\r\n                UNION ALL SELECT  'R6' , R6, `R6-Trans_Id`\r\n                UNION ALL SELECT  'R5' , R5, `R5-Trans_Id`\r\n                UNION ALL SELECT  'R4' , R4, `R4-Trans_Id`\r\n                UNION ALL SELECT  'R3' , R3, `R3-Trans_Id`\r\n                UNION ALL SELECT  'R25' , R25, `R25-Trans_Id`\r\n                UNION ALL SELECT  'R24' , R24, `R24-Trans_Id`\r\n                UNION ALL SELECT  'R23' , R23, `R23-Trans_Id`\r\n                UNION ALL SELECT  'R22' , R22, `R22-Trans_Id`\r\n                UNION ALL SELECT  'R21' , R21, `R21-Trans_Id`\r\n                UNION ALL SELECT  'R20' , R20, `R20-Trans_Id`\r\n                UNION ALL SELECT  'R2' , R2, `R2-Trans_Id`\r\n                UNION ALL SELECT  'R19' , R19, `R19-Trans_Id`\r\n                UNION ALL SELECT  'R18' , R18, `R18-Trans_Id`\r\n                UNION ALL SELECT  'R17' , R17, `R17-Trans_Id`\r\n                UNION ALL SELECT  'R16' , R16, `R16-Trans_Id`\r\n                UNION ALL SELECT  'R15' , R15, `R15-Trans_Id`\r\n                UNION ALL SELECT  'R14' , R14, `R14-Trans_Id`\r\n                UNION ALL SELECT  'R13' , R13, `R13-Trans_Id`\r\n                UNION ALL SELECT  'R12' , R12, `R12-Trans_Id`\r\n                UNION ALL SELECT  'R11' , R11, `R11-Trans_Id`\r\n                UNION ALL SELECT  'R10' , R10, `R10-Trans_Id`\r\n                UNION ALL SELECT  'R1' , R1, `R1-Trans_Id`\r\n    ) AS ColumnName(Revesion,Revesion_Date,`Revesion ID`)\r\n    WHERE (Revesion_Date IS NOT NULL AND TRIM(Revesion_Date) NOT IN (''))\r\n            OR Revesion = 'R0'\r\n    ORDER BY `Scheduled Date`),\r\nCleaned_Data AS (\r\n    SELECT\r\n        UPD.Project_Update_DRANK,\r\n        UPD.Upload_Date,\r\n        UPD.project_id,\r\n        UPD.sbu_id,\r\n        UPD.`Type`,\r\n        UPD.`Villa Type`,\r\n        UPD.Category,\r\n        UPD.`Drawing Number`,\r\n        UPD.`Drawing Title`,\r\n        UPD.`Scheduled Date`,\r\n        UPD.`PNCA commitment`,\r\n        UPD.Revesion,\r\n        CASE\r\n            WHEN TRIM(UPD.Revesion_Date) LIKE '%-00' THEN NULL\r\n            WHEN TRIM(UPD.Revesion_Date) LIKE '00/%' THEN NULL\r\n            WHEN TRIM(UPD.Revesion_Date) IN ('') THEN NULL\r\n            ELSE TRIM(UPD.Revesion_Date)\r\n        END AS Revesion_Date,\r\n        CASE\r\n            WHEN TRIM(UPD.`Revesion ID`) LIKE '%-00' THEN NULL\r\n            WHEN TRIM(UPD.`Revesion ID`) LIKE '00/%' THEN NULL\r\n            WHEN TRIM(UPD.`Revesion ID`) IN ('') THEN NULL\r\n            ELSE TRIM(UPD.`Revesion ID`)\r\n        END AS `Revesion ID`\r\n    FROM\r\n        UNPIVOTING_DATA UPD),\r\nCleaned_Data_Final AS (\r\n    SELECT\r\n        CD.Project_Update_DRANK,\r\n        CD.Upload_Date,\r\n        CD.project_id,\r\n        CD.`Type`,\r\n        CD.Category,\r\n        CD.`Drawing Number`,\r\n        CD.Revesion,\r\n        CASE\r\n            WHEN TRIM(CD.Revesion) NOT IN ('R0','R1','R2','R3') THEN '>3 Revesions'\r\n            ELSE CD.Revesion\r\n        END AS `Revesion Corrected`,\r\n        STR_TO_DATE(CD.Revesion_Date,'%d-%b-%y') AS Revesion_Date\r\n    FROM Cleaned_Data CD\r\n    WHERE (CD.`Revesion_Date` IS NOT NULL\r\n            OR CD.`Revesion ID` IS NOT NULL)),\r\nRevesion_Data AS (\r\n    SELECT\r\n        Upload_Date,\r\n        project_id,\r\n        `Type`,\r\n        Category,\r\n        `Drawing Number`,\r\n        Revesion,\r\n        CASE\r\n            WHEN TRIM(Revesion) NOT IN ('R0','R1','R2','R3') THEN '>3 Revesions'\r\n            ELSE Revesion\r\n        END AS `Revesion Corrected`,\r\n        Revesion_Date,\r\n        COUNT(Revesion) AS Revision_Count,\r\n--         LAG(Revesion_Date) over(partition by `Drawing Number` order by Revesion,Revesion_Date) as Next_Date,\r\n        DATEDIFF(Revesion_Date,LAG(Revesion_Date) over(partition by `Drawing Number` order by Revesion,Revesion_Date)) as LAG_DIFFERENCE,\r\n        Project_Update_DRANK\r\n    FROM Cleaned_Data_Final\r\n    WHERE Project_Update_DRANK = 1\r\n    GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2,3,4,5,6)\r\n    SELECT * FROM Revesion_Data;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Drawing",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Drawing 2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE f_pln_drawing;\r\nINSERT INTO f_pln_drawing\r\nWITH Main_Filters AS (\r\nSELECT * FROM O_PLN_DRAWING_DETAIL_DRAW\r\n    WHERE ((`Type` IS NOT NULL AND TRIM(`Type`) NOT IN (''))\r\n        OR (Category IS NOT NULL AND TRIM(Category) NOT IN (''))\r\n        OR (`Drawing Number` IS NOT NULL AND TRIM(`Drawing Number`) NOT IN (''))\r\n        OR (`Drawing Title` IS NOT NULL AND TRIM(`Drawing Title`) NOT IN ('')))),\r\n-- Date_Corrector_Main AS\r\nPRILIMINARY_DATE_CORRECTOR AS (\r\n    SELECT\r\n        *,\r\n        CASE\r\n            WHEN MF.`Scheduled Date` IS NULL AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN MF.`Scheduled Date` IS NULL AND (MF.R0 IS NULL OR MF.R0 IN (''))    THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) IN ('') AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) IN ('') AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '00/%' AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '00/%' AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '%-00' AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '%-00' AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            ELSE MF.`Scheduled Date`\r\n        END AS 'Remastered'\r\n    FROM Main_Filters MF),\r\nUNPIVOTING_DATA AS (\r\n    SELECT\r\n        DATE(PDC.upload_time) AS Upload_Date,\r\n        PDC.project_id,\r\n        PDC.sbu_id,\r\n        PDC.`Type`,\r\n        PDC.`Villa Type`,\r\n        PDC.Category,\r\n        PDC.`Drawing Number`,\r\n        PDC.`Drawing Title`,\r\n        CASE\r\n            WHEN PDC.Remastered IS NULL OR TRIM(PDC.Remastered) = '' THEN NULL\r\n            ELSE STR_TO_DATE(PDC.Remastered,'%d-%b-%y')\r\n        END AS `Scheduled Date`,\r\n        PDC.`PNCA commitment`,\r\n        ColumnName.*,\r\n        DENSE_RANK () OVER(PARTITION BY  PDC.project_id\r\n        ORDER BY  DATE(PDC.upload_time) DESC\r\n        )D_RANK\r\n    FROM PRILIMINARY_DATE_CORRECTOR PDC\r\n    CROSS JOIN LATERAL (\r\n            SELECT 'R0' , R0, `R0-Trans_Id`\r\n                UNION ALL SELECT  'R9' , R9, `R9-Trans_Id`\r\n                UNION ALL SELECT  'R8' , R8, `R8-Trans_Id`\r\n                UNION ALL SELECT  'R7' , R7, `R7-Trans_Id`\r\n                UNION ALL SELECT  'R6' , R6, `R6-Trans_Id`\r\n                UNION ALL SELECT  'R5' , R5, `R5-Trans_Id`\r\n                UNION ALL SELECT  'R4' , R4, `R4-Trans_Id`\r\n                UNION ALL SELECT  'R3' , R3, `R3-Trans_Id`\r\n                UNION ALL SELECT  'R25' , R25, `R25-Trans_Id`\r\n                UNION ALL SELECT  'R24' , R24, `R24-Trans_Id`\r\n                UNION ALL SELECT  'R23' , R23, `R23-Trans_Id`\r\n                UNION ALL SELECT  'R22' , R22, `R22-Trans_Id`\r\n                UNION ALL SELECT  'R21' , R21, `R21-Trans_Id`\r\n                UNION ALL SELECT  'R20' , R20, `R20-Trans_Id`\r\n                UNION ALL SELECT  'R2' , R2, `R2-Trans_Id`\r\n                UNION ALL SELECT  'R19' , R19, `R19-Trans_Id`\r\n                UNION ALL SELECT  'R18' , R18, `R18-Trans_Id`\r\n                UNION ALL SELECT  'R17' , R17, `R17-Trans_Id`\r\n                UNION ALL SELECT  'R16' , R16, `R16-Trans_Id`\r\n                UNION ALL SELECT  'R15' , R15, `R15-Trans_Id`\r\n                UNION ALL SELECT  'R14' , R14, `R14-Trans_Id`\r\n                UNION ALL SELECT  'R13' , R13, `R13-Trans_Id`\r\n                UNION ALL SELECT  'R12' , R12, `R12-Trans_Id`\r\n                UNION ALL SELECT  'R11' , R11, `R11-Trans_Id`\r\n                UNION ALL SELECT  'R10' , R10, `R10-Trans_Id`\r\n                UNION ALL SELECT  'R1' , R1, `R1-Trans_Id`\r\n    ) AS ColumnName(Revesion,Revesion_Date,`Revesion ID`)\r\n    WHERE (Revesion_Date IS NOT NULL AND TRIM(Revesion_Date) NOT IN (''))\r\n            OR Revesion = 'R0'\r\n    ORDER BY `Scheduled Date`),\r\nTotal_Drawings AS (\r\n        SELECT\r\n            UPD.project_id,\r\n            UPD.`Type`,\r\n        UPD.Category,\r\n        EXTRACT(MONTH FROM UPD.`Scheduled Date`) AS Total_Drawings_Month,\r\n        EXTRACT(YEAR FROM UPD.`Scheduled Date`) AS Total_Drawings_year,\r\n        COUNT(UPD.`Drawing Number`) Total_Drawings\r\n    FROM UNPIVOTING_DATA UPD\r\n    WHERE UPD.Revesion='R0'\r\n    GROUP BY 1,2,3,4,5),\r\nPlan_Drawings AS (\r\n    SELECT\r\n        UPD.project_id,\r\n        UPD.`Type`,\r\n        UPD.Category,\r\n        EXTRACT(MONTH FROM UPD.`Scheduled Date`) AS Plan_Drawings_Month,\r\n        EXTRACT(YEAR FROM UPD.`Scheduled Date`) AS Plan_Drawings_year,\r\n        COUNT(UPD.`Drawing Number`) Plan_Drawings\r\n    FROM UNPIVOTING_DATA UPD\r\n    WHERE UPD.Revesion='R0'\r\n        AND UPD.`Scheduled Date` <= Upload_Date\r\n    GROUP BY 1,2,3,4,5),\r\nCLEANED_DATA_FOR_ACTUALS AS (\r\n    SELECT\r\n        UD.Upload_Date,\r\n        UD.project_id,\r\n        UD.`Type`,\r\n        UD.`Villa Type`,\r\n        UD.Category,\r\n        UD.`Drawing Number`,\r\n        UD.`Drawing Title`,\r\n        UD.`Scheduled Date`,\r\n        UD.`PNCA commitment`,\r\n        UD.Revesion,\r\n        CASE\r\n            WHEN UD.Revesion_Date LIKE '00/%' THEN NULL\r\n            WHEN UD.Revesion_Date LIKE '%-00' THEN NULL\r\n            WHEN UD.Revesion_Date IS NULL OR TRIM(UD.Revesion_Date) = '' THEN NULL\r\n            ELSE STR_TO_DATE(UD.Revesion_Date,'%d-%b-%y')\r\n        END AS Revesion_Date,        \r\n        UD.`Revesion ID`\r\n    FROM UNPIVOTING_DATA UD\r\n    ORDER BY Revesion_Date),\r\nActuals_Drawings AS (\r\n    SELECT\r\n        UPD.project_id,\r\n        UPD.`Type`,\r\n        UPD.Category,\r\n        EXTRACT(MONTH FROM UPD.Revesion_Date) AS Actuals_Drawings_Month,\r\n        EXTRACT(YEAR FROM UPD.Revesion_Date) AS Actuals_Drawings_year,\r\n        COUNT(UPD.`Drawing Number`) Actuals_Drawings\r\n    FROM CLEANED_DATA_FOR_ACTUALS UPD\r\n    WHERE UPD.Revesion='R0'\r\n        AND UPD.`Scheduled Date` <= Upload_Date\r\n        AND (UPD.Revesion_Date IS NOT NULL AND TRIM(UPD.Revesion_Date) NOT IN (''))\r\n    GROUP BY 1,2,3,4,5),\r\nDate_Dimention AS (\r\n    SELECT\r\n        REPLACE(DD.`year`,',','')  AS`year`,\r\n        DD.`month`,\r\n        DD.quarter\r\n    FROM Date_Dimention DD\r\n    WHERE     DD.`year` <= YEAR(CURRENT_DATE())\r\n        AND DD.`year` >= YEAR(CURRENT_DATE())-1\r\n        GROUP BY 1,2,3\r\n    ),\r\n   COMOUND_KEY_STAGGING AS (\r\n        SELECT\r\n            project_id,\r\n            `Type`,\r\n           Category,\r\n           Upload_Date\r\n    FROM UNPIVOTING_DATA\r\n    where D_RANK = 1 GROUP BY 1,2,3,4),\r\nCOMPOUND_KEY AS (\r\n    SELECT\r\n        *\r\n    FROM COMOUND_KEY_STAGGING\r\n        CROSS JOIN Date_Dimention\r\n    ORDER BY 1,2,3,4,5,6),\r\nOUTPUT_ AS (\r\n    SELECT\r\n        C.*,\r\n        TD.Total_Drawings,\r\n        PD.Plan_Drawings,\r\n        AD.Actuals_Drawings,\r\n        (IFNULL(PD.Plan_Drawings,0)-IFNULL(AD.Actuals_Drawings,0)) AS ShortFall_Drawings\r\n    FROM\r\n        COMPOUND_KEY C\r\n        LEFT JOIN Total_Drawings TD\r\n            ON C.project_id = TD.project_id\r\n            AND C.`Type` = TD.`Type`\r\n            AND C.Category = TD.Category\r\n            AND C.`month` = TD.Total_Drawings_Month\r\n            AND C.`year` = TD.Total_Drawings_year\r\n        LEFT JOIN Plan_Drawings PD\r\n            ON C.project_id = PD.project_id\r\n            AND C.`Type` = PD.`Type`\r\n            AND C.Category = PD.Category\r\n            AND C.`month` = PD.Plan_Drawings_Month\r\n            AND C.`year` = PD.Plan_Drawings_year\r\n        LEFT JOIN Actuals_Drawings AD\r\n            ON C.project_id = AD.project_id\r\n            AND C.`Type` = AD.`Type`\r\n            AND C.Category = AD.Category\r\n            AND C.`month` = AD.Actuals_Drawings_Month\r\n            AND C.`year` = AD.Actuals_Drawings_year)\r\n    SELECT\r\n        Upload_Date,\r\n         project_id,\r\n        `Type`,\r\n        Category,\r\n        `year`,\r\n        quarter,\r\n        `month`,\r\n        CASE\r\n            WHEN `month` = 1 THEN 'Jan'\r\n            WHEN `month` = 2 THEN 'Feb'\r\n            WHEN `month` = 3 THEN 'Mar'\r\n            WHEN `month` = 4 THEN 'Apr'\r\n            WHEN `month` = 5 THEN 'May'\r\n            WHEN `month` = 6 THEN 'Jun'\r\n            WHEN `month` = 7 THEN 'Jul'\r\n            WHEN `month` = 8 THEN 'Aug'\r\n            WHEN `month` = 9 THEN 'Sep'\r\n            WHEN `month` = 10 THEN 'Oct'\r\n            WHEN `month` = 11 THEN 'Nov'\r\n            WHEN `month` = 12 THEN 'Dec'\r\n        END AS `Month Text`,\r\n        Total_Drawings,\r\n        Plan_Drawings,\r\n        Actuals_Drawings,\r\n        ShortFall_Drawings\r\n    FROM OUTPUT_\r\n        WHERE\r\n            (Total_Drawings IS NOT NULL\r\n                OR Plan_Drawings IS NOT NULL\r\n                OR Actuals_Drawings IS NOT NULL);\r\n\r\n/**/\r\n\r\nSELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2022-12-12T07:02:14Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}