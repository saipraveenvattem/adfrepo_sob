{
	"name": "PL_Pln_Daily",
	"properties": {
		"activities": [
			{
				"name": "Structures",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE f_pln_structures;\r\nINSERT INTO f_pln_structures\r\n     WITH POUR_RAW AS (\r\n        SELECT\r\n            DATE(upload_time) as Upload_Date,\r\n            project_id,\r\n            `Level`,\r\n            Column_Name.*,\r\n            DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(upload_time) DESC) as `DENSE_RANK` \r\n        FROM O_PLN_STRUCTURE_POURING\r\n        cross join lateral (\r\n                            SELECT `Core Wall 1` , 'Core Wall 1'\r\n                            UNION ALL SELECT `Core Wall 2` , 'Core Wall 2'\r\n                            UNION ALL SELECT `Core Wall 3` , 'Core Wall 3'\r\n                            UNION ALL SELECT `Core Wall 4` , 'Core Wall 4'\r\n                            UNION ALL SELECT `Core Wall 5` , 'Core Wall 5'\r\n                            UNION ALL SELECT `Core Wall 6` , 'Core Wall 6'\r\n                            UNION ALL SELECT `Core Wall 7` , 'Core Wall 7'\r\n                            UNION ALL SELECT `Core Wall 8` , 'Core Wall 8'\r\n                            UNION ALL SELECT `Core Wall 9` , 'Core Wall 9'\r\n                            UNION ALL SELECT `Core Wall 10` , 'Core Wall 10'\r\n                            UNION ALL SELECT `Core Wall 11` , 'Core Wall 11'\r\n                            UNION ALL SELECT `Core Wall 12` , 'Core Wall 12'\r\n                            UNION ALL SELECT `Core Wall 13` , 'Core Wall 13'\r\n                            UNION ALL SELECT `Core Wall 14` , 'Core Wall 14'\r\n                            UNION ALL SELECT `Core Wall 15` , 'Core Wall 15'\r\n                            UNION ALL SELECT `Core Wall 16` , 'Core Wall 16'\r\n                            UNION ALL SELECT `Core Wall 17` , 'Core Wall 17'\r\n                            UNION ALL SELECT `Core Wall 18` , 'Core Wall 18'\r\n                            UNION ALL SELECT `Core Wall 19` , 'Core Wall 19'\r\n                            UNION ALL SELECT `Core Wall 20` , 'Core Wall 20'\r\n                            UNION ALL SELECT `Slab 1` , 'Slab 1'\r\n                            UNION ALL SELECT `Slab 2` , 'Slab 2'\r\n                            UNION ALL SELECT `Slab 3` , 'Slab 3'\r\n                            UNION ALL SELECT `Slab 4` , 'Slab 4'\r\n                            UNION ALL SELECT `Slab 5` , 'Slab 5'\r\n                            UNION ALL SELECT `Slab 6` , 'Slab 6'\r\n                            UNION ALL SELECT `Slab 7` , 'Slab 7'\r\n                            UNION ALL SELECT `Slab 8` , 'Slab 8'\r\n                            UNION ALL SELECT `Slab 9` , 'Slab 9'\r\n                            UNION ALL SELECT `Slab 10` , 'Slab 10'\r\n                            UNION ALL SELECT `Slab 11` , 'Slab 11'\r\n                            UNION ALL SELECT `Slab 12` , 'Slab 12'\r\n                            UNION ALL SELECT `Slab 13` , 'Slab 13'\r\n                            UNION ALL SELECT `Slab 14` , 'Slab 14'\r\n                            UNION ALL SELECT `Slab 15` , 'Slab 15'\r\n                            UNION ALL SELECT `Slab 16` , 'Slab 16'\r\n                            UNION ALL SELECT `Slab 17` , 'Slab 17'\r\n                            UNION ALL SELECT `Slab 18` , 'Slab 18'\r\n                            UNION ALL SELECT `Slab 19` , 'Slab 19'\r\n                            UNION ALL SELECT `Slab 20` , 'Slab 20'\r\n                            UNION ALL SELECT `Staircase 1` , 'Staircase 1'\r\n                            UNION ALL SELECT `Staircase 2` , 'Staircase 2'\r\n                            UNION ALL SELECT `Staircase 3` , 'Staircase 3'\r\n                            UNION ALL SELECT `Staircase 4` , 'Staircase 4'\r\n                            UNION ALL SELECT `Staircase 5` , 'Staircase 5'\r\n                            UNION ALL SELECT `Staircase 6` , 'Staircase 6'\r\n                            UNION ALL SELECT `Staircase 7` , 'Staircase 7'\r\n                            UNION ALL SELECT `Staircase 8` , 'Staircase 8'\r\n                            UNION ALL SELECT `Staircase 9` , 'Staircase 9'\r\n                            UNION ALL SELECT `Staircase 10` , 'Staircase 10'\r\n                            UNION ALL SELECT `Staircase 11` , 'Staircase 11'\r\n                            UNION ALL SELECT `Staircase 13` , 'Staircase 13'\r\n                            UNION ALL SELECT `Staircase 14` , 'Staircase 14'\r\n                            UNION ALL SELECT `Staircase 15` , 'Staircase 15'\r\n                            UNION ALL SELECT `Staircase 16` , 'Staircase 16'\r\n                            UNION ALL SELECT `Staircase 17` , 'Staircase 17'\r\n                            UNION ALL SELECT `Staircase 18` , 'Staircase 18'\r\n                            UNION ALL SELECT `Staircase 19` , 'Staircase 19'\r\n                            UNION ALL SELECT `Staircase 20` , 'Staircase 20'\r\n                        )as Column_Name(value,\r\n                        `Pour`) WHERE value IS NOT NULL AND TRIM(value) not in ('')),\r\n    PRE_STAGGING_POUR AS (\r\n                            SELECT\r\n                                PR.Upload_Date,\r\n                                PR.project_id,\r\n                                OPSPM.Project_Identifier,\r\n                                PR.`Level`,\r\n                                STR_TO_DATE(PR.value,'%d-%b-%y') AS value,\r\n                                PR.Pour,\r\n                                OPSPM.Pour_count,\r\n                                OPSPM.area,\r\n                                OPSPM.Sequence_of_Appearance,\r\n                                OPSPM.type_of_pour,\r\n                                OPSPM.Sort_ID\r\n                            FROM POUR_RAW PR \r\n                                LEFT JOIN (SELECT \r\n                                                * \r\n                                            FROM O_PLN_STRUCTURES_POUR_MAP OPSPM \r\n                                                LEFT JOIN PROJECTS P \r\n                                                    ON OPSPM.project_id = P.Project_Identifier) AS OPSPM\r\n                                ON PR.POUR = OPSPM.type_of_pour \r\n                                    AND PR.project_id = OPSPM.Project_Identifier\r\n                                WHERE `DENSE_RANK` = 1 ORDER BY 1,2),\r\n    PRE_STAGGING_DATEDIFF AS (\r\n                            SELECT \r\n                                PS.Project_Identifier, \r\n                                PS.area,\r\n                                PS.`LEVEL`, \r\n                                PS.Pour,\r\n                                PS.value,\r\n                                LAG(PS.VALUE) over(partition by PS.Project_Identifier,PS.Pour order by PS.Pour,value) as Next_Date,\r\n                                DATEDIFF(PS.value,LAG(PS.VALUE) over(partition by PS.Project_Identifier,PS.Pour order by PS.Pour,PS.value)) as sa\r\n                            FROM PRE_STAGGING_POUR PS \r\n                                WHERE LOWER(PS.Pour) like 'slab%' \r\n--                                     AND LOWER(PS.`level`) NOT LIKE 'grade%' \r\n                                        ORDER BY PS.Pour,PS.value)\r\n    SELECT\r\n        PSP.Upload_Date,\r\n        PSP.Project_id as Project_Identifier,\r\n        PSP.area,\r\n        OLMA.level_map,\r\n        PSP.`Level`,\r\n        PSP.Pour_count,\r\n        PSP.Pour,\r\n        PSP.Sequence_of_Appearance,\r\n        PSP.value,\r\n        PSD.Next_Date,\r\n        PSD.sa as Avg_days,\r\n        CASE \r\n            WHEN PSP.area = 'Tower' THEN     1\r\n            WHEN PSP.area = 'Podium' THEN     2\r\n            WHEN PSP.area = 'Podium-TA' THEN 3\r\n            WHEN PSP.area = 'Tower A' THEN     4\r\n            WHEN PSP.area = 'Podium-TB' THEN 5\r\n            WHEN PSP.area = 'Tower B' THEN     6\r\n            WHEN PSP.area = 'Tower C' THEN     7\r\n            WHEN PSP.area = 'Tower D' THEN     8\r\n        ELSE NULL\r\n        END AS View_Map,\r\n        CASE \r\n            WHEN PSP.value < CURRENT_DATE() THEN 1\r\n            ELSE 0\r\n        END AS value_Average\r\n    FROM PRE_STAGGING_POUR PSP\r\n    LEFT JOIN PRE_STAGGING_DATEDIFF PSD \r\n        ON PSP.Project_Identifier = PSD.Project_Identifier\r\n        AND PSP.Pour = PSD.Pour\r\n        AND PSP.value = PSD.value\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA ON \r\n    PSP.`Level` = OLMA.`level` order by 1,2,3,4,5,6,8;\r\n\r\n    /**/\r\n    SELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Wooden Door Delivery",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE door_delivery_m;\r\n\r\nINSERT INTO door_delivery_m\r\nWITH AA AS (\r\nSELECT \r\n    DATE(upload_time) AS Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    `Sr. No.`,\r\n    Building,\r\n    NULLIF(`Delivery Order No`,'') AS `Delivery Order No`,\r\n    NULLIF(`Delivery Date`,'') AS `Delivery Date`,\r\n    TRIM(`Door Type`) AS `Door Type`,\r\n    `Element`,\r\n    `Fire Rating`,\r\n    Orientation,\r\n--     `Quantity (Sets)`,\r\n--     `Quantity (Nos)`,\r\n    CASE \r\n        WHEN TRIM(`Element`) = 'Architrave' AND `Quantity (Nos)` NOT IN ('') THEN `Quantity (Nos)`/2\r\n        WHEN TRIM(`Element`) = 'Architrave' AND `Quantity (Nos)` IN ('') THEN `Quantity (Sets)`\r\n        WHEN TRIM(`Element`) != 'Architrave' THEN `Quantity (Nos)`\r\n    END AS ASA,    \r\n    Remarks,\r\n    Vendor,\r\n    DENSE_RANK () OVER(PARTITION BY project_id ORDER BY DATE(upload_time) DESC) AS AASD\r\nFROM O_PLN_DOOR_DELIVERY_RAW),\r\n    DATA_1 AS(\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        `Delivery Order No`,\r\n        `Delivery Date`,\r\n        `Door Type`,\r\n        `Element`,\r\n        Vendor,\r\n        sum(ASA),\r\n        MIN(ASA),\r\n       'Dates_Used' AS Used_Data\r\n    FROM AA WHERE AASD = 1 AND `Delivery Order No` IS NOT NULL\r\n    GROUP BY 1,2,3,4,5,6,7 ORDER BY 1,2,3,4,5,6),\r\n    Delivery AS (\r\n    SELECT \r\n        DATE(DD.Upload_time) AS Upload_Date,\r\n        DD.project_id,\r\n        TRIM(DD.`Door Type`) AS `Door Type`,\r\n        DD.`Element`,\r\n        DD.Vendor,\r\n        DD.`Delivery Order No`,\r\n        DD.`Delivery Date`,\r\n        DD.`Quantity (Sets)`,\r\n        DD.`Quantity (Nos)`, DENSE_RANK () OVER(PARTITION BY DD.project_id ORDER BY DATE(DD.Upload_time) desc) AS KASD\r\n    FROM O_PLN_DOOR_DELIVERY_RAW DD\r\n        WHERE `Door Type` NOT IN ('','-')),\r\n    Set_Count AS(\r\n            SELECT\r\n                D.Upload_Date,\r\n                D.project_id,\r\n                D.`Door Type`,\r\n                D.`Element`,\r\n                D.Vendor,\r\n                D.`Delivery Order No`,\r\n                D.`Delivery Date`,\r\n                SUM(D.`Quantity (Sets)`) AS Set_C,\r\n                SUM(D.`Quantity (Nos)`) AS Qty_C\r\n            FROM Delivery D WHERE KASD = 1 Group by 1,2,3,4,5,6,7),\r\n    FOR_Architrave AS(\r\n            SELECT \r\n                SC.Upload_Date,\r\n                SC.project_id,\r\n                SC.`Door Type`,\r\n                SC.`Element`,\r\n                SC.Vendor,\r\n                SC.`Delivery Order No`,\r\n                SC.`Delivery Date`,\r\n                SC.Set_C,\r\n                SC.Qty_C,\r\n                CASE WHEN `Element` = ('Architrave') THEN Qty_C/2 ELSE Qty_C END AS Qty_S\r\n            FROM Set_Count SC GROUP BY 1,2,3,4,5,6,7,8,9,10 order by 2),\r\n    Pre_Min_C AS(\r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Door Type`,\r\n                `Element`,\r\n                 Vendor,\r\n                 `Delivery Order No`,\r\n                `Delivery Date`,\r\n                Set_C + Qty_S AS Qty_Delivered\r\n            FROM FOR_Architrave GROUP BY 1,2,3,4,5,6,7 order by 2),\r\n    Min_Count AS(\r\n            SELECT \r\n                project_id,\r\n                `Door Type`,\r\n                MIN(Qty_Delivered) AS Total_Delivered\r\n            FROM Pre_Min_C\r\n            Group by 1,2 ORDER BY 2),\r\n    Pre_Final_Count AS (        \r\n            SELECT\r\n                PFC.Upload_Date,\r\n                PFC.project_id,\r\n                PFC.`Door Type`,\r\n                CASE WHEN PFC.`Door Type`= 'TD1' THEN '1'\r\n                     WHEN PFC.`Door Type`= 'TD2' THEN '2'\r\n                     WHEN  PFC.`Door Type`= 'TD3' THEN '3'\r\n                     WHEN  PFC.`Door Type`= 'TD4' THEN '4'\r\n                     WHEN  PFC.`Door Type`= 'TD5' THEN '5'\r\n                     WHEN  PFC.`Door Type`= 'TD6' THEN '6'\r\n                     WHEN   PFC.`Door Type`= 'TD7' THEN '7'\r\n                ELSE '0' End AS Sort_Data,      \r\n                PFC.`Element`,\r\n                PFC.Vendor,\r\n                PFC.`Delivery Order No`,\r\n                PFC.`Delivery Date`,\r\n                PFC.Qty_Delivered,\r\n                MC.Total_Delivered AS Total_Delivery\r\n            FROM Pre_Min_C PFC \r\n            LEFT JOIN Min_Count MC ON PFC.`Door Type` = MC.`Door Type`  and PFC.project_id = MC.project_id order by 2,3,4,5),\r\n    Final_ AS (        \r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Door Type`,\r\n                `Element`,\r\n                Vendor,\r\n                `Delivery Order No`,\r\n                `Delivery Date`,\r\n                Qty_Delivered,\r\n                LAG(Total_Delivery,2) OVER (PARTITION BY Sort_Data ORDER BY Total_Delivery,`Element`) Final_Delivery\r\n            FROM Pre_Final_Count),\r\n    DATA_2 AS (        \r\n        SELECT\r\n            Upload_Date,\r\n            project_id,\r\n            `Delivery Order No`,\r\n            `Delivery Date`,\r\n            `Door Type`,\r\n            `Element`,\r\n             Vendor,\r\n            Qty_Delivered AS `sum(ASA)`,\r\n            Final_Delivery AS `MIN(ASA)`,\r\n            'Total_Used'   AS Used_Data\r\n        FROM Final_),\r\n    FINAL_UNION\r\n    AS (\r\n    SELECT * FROM DATA_1\r\n    UNION ALL\r\n    SELECT * FROM DATA_2\r\n    ) SELECT * FROM FINAL_UNION;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Wooden Doors",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE f_wooden_door;\r\nINSERT INTO f_wooden_door\r\nWITH MANPOWER_DATA AS(\r\n            SELECT DATE(ddm.upload_time) AS Upload_Date,\r\n            ddm.project_id,\r\n            ddm.tower,\r\n            ddm.sbu_id,\r\n            ddm.`Date`,\r\n            OPDM.SC_NAME,\r\n            OPDM.SC_Short,\r\n            Column_Name.SCC,\r\n            CASE \r\n                WHEN TRIM(Column_Name.value) IN ('-','') THEN NULL\r\n                ELSE Column_Name.value\r\n            END AS value,\r\n            DENSE_RANK () OVER (PARTITION BY ddm.project_id ORDER BY  DATE(ddm.upload_time) DESC) _DRANK\r\n        FROM O_PLN_DOOR_MANPOWER ddm\r\n        CROSS JOIN LATERAL (\r\n                            SELECT `SC1` , 'SC1'\r\n                            UNION ALL SELECT  `SC2`,'SC2'\r\n                            UNION ALL SELECT  `SC3`,'SC3'\r\n                            UNION ALL SELECT  `SC4`,'SC4'\r\n                            UNION ALL SELECT  `SC5`,'SC5'\r\n                            UNION ALL SELECT  `SC6`,'SC6'\r\n                            UNION ALL SELECT  `SC7`,'SC7'\r\n                            UNION ALL SELECT  `SC8`,'SC8'\r\n                            UNION ALL SELECT  `SC9`,'SC9'\r\n                            UNION ALL SELECT  `SC10`,'SC10'\r\n                            UNION ALL SELECT  `SC11`,'SC11'\r\n                            UNION ALL SELECT  `SC12`,'SC12'\r\n                            UNION ALL SELECT  `SC13`,'SC13'\r\n                            UNION ALL SELECT  `SC14`,'SC14'\r\n                            UNION ALL SELECT  `SC15`,'SC15'\r\n                            UNION ALL SELECT  `SC16`,'SC16'\r\n                            UNION ALL SELECT  `SC17`,'SC17'\r\n                            UNION ALL SELECT  `SC18`,'SC18'\r\n                            UNION ALL SELECT  `SC19`,'SC19'\r\n                            UNION ALL SELECT  `SC20`,'SC20'\r\n                            )AS Column_Name(value,SCC)\r\n    JOIN O_PLN_DOORMANPOWER_MAP OPDM\r\n    ON Column_Name.SCC = OPDM.SC\r\n    AND ddm.project_id = OPDM.project_id\r\n    WHERE OPDM.SC_Short != ('')),\r\n    GROUPIN AS(\r\n        SELECT\r\n            MD.SC_NAME,\r\n            MD.SC_Short,\r\n            MD.project_id,\r\n            SUM(MD.value) AS Value_Total\r\n        FROM MANPOWER_DATA MD\r\n        WHERE _DRANK = 1 GROUP BY 1,2,3),\r\n        DOOR_ AS (    \r\n            SELECT\r\n                DATE (DI.upload_time) AS Upload_Date,\r\n                DI.project_id,\r\n                DI.tower,\r\n                DI.Building,\r\n                DI.`Type`,\r\n                DI.`Level`,\r\n                DI.`Flat No`,\r\n                DENSE_RANK () OVER(PARTITION BY  DI.project_id ORDER BY  DATE(DI.upload_time) DESC)D_RANK,\r\n                NULLIF (TRIM(DI.`Flat No_A`),'') AS `Flat No_A`,\r\n                NULLIF (TRIM(DI.`Door Type`),'') AS `Door Type`,\r\n                NULLIF (TRIM(DI.`Jamb Width`),'') AS `Jamb Width`,\r\n                NULLIF (TRIM(DI.Orientation),'') AS Orientation,\r\n                NULLIF (TRIM(DI.`Door Id`),'') AS `Door Id`,\r\n                NULLIF (TRIM(DI.`Fire Rating`),'') AS `Fire Rating`,\r\n                NULLIF (TRIM(DI.Frame),'') AS Frame,\r\n                NULLIF (TRIM(DI.Foam),'') AS Foam,\r\n                NULLIF (TRIM(DI.Architrave),'') AS Architrave,\r\n                NULLIF (TRIM(DI.Shutter),'') AS Shutter,\r\n                NULLIF (TRIM(DI.Ironmongery),'') AS Ironmongery,\r\n                NULLIF (TRIM(DI.Installer),'') AS Installer\r\n            FROM  O_PLN_DOOR_INSTALLATION_RAW DI),\r\n        SORTING AS (\r\n            SELECT\r\n                DR.Upload_Date,\r\n                DR.project_id,\r\n                DR.tower,\r\n                DR.Building,\r\n                DR.`Type`,\r\n                DR.`Level`,\r\n                DR.`Flat No`,\r\n                DR.`Flat No_A`,\r\n                DR.`Door Type`,\r\n                DR.`Jamb Width`,\r\n                DR.Orientation,\r\n                DR.`Door Id`,\r\n                DR.`Fire Rating`,\r\n                Frame,\r\n                Foam,\r\n                Architrave,\r\n                Shutter,\r\n                Ironmongery,\r\n                DR.Installer,\r\n                DR.D_RANK\r\n                FROM DOOR_ DR\r\n                WHERE D_RANK = 1),\r\n        DATA_DATE AS(\r\n                SELECT \r\n                Sort.Upload_Date,\r\n                Sort.project_id,\r\n                Sort.tower,\r\n                Sort.Building,\r\n                Sort.`Type`,\r\n                Sort.`Level`,\r\n                Sort.`Flat No`,\r\n                Sort.`Door Type`,\r\n                Sort.`Jamb Width`,\r\n                Sort.Orientation,\r\n                Sort.`Door Id`,\r\n                Sort.`Fire Rating`,\r\n                Sort.Frame,\r\n                Sort.Foam,\r\n                Sort.Architrave,\r\n                Sort.Shutter,\r\n                (REPLACE(Sort.Ironmongery,'-008','')),\r\n                Sort.Installer,\r\n                OLMA.level_map,\r\n                (REPLACE(MGR.Value_Total,'-','')) AS Total,\r\n                MGR.SC_Short,\r\n                MGR.SC_NAME,\r\n                CASE WHEN Frame = NULL AND Architrave != NULL THEN Architrave \r\n                     WHEN Architrave = NULL AND Shutter != NULL THEN Shutter\r\n                     WHEN Shutter = NULL AND Architrave != NULL THEN Architrave ELSE Frame END AS DATE_WISE_SPLIT \r\n                FROM SORTING Sort\r\n                        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n                             ON Sort.`Level` = OLMA.`level`\r\n                        LEFT JOIN GROUPIN MGR\r\n                             ON Sort.Installer = MGR.SC_Short\r\n                             AND Sort.project_id = MGR.project_id)\r\n    SELECT \r\n         * \r\n    FROM DATA_DATE \r\n    WHERE `Door Id` NOT IN ('','NULL') \r\n    AND `Flat No` NOT IN ('','NULL');\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-02-27T08:28:05Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}