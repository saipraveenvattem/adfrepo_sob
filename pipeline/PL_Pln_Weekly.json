{
	"name": "PL_Pln_Weekly",
	"properties": {
		"activities": [
			{
				"name": "Procurement Tracker",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE f_pln_procurement;\r\nINSERT INTO f_pln_procurement\r\nWITH MAIN_TABLE AS (\r\nSELECT\r\n    DATE(upload_time) AS Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    SBU,\r\n    Classification,\r\n    Description,\r\n    Category,\r\n    CASE \r\n        WHEN TRIM(`Issuance of Drawings_Plan`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Issuance of Drawings_Plan`\r\n    END AS `Issuance of Drawings_Plan`,\r\n    CASE \r\n        WHEN TRIM(`Issuance of Drawings_Actual`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Issuance of Drawings_Actual`    \r\n    END AS `Issuance of Drawings_Actual`,\r\n    CASE \r\n        WHEN TRIM(`PR_Plan`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `PR_Plan`\r\n    END AS `PR_Plan`,\r\n    CASE \r\n        WHEN TRIM(`PR_Actual`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `PR_Actual`\r\n    END AS `PR_Actual`,\r\n    CASE \r\n        WHEN TRIM(`Vendor Finalization_Plan`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Vendor Finalization_Plan`\r\n    END AS `Vendor Finalization_Plan`,\r\n    CASE \r\n        WHEN TRIM(`Vendor Finalization_Actual`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Vendor Finalization_Actual`\r\n    END AS `Vendor Finalization_Actual`,\r\n    CASE \r\n        WHEN TRIM(`Required at site by`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Required at site by`\r\n    END AS `Required at site by`,\r\n    CASE \r\n        WHEN TRIM(`Actual delivery at site`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Actual delivery at site`\r\n    END AS `Actual delivery at site`,\r\n    DENSE_RANK() OVER ( PARTITION BY project_id ORDER BY DATE(upload_time) DESC) DENSE_RANKER\r\nFROM O_PLN_PROCUREMENT_RAW oppr),\r\nREMOVE_NULLS AS (\r\n    SELECT\r\n    Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    SBU,\r\n    Classification,\r\n    Description,\r\n    Category,\r\n    CASE\r\n     WHEN TRIM(`Issuance of Drawings_Plan`) IS NULL THEN `Issuance of Drawings_Actual`\r\n     ELSE `Issuance of Drawings_Plan`\r\n    END AS `Issuance of Drawings_Plan`,\r\n    `Issuance of Drawings_Actual`,\r\n     CASE\r\n     WHEN TRIM(`PR_Plan`) IS NULL THEN PR_Actual\r\n     ELSE `PR_Plan`\r\n     END AS `PR_Plan`,\r\n    PR_Actual,\r\n    CASE\r\n    WHEN TRIM(`Vendor Finalization_Plan`) IS NULL THEN `Vendor Finalization_Actual`\r\n    ELSE `Vendor Finalization_Plan`\r\n    END AS `Vendor Finalization_Plan`,\r\n    `Vendor Finalization_Actual`,\r\n    CASE\r\n    WHEN TRIM(`Required at site by`) IS NULL  THEN `Actual delivery at site`\r\n    ELSE `Required at site by`\r\n    END AS `Required at site by`,\r\n    `Actual delivery at site` FROM MAIN_TABLE WHERE DENSE_RANKER = 1),\r\nREMOVE_COMMENTS AS (\r\nSELECT \r\nUpload_Date,\r\nproject_id,\r\ntower,\r\nsbu_id,\r\nCASE \r\n    WHEN SBU IS NULL OR TRIM(SBU) IN ('') THEN 'Unknown'\r\n    ELSE SBU\r\nEND AS SBU,\r\nOSM.sbu_identifier,\r\nClassification,\r\nDescription,\r\nCategory,\r\nCASE WHEN `Issuance of Drawings_Plan` REGEXP ('Comp.|#VALUE!|Supply|Comp') then Upload_Date ELSE `Issuance of Drawings_Plan` END AS `Issuance of Drawings Plan`,\r\nCASE WHEN `Issuance of Drawings_Actual` REGEXP ('Comp.|complete|details to be finalized|Comp') THEN Upload_Date ELSE `Issuance of Drawings_Actual` END AS `Issuance of Drawings Actual`,\r\nCASE WHEN `PR_Plan` REGEXP ('Comp.|VALUE!|Supply|Comp') THEN Upload_Date ELSE `PR_Plan` END AS `PR Plan`,\r\nCASE WHEN `PR_Actual` REGEXP ('Central store|Comp.|Comp|Target date 14.07.2022|NA, to be removed|complete') THEN Upload_Date ELSE `PR_Actual` END AS `PR Actual`,\r\nCASE WHEN `Vendor Finalization_Plan` REGEXP ('Supply|Comp.|Comp|Supply|#VALUE!') THEN Upload_Date ELSE `Vendor Finalization_Plan`END AS `Vendor Finalization Plan`,\r\nCASE WHEN `Vendor Finalization_Actual` REGEXP ('Central store|Comp.|Comp|complete' ) THEN  Upload_Date ELSE `Vendor Finalization_Actual` END AS `Vendor Finalization Actual`,\r\nCASE WHEN `Required at site by` REGEXP ('As required|Comp.|#VALUE!|Comp') THEN Upload_Date ELSE `Required at site by` END AS `Required at site by`,\r\nCASE WHEN `Actual delivery at site` REGEXP ('As required|Comp.|Comp|complete') THEN Upload_Date ELSE `Actual delivery at site` END AS `Actual delivery at site`\r\nFROM REMOVE_NULLS\r\nLEFT JOIN O_SBU_MAPPING OSM ON REMOVE_NULLS.SBU = OSM.sbu_shorts) SELECT * FROM REMOVE_COMMENTS;\r\n\r\n/**/\r\n\r\nSELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "GAANT",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "TRUNCATE TABLE aug_gaant_test;\r\nINSERT INTO aug_gaant_test\r\nWITH PRE_FORMAT_CHANGER AS (\r\n    SELECT\r\n        DATE(OPM.upload_time) AS Upload_Time,\r\n        OPM.project_id,\r\n        OPM.`Group`,\r\n        OPM.`Activity Description`,\r\n        CASE \r\n            WHEN OPM.`Actual / Forecast Start` IS NULL OR TRIM(OPM.`Actual / Forecast Start`) IN ('','-',' ') THEN REPLACE(OPM.`Baseline Start`,'-','/')\r\n            ELSE REPLACE(OPM.`Actual / Forecast Start`,'-','/')\r\n        END AS `Actual Start Date`,\r\n        CASE \r\n            WHEN OPM.`Actual / Forecast Finish` IS NULL OR TRIM(OPM.`Actual / Forecast Finish`) IN ('','-',' ') THEN REPLACE(OPM.`Baseline Finish`,'-','/')\r\n            ELSE REPLACE(OPM.`Actual / Forecast Finish`,'-','/')\r\n        END `Actual Finish Date`,\r\n        DENSE_RANK() OVER( PARTITION BY OPM.project_id ORDER BY DATE(OPM.upload_time) DESC) DENSE_RANK_,\r\n        OPM.`Actual %`\r\n    FROM\r\n        O_PLN_MILESTONE OPM \r\n        WHERE \r\n--     TRIM(OPM.`Activity Description`) NOT IN \r\n--         (\r\n--             'Pile Cap',\r\n--             'ACP Works',\r\n--             'Lift - CTU',\r\n--             'Lift - Balance passenger lifts',\r\n--             'Swimming Pool',\r\n--             'Kids Play Area/ Outdoor Play Area',\r\n--             'Kids Play Area/ Outdoor Play Are',\r\n--             'Changing Rooms / GYM',\r\n--             'Wooden Decking',\r\n--             'Transformer payment',\r\n--             'LV Inspection & Approval',\r\n--             'BCC - Inspection & Approval',\r\n--             'Power on'\r\n--         ) AND \r\n        (OPM.`Group` IS NOT NULL AND TRIM(OPM.`Group`) NOT IN ('')\r\n                AND OPM.`Activity Description` IS NOT NULL AND TRIM(OPM.`Activity Description`) NOT IN ('')\r\n--                 AND OPM.`Actual / Forecast Start` IS NOT NULL AND TRIM(OPM.`Actual / Forecast Start`) NOT IN ('')\r\n--                 AND OPM.`Actual / Forecast Finish` IS NOT NULL AND TRIM(OPM.`Actual / Forecast Finish`) NOT IN ('')\r\n                )\r\n        ),\r\n-- Again Making Small changes to the Date format\r\nFORMAT_CHANGER AS (\r\n    SELECT \r\n        FC.Upload_Time,\r\n        FC.project_id,\r\n        FC.`Group`,\r\n        FC.`Activity Description`,\r\n        CASE \r\n            WHEN FC.`Actual Start Date` LIKE '%/19' THEN REPLACE(FC.`Actual Start Date`,'/19','/2019')\r\n            WHEN FC.`Actual Start Date` LIKE '%/20' THEN REPLACE(FC.`Actual Start Date`,'/20','/2020')\r\n            WHEN FC.`Actual Start Date` LIKE '%/21' THEN REPLACE(FC.`Actual Start Date`,'/21','/2021')\r\n            WHEN FC.`Actual Start Date` LIKE '%/22' THEN REPLACE(FC.`Actual Start Date`,'/22','/2022')\r\n            WHEN FC.`Actual Start Date` LIKE '%/23' THEN REPLACE(FC.`Actual Start Date`,'/23','/2023')\r\n            WHEN FC.`Actual Start Date` LIKE '%/24' THEN REPLACE(FC.`Actual Start Date`,'/24','/2024')\r\n            ELSE FC.`Actual Start Date`\r\n        END `Actual Start Date`,\r\n        CASE \r\n            WHEN FC.`Actual Finish Date` LIKE '%/19' THEN REPLACE(FC.`Actual Finish Date`,'/19','/2019')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/20' THEN REPLACE(FC.`Actual Finish Date`,'/20','/2020')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/21' THEN REPLACE(FC.`Actual Finish Date`,'/21','/2021')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/22' THEN REPLACE(FC.`Actual Finish Date`,'/22','/2022')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/23' THEN REPLACE(FC.`Actual Finish Date`,'/23','/2023')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/24' THEN REPLACE(FC.`Actual Finish Date`,'/24','/2024')\r\n            ELSE FC.`Actual Finish Date`\r\n        END `Actual Finish Date`,\r\n        FC.`Actual %`\r\n    FROM PRE_FORMAT_CHANGER FC WHERE FC.DENSE_RANK_ = 1),\r\nFormat_Changer_Final AS (\r\n    SELECT \r\n        FC.Upload_Time,\r\n        FC.project_id,\r\n        FC.`Group`,\r\n        FC.`Activity Description`,\r\n        CASE \r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%jan%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'jan','01')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%feb%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'feb','02')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%mar%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'mar','03')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%apr%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'apr','04')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%may%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'may','05')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%jun%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'jun','06')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%jul%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'jul','07')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%aug%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'aug','08')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%sep%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'sep','09')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%oct%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'oct','10')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%nov%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'nov','11')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%dec%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'dec','12')\r\n            ELSE FC.`Actual Start Date`\r\n        END AS `Actual Start Date`,\r\n        CASE \r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%jan%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'jan','01')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%feb%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'feb','02')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%mar%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'mar','03')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%apr%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'apr','04')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%may%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'may','05')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%jun%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'jun','06')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%jul%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'jul','07')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%aug%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'aug','08')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%sep%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'sep','09')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%oct%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'oct','10')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%nov%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'nov','11')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%dec%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'dec','12')\r\n            ELSE FC.`Actual Finish Date`\r\n        END AS `Actual Finish Date`,\r\n        FC.`Actual %`\r\n    FROM FORMAT_CHANGER FC),\r\nDATA_CORRECTOR AS (\r\n    SELECT \r\n        FCF.Upload_Time,\r\n        FCF.project_id,\r\n        FCF.`Group`,\r\n        FCF.`Activity Description`,\r\n        STR_TO_DATE(FCF.`Actual Start Date`,'%d/%c/%Y') AS `Actual Start Date`,\r\n        STR_TO_DATE(FCF.`Actual Finish Date`,'%d/%c/%Y') AS `Actual Finish Date`,\r\n        FCF.`Actual %`\r\n    FROM \r\n        Format_Changer_Final FCF),\r\n-- Final Table Actuals Milestone\r\nMILESTONE_MAIN_TABLE AS (\r\n    SELECT \r\n        DC.Upload_Time,\r\n        DC.project_id,\r\n        DC.`Group`,\r\n        DC.`Activity Description`,\r\n        DC.`Actual Start Date`,\r\n        DC.`Actual Finish Date`,\r\n        DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`) AS Total_days,\r\n        DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`) AS Days_elapsed,\r\n--         CASE\r\n--             WHEN (DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`)/ DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`)) < 1\r\n--                 AND (DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`)/ DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`)) > 0 \r\n--                 THEN (DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`)/ DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`))\r\n--             WHEN (DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`)/ DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`)) < 0 THEN 0\r\n--                 ELSE 1\r\n--             END AS Completion_plan,\r\n        CASE\r\n--             For Manual Entry\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` IN ('Pile Cap','Pile')  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('ACP Works')  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` IN (\r\n                                                                                    'Lift - CTU',\r\n                                                                                    'Lift - Balance passenger lifts',\r\n                                                                                    'Swimming Pool',\r\n                                                                                    'Kids Play Area/ Outdoor Play Area',\r\n                                                                                    'Changing Rooms / GYM',\r\n                                                                                    'Wooden Decking'\r\n                                                                                    )  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'Authority Approvals' AND DC.`Activity Description` IN ( \r\n                                                                                    'Transformer payment',\r\n                                                                                    'LV Inspection & Approval',\r\n                                                                                    'BCC - Inspection & Approval',\r\n                                                                                    'Power on'\r\n                                                                                    ) THEN 'MANUAL_ENTRY'\r\n--         For Structures\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` IN ('Grade Slab','Podium Slabs','Typical Floor Slabs')  THEN 'F_PLN_STRUCTURES'\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` NOT IN ('Pile','Pile Cap','Grade Slab','Podium Slabs','Typical Floor Slabs')  THEN 'TBD'\r\n--         For Dry Area\r\n            WHEN DC.`Group` = 'Masonary Works' AND DC.`Activity Description` IN ('Blockworks')  THEN 'F_PLN_DRYAREA'\r\n            WHEN DC.`Group` = 'Finishes - Dry Area' THEN 'F_PLN_DRYAREA'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('Sliding Door')  THEN 'F_PLN_DRYAREA'\r\n--         For Wet Area    \r\n            WHEN DC.`Group` = 'Finishes - Wet Area' THEN 'F_PLN_WETAREA'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` IN ('Vanity Cabinet')  THEN 'F_PLN_WETAREA'\r\n--         For Corridor Area\r\n            WHEN DC.`Group` = 'Finishes - Corridor' THEN 'F_PLN_CORRIDOR'\r\n--         For Balcony Area\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('EIFS','Balustrade Works')  THEN 'F_PLN_BALCONYAREA'\r\n--         For Kitchen Area\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` IN ('Kitchen Appliances')  THEN 'F_PLN_KITCHENAREA'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` IN ('Kitchen Cabinet')  THEN 'F_PLN_KITCHENAREA'\r\n--         For KeepOut Area\r\n            WHEN DC.`Group` = 'Keepout' THEN 'F_PLN_KEEPOUT'\r\n--         Yet to be Decided\r\n            WHEN DC.`Group` = 'Authority Approvals' AND DC.`Activity Description` NOT IN ( \r\n                                                                                    'Transformer payment',\r\n                                                                                    'LV Inspection & Approval',\r\n                                                                                    'BCC - Inspection & Approval',\r\n                                                                                    'Power on'\r\n                                                                                    ) THEN 'TBD'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` NOT IN ('Sliding Door','EIFS','Balustrade Works','ACP Works')  THEN 'TBD'\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` NOT IN (\r\n                                                                                    'Kitchen Appliances',\r\n                                                                                    'Lift - CTU',\r\n                                                                                    'Lift - Balance passenger lifts',\r\n                                                                                    'Swimming Pool',\r\n                                                                                    'Kids Play Area/ Outdoor Play Area',\r\n                                                                                    'Changing Rooms / GYM',\r\n                                                                                    'Wooden Decking')  THEN 'TBD'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` NOT IN ('Vanity Cabinet','Kitchen Cabinet')  THEN 'TBD'\r\n            ELSE 'MISSING'\r\n        END AS Source_Templet,\r\n        OLMP.Sort_Group,\r\n        OLMP.Sort_Activity,\r\n        OLMP.Activity_New,\r\n        P.FLAT_COUNT,\r\n        DC.`Actual %`\r\n        FROM DATA_CORRECTOR DC \r\n            LEFT JOIN O_PLN_MILESTONE_MAP OLMP\r\n                ON DC.`Group` = OLMP.`Group` \r\n                AND DC.`Activity Description` = OLMP.Activity\r\n            LEFT JOIN PROJECTS P\r\n                ON DC.project_id = P.Project_Identifier),\r\n#######################################################################################################################################\r\nACTUALS_COLLECTOR AS (\r\n-- Clear the data and make it easy to read\r\n    WITH DRY_AREA_RAW AS (\r\n        SELECT \r\n            FPD.project_id,\r\n            FPD.tower,\r\n            FPD.`Level`,\r\n            FPD.Flat,\r\n            FPD.sclicer,\r\n            CAST(REPLACE(FPD.value,'%','') AS DECIMAL) AS value,\r\n            FPD.Type_of_work,\r\n            FPD.ACTIVITY_ID\r\n        FROM F_PLN_DRYAREA FPD \r\n        WHERE\r\n            LOWER(FPD.Type_of_work) IN (\r\n                                        'Plaster',\r\n                                        'Screed',\r\n                                        'Floor Tile',\r\n                                        'FC Framing',\r\n                                        'FC Boarding with Joint Taping',\r\n                                        'Floor Tiling'\r\n                                        )\r\n            AND (FPD.value LIKE '1%'\r\n                OR FPD.value LIKE '2%'\r\n                OR FPD.value LIKE '3%'\r\n                OR FPD.value LIKE '4%'\r\n                OR FPD.value LIKE '5%'\r\n                OR FPD.value LIKE '6%'\r\n                OR FPD.value LIKE '7%'\r\n                OR FPD.value LIKE '8%'\r\n                OR FPD.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    DRY_AREA_AGGREGATOR AS (\r\n        SELECT \r\n            DAR.project_id,\r\n            DAR.Type_of_work,\r\n            DENSE_RANK() OVER(PARTITION BY DAR.project_id ORDER BY DAR.tower) AS RANKER,\r\n            SUM(DAR.value) AS SUM_ALL\r\n        FROM DRY_AREA_RAW DAR \r\n        GROUP BY 1,2,DAR.tower),\r\n    DRYAREA_GAANT_FINAL AS (\r\n        SELECT \r\n            DAA.project_id,\r\n            DAA.Type_of_work,\r\n            DAA.SUM_ALL,\r\n            'F_PLN_DRYAREA' AS Source_Table\r\n        FROM DRY_AREA_AGGREGATOR DAA),\r\n    WET_AREA_RAW AS (\r\n            SELECT \r\n                WPD.project_id,\r\n                WPD.tower,\r\n                WPD.`Level`,\r\n                WPD.Flat,\r\n                WPD.sclicer,\r\n                CAST(REPLACE(WPD.value,'%','') AS DECIMAL) AS value,\r\n                WPD.Type_of_work,\r\n                WPD.ACTIVITY_ID\r\n            FROM F_PLN_WETAREA WPD \r\n            WHERE\r\n                LOWER(WPD.Type_of_work) IN (\r\n                                            'Wet Area Screed',\r\n                                            'Wet Area MEP H/L Boarding Clearance',\r\n                                            'Wall tile bottom Tile',\r\n                                            'Wet Area FC Framing',\r\n                                            'FC Boarding & Joint Taping',\r\n                                            'Floor Tile',\r\n                                            'Wet Area Final Fixtures Installation',\r\n                                            'Vanity Cabinet'\r\n                                            )\r\n                AND (WPD.value LIKE '1%'\r\n                    OR WPD.value LIKE '2%'\r\n                    OR WPD.value LIKE '3%'\r\n                    OR WPD.value LIKE '4%'\r\n                    OR WPD.value LIKE '5%'\r\n                    OR WPD.value LIKE '6%'\r\n                    OR WPD.value LIKE '7%'\r\n                    OR WPD.value LIKE '8%'\r\n                    OR WPD.value LIKE '9%'\r\n                    ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    WET_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                WAR.project_id,\r\n                WAR.Type_of_work,\r\n                SUM(WAR.value) AS SUM_ALL\r\n            FROM WET_AREA_RAW WAR \r\n            GROUP BY 1,2),\r\n    WETAREA_GAANT_FINAL AS (\r\n            SELECT \r\n                WAA.project_id,\r\n                WAA.Type_of_work,\r\n                WAA.SUM_ALL,\r\n                'F_PLN_WETAREA' AS Source_Table\r\n            FROM WET_AREA_AGGREGATOR WAA),\r\n    CORRIDOR_AREA_RAW AS (\r\n        SELECT \r\n            FPC.project_id,\r\n            FPC.tower,\r\n            FPC.`Level`,\r\n            FPC.sclicer,\r\n            CAST(REPLACE(FPC.value,'%','') AS DECIMAL) AS value,\r\n            FPC.Type_of_work,\r\n            FPC.ACTIVITY_ID\r\n        FROM F_PLN_CORRIDOR FPC \r\n        WHERE\r\n            LOWER(FPC.Type_of_work) IN (\r\n                                        'Floor Tile',\r\n                                        'Wall Tile',\r\n                                        'FC Boarding'\r\n                                        )\r\n            AND (FPC.value LIKE '1%'\r\n                OR FPC.value LIKE '2%'\r\n                OR FPC.value LIKE '3%'\r\n                OR FPC.value LIKE '4%'\r\n                OR FPC.value LIKE '5%'\r\n                OR FPC.value LIKE '6%'\r\n                OR FPC.value LIKE '7%'\r\n                OR FPC.value LIKE '8%'\r\n                OR FPC.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7 ORDER BY 1,2),\r\n    CORRIDOR_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                CAR.project_id,\r\n                CAR.Type_of_work,\r\n                SUM(CAR.value) AS SUM_ALL\r\n            FROM CORRIDOR_AREA_RAW CAR \r\n            GROUP BY 1,2),\r\n    CORRIDOR_GAANT_FINAL AS (\r\n            SELECT \r\n                WAA.project_id,\r\n                WAA.Type_of_work,\r\n                WAA.SUM_ALL,\r\n                'F_PLN_CORRIDOR' AS Source_Table\r\n            FROM CORRIDOR_AREA_AGGREGATOR WAA),\r\n    KITCHEN_AREA_RAW AS (\r\n            SELECT \r\n                FPK.project_id,\r\n                FPK.tower,\r\n                FPK.`Level`,\r\n                FPK.Flat,\r\n                FPK.sclicer,\r\n                CAST(REPLACE(FPK.value,'%','') AS DECIMAL) AS value,\r\n                FPK.Type_of_work,\r\n                FPK.ACTIVITY_ID\r\n            FROM F_PLN_KITCHENAREA FPK \r\n            WHERE\r\n                LOWER(FPK.Type_of_work) IN (\r\n                                            'Kitchen Appliances'\r\n                                            )\r\n                AND (FPK.value LIKE '1%'\r\n                    OR FPK.value LIKE '2%'\r\n                    OR FPK.value LIKE '3%'\r\n                    OR FPK.value LIKE '4%'\r\n                    OR FPK.value LIKE '5%'\r\n                    OR FPK.value LIKE '6%'\r\n                    OR FPK.value LIKE '7%'\r\n                    OR FPK.value LIKE '8%'\r\n                    OR FPK.value LIKE '9%'\r\n                    ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    KITCHEN_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                KAR.project_id,\r\n                KAR.Type_of_work,\r\n                SUM(KAR.value) AS SUM_ALL\r\n            FROM KITCHEN_AREA_RAW KAR \r\n            GROUP BY 1,2),\r\n    KITCHEN_GAANT_FINAL AS (\r\n            SELECT \r\n                KAA.project_id,\r\n                KAA.Type_of_work,\r\n                KAA.SUM_ALL,\r\n                'F_PLN_KITCHEN' AS Source_Table\r\n            FROM KITCHEN_AREA_AGGREGATOR KAA),\r\n    BALCONY_AREA_RAW AS (\r\n            SELECT \r\n                FPB.project_id,\r\n                FPB.tower,\r\n                FPB.`Level`,\r\n                FPB.Flat,\r\n                FPB.sclicer,\r\n                CAST(REPLACE(FPB.value,'%','') AS DECIMAL) AS value,\r\n                FPB.Type_of_work,\r\n                FPB.ACTIVITY_ID\r\n            FROM F_PLN_BALCONYAREA FPB \r\n            WHERE\r\n                LOWER(FPB.Type_of_work) IN (\r\n                                            'EIFS Installation'\r\n                                            )\r\n                AND (FPB.value LIKE '1%'\r\n                    OR FPB.value LIKE '2%'\r\n                    OR FPB.value LIKE '3%'\r\n                    OR FPB.value LIKE '4%'\r\n                    OR FPB.value LIKE '5%'\r\n                    OR FPB.value LIKE '6%'\r\n                    OR FPB.value LIKE '7%'\r\n                    OR FPB.value LIKE '8%'\r\n                    OR FPB.value LIKE '9%'\r\n                    ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    BALCONY_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                BAR.project_id,\r\n                BAR.Type_of_work,\r\n                SUM(BAR.value) AS SUM_ALL\r\n            FROM BALCONY_AREA_RAW BAR \r\n            GROUP BY 1,2),\r\n    BALCONY_GAANT_FINAL AS (\r\n            SELECT \r\n                KAA.project_id,\r\n                KAA.Type_of_work,\r\n                KAA.SUM_ALL,\r\n                'F_PLN_BALCONYAREA' AS Source_Table\r\n            FROM BALCONY_AREA_AGGREGATOR KAA),\r\n    SLIDINGDOOR_RAW AS (\r\n        SELECT \r\n            FPD.project_id,\r\n            FPD.tower,\r\n            FPD.`Level`,\r\n            FPD.Flat,\r\n            FPD.sclicer,\r\n            CAST(REPLACE(FPD.value,'%','') AS DECIMAL) AS value,\r\n            FPD.Type_of_work,\r\n            FPD.ACTIVITY_ID\r\n        FROM F_PLN_DRYAREA FPD \r\n        WHERE\r\n            LOWER(FPD.Type_of_work) IN (\r\n                                        'Sliding Door Box Installation',\r\n                                        'Sliding Door Frame Installation',\r\n                                        'Sliding Door Glass Installation',\r\n                                        'Sliding Door Internal Silicone',\r\n                                        'Sliding Door Alignment',\r\n                                        'Sliding Door External Silicone'\r\n                                        )\r\n            AND (FPD.value LIKE '1%'\r\n                OR FPD.value LIKE '2%'\r\n                OR FPD.value LIKE '3%'\r\n                OR FPD.value LIKE '4%'\r\n                OR FPD.value LIKE '5%'\r\n                OR FPD.value LIKE '6%'\r\n                OR FPD.value LIKE '7%'\r\n                OR FPD.value LIKE '8%'\r\n                OR FPD.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    SLIDINGDOOR_AGGREGATOR AS (\r\n            SELECT \r\n                SDR.project_id,\r\n                SDR.Type_of_work,\r\n                SUM(SDR.value) AS SUM_ALL\r\n            FROM SLIDINGDOOR_RAW SDR \r\n            GROUP BY 1,2),\r\n    SLIDINGDOOR_GAANT_STAGGING AS (\r\n            SELECT \r\n                SDA.project_id,\r\n                SDA.Type_of_work,\r\n                SDA.SUM_ALL,\r\n                CASE \r\n                    WHEN Type_of_work = 'Sliding Door Box Installation'     THEN 0.1\r\n                    WHEN Type_of_work = 'Sliding Door Frame Installation'     THEN 0.2\r\n                    WHEN Type_of_work = 'Sliding Door Glass Installation'     THEN 0.45\r\n                    WHEN Type_of_work = 'Sliding Door Internal Silicone'     THEN 0.1\r\n                    WHEN Type_of_work = 'Sliding Door Alignment'             THEN 0.05\r\n                    WHEN Type_of_work = 'Sliding Door External Silicone'     THEN 0.1\r\n                END AS Multiply_Factor,\r\n                'F_PLN_DRYAREA' AS Source_Table\r\n            FROM SLIDINGDOOR_AGGREGATOR SDA),\r\n    SLIDINGDOOR_GAANT_FINAL AS (\r\n            SELECT \r\n                SGS.project_id,\r\n                'Sliding Door' AS Type_of_work,\r\n                SUM(Multiply_Factor*SUM_ALL) AS SUM_ALL,\r\n                SGS.Source_Table\r\n            FROM SLIDINGDOOR_GAANT_STAGGING SGS\r\n            GROUP BY 1\r\n            ),\r\n    KITCHEN_CABINET_RAW AS (\r\n        SELECT \r\n            FPK.project_id,\r\n            FPK.tower,\r\n            FPK.`Level`,\r\n            FPK.Flat,\r\n            FPK.sclicer,\r\n            CAST(REPLACE(FPK.value,'%','') AS DECIMAL) AS value,\r\n            FPK.Type_of_work,\r\n            FPK.ACTIVITY_ID\r\n        FROM F_PLN_KITCHENAREA FPK \r\n        WHERE\r\n            LOWER(FPK.Type_of_work) IN (\r\n                                        'Kitchen Cabinet',\r\n                                        'Kitchen Counter Plywood',\r\n                                        'Kitchen Counter Top',\r\n                                        'Kitchen Counter Top Skirting',\r\n                                        'Kitchen Cabinet Grouting',\r\n                                        'Kitchen Cabinet Silicone'\r\n                                        )\r\n            AND (FPK.value LIKE '1%'\r\n                OR FPK.value LIKE '2%'\r\n                OR FPK.value LIKE '3%'\r\n                OR FPK.value LIKE '4%'\r\n                OR FPK.value LIKE '5%'\r\n                OR FPK.value LIKE '6%'\r\n                OR FPK.value LIKE '7%'\r\n                OR FPK.value LIKE '8%'\r\n                OR FPK.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    KITCHEN_CABINET_AGGREGATOR AS (\r\n            SELECT \r\n                SDR.project_id,\r\n                SDR.Type_of_work,\r\n                SUM(SDR.value) AS SUM_ALL\r\n            FROM KITCHEN_CABINET_RAW SDR \r\n            GROUP BY 1,2),\r\n    KITCHEN_CABINET_GAANT_STAGGING AS (\r\n            SELECT \r\n                SDA.project_id,\r\n                SDA.Type_of_work,\r\n                SDA.SUM_ALL,\r\n                CASE \r\n                    WHEN Type_of_work = 'Kitchen Cabinet'                 THEN 0.5\r\n                    WHEN Type_of_work = 'Kitchen Counter Plywood'         THEN 0.1\r\n                    WHEN Type_of_work = 'Kitchen Counter Top'             THEN 0.2\r\n                    WHEN Type_of_work = 'Kitchen Counter Top Skirting'     THEN 0.1\r\n                    WHEN Type_of_work = 'Kitchen Cabinet Grouting'         THEN 0.05\r\n                    WHEN Type_of_work = 'Kitchen Cabinet Silicone'         THEN 0.05\r\n                END AS Multiply_Factor,\r\n                'F_PLN_KITCHENAREA' AS Source_Table\r\n            FROM KITCHEN_CABINET_AGGREGATOR SDA),\r\n    KITCHEN_CABINET_GAANT_FINAL AS (\r\n            SELECT \r\n                SGS.project_id,\r\n                'Kitchen Cabinet' AS Type_of_work,\r\n                SUM(Multiply_Factor*SUM_ALL) AS SUM_ALL,\r\n                SGS.Source_Table\r\n            FROM KITCHEN_CABINET_GAANT_STAGGING SGS\r\n            GROUP BY 1\r\n            ),\r\n    KEEPOUT_AREA_RAW AS (\r\n            SELECT \r\n                FPK.project_id,\r\n                FPK.tower,\r\n                FPK.`Level`,\r\n                FPK.Flat,\r\n                'Keep Out' AS sclicer,\r\n                CAST(REPLACE(FPK.value,'%','') AS DECIMAL) AS value,\r\n                FPK.Type_of_work,\r\n                FPK.ACTIVITY_ID\r\n            FROM F_PLN_KEEPOUT FPK \r\n            WHERE\r\n                LOWER(FPK.Type_of_work) IN (\r\n                                            'Bathroom Stamp - Civil (L9)',\r\n                                            'Kitchen Stamp - Civil (I9)',\r\n                                            'Keep Out (QT)'\r\n                                            )\r\n                AND (FPK.value LIKE '1%'\r\n                    OR FPK.value LIKE '2%'\r\n                    OR FPK.value LIKE '3%'\r\n                    OR FPK.value LIKE '4%'\r\n                    OR FPK.value LIKE '5%'\r\n                    OR FPK.value LIKE '6%'\r\n                    OR FPK.value LIKE '7%'\r\n                    OR FPK.value LIKE '8%'\r\n                    OR FPK.value LIKE '9%'\r\n                    ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    KEEPOUT_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                KAR.project_id,\r\n                KAR.Type_of_work,\r\n                SUM(KAR.value) AS SUM_ALL\r\n            FROM KEEPOUT_AREA_RAW KAR \r\n            GROUP BY 1,2),\r\n    KEEPOUT_GAANT_FINAL AS (\r\n            SELECT \r\n                KAA.project_id,\r\n                KAA.Type_of_work,\r\n                (KAA.SUM_ALL*100) AS SUM_ALL,\r\n                'F_PLN_KEEPOUT' AS Source_Table\r\n            FROM KEEPOUT_AREA_AGGREGATOR KAA),\r\n    BLOCKWORK_RAW AS (\r\n        SELECT \r\n            FPD.project_id,\r\n            FPD.tower,\r\n            FPD.`Level`,\r\n            FPD.Flat,\r\n            FPD.sclicer,\r\n            CAST(REPLACE(FPD.value,'%','') AS DECIMAL) AS value,\r\n            FPD.Type_of_work,\r\n            FPD.ACTIVITY_ID\r\n        FROM F_PLN_DRYAREA FPD \r\n        WHERE\r\n            LOWER(FPD.Type_of_work) IN (\r\n                                        'Blockwork First Layer'\r\n                                        'Blockwork'\r\n                                        'GI Lintel'\r\n                                        'Above Lintel Block Work'\r\n                                        )\r\n            AND (FPD.value LIKE '1%'\r\n                OR FPD.value LIKE '2%'\r\n                OR FPD.value LIKE '3%'\r\n                OR FPD.value LIKE '4%'\r\n                OR FPD.value LIKE '5%'\r\n                OR FPD.value LIKE '6%'\r\n                OR FPD.value LIKE '7%'\r\n                OR FPD.value LIKE '8%'\r\n                OR FPD.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    BLOCKWORK_AGGREGATOR AS (\r\n            SELECT \r\n                BWR.project_id,\r\n                BWR.Type_of_work,\r\n                SUM(BWR.value) AS SUM_ALL\r\n            FROM BLOCKWORK_RAW BWR \r\n            GROUP BY 1,2),\r\n    BLOCKWORK_GAANT_STAGGING AS (\r\n            SELECT \r\n                BWA.project_id,\r\n                BWA.Type_of_work,\r\n                BWA.SUM_ALL,\r\n                CASE \r\n                    WHEN Type_of_work = 'Blockwork First Layer'     THEN 0.2\r\n                    WHEN Type_of_work = 'Blockwork'                 THEN 0.4\r\n                    WHEN Type_of_work = 'GI Lintel'                 THEN 0.1\r\n                    WHEN Type_of_work = 'Above Lintel Block Work'     THEN 0.3\r\n                END AS Multiply_Factor,\r\n                'F_PLN_DRYAREA' AS Source_Table\r\n            FROM BLOCKWORK_AGGREGATOR BWA),\r\n    BLOCKWORK_GAANT_FINAL AS (\r\n            SELECT \r\n                BGS.project_id,\r\n                'Blockwork' AS Type_of_work,\r\n                SUM(BGS.Multiply_Factor*BGS.SUM_ALL) AS SUM_ALL,\r\n                BGS.Source_Table\r\n            FROM BLOCKWORK_GAANT_STAGGING BGS\r\n            GROUP BY 1\r\n            ),\r\n    BALUSTRADE_WORKS_RAW AS (\r\n        SELECT \r\n            FPB.project_id,\r\n            FPB.tower,\r\n            FPB.`Level`,\r\n            FPB.Flat,\r\n            FPB.sclicer,\r\n            CAST(REPLACE(FPB.value,'%','') AS DECIMAL) AS value,\r\n            FPB.Type_of_work,\r\n            FPB.ACTIVITY_ID\r\n        FROM F_PLN_BALCONYAREA FPB \r\n        WHERE\r\n            LOWER(FPB.Type_of_work) IN (\r\n                                        'F channel Installation',\r\n                                        'Top Rail Bracket Installation',\r\n                                        'Balustrade Glass Installation',\r\n                                        'Balustrade Top Rail',\r\n                                        'Balustrade-Internal Flashing'\r\n                                        )\r\n            AND (FPB.value LIKE '1%'\r\n                OR FPB.value LIKE '2%'\r\n                OR FPB.value LIKE '3%'\r\n                OR FPB.value LIKE '4%'\r\n                OR FPB.value LIKE '5%'\r\n                OR FPB.value LIKE '6%'\r\n                OR FPB.value LIKE '7%'\r\n                OR FPB.value LIKE '8%'\r\n                OR FPB.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    BALUSTRADE_WORKS_AGGREGATOR AS (\r\n            SELECT \r\n                BWR.project_id,\r\n                BWR.Type_of_work,\r\n                SUM(BWR.value) AS SUM_ALL\r\n            FROM BALUSTRADE_WORKS_RAW BWR \r\n            GROUP BY 1,2),\r\n    BALUSTRADE_WORKS_GAANT_STAGGING AS (\r\n            SELECT \r\n                BWA.project_id,\r\n                BWA.Type_of_work,\r\n                BWA.SUM_ALL,\r\n                CASE \r\n                    WHEN Type_of_work = 'F channel Installation'             THEN 0.2\r\n                    WHEN Type_of_work = 'Top Rail Bracket Installation'        THEN 0.2\r\n                    WHEN Type_of_work = 'Balustrade Glass Installation'        THEN 0.2\r\n                    WHEN Type_of_work = 'Balustrade Top Rail'                 THEN 0.2\r\n                    WHEN Type_of_work = 'Balustrade-Internal Flashing'        THEN 0.2\r\n                END AS Multiply_Factor,\r\n                'F_PLN_DRYAREA' AS Source_Table\r\n            FROM BALUSTRADE_WORKS_AGGREGATOR BWA),\r\n    BALUSTRADE_WORKS_GAANT_FINAL AS (\r\n            SELECT \r\n                BGS.project_id,\r\n                'Balustrade Works' AS Type_of_work,\r\n                SUM(BGS.Multiply_Factor*BGS.SUM_ALL) AS SUM_ALL,\r\n                BGS.Source_Table\r\n            FROM BALUSTRADE_WORKS_GAANT_STAGGING BGS\r\n            GROUP BY 1\r\n            ),\r\n-- Structures , The Biggest headache till now \r\n    GRADE_SLAB_COUNT AS (\r\n        SELECT     \r\n            P.Project_Identifier,\r\n            COUNT(*) AS GS_Count\r\n        FROM O_PLN_STRUCTURES_POUR_MAP OSPM \r\n            LEFT JOIN PROJECTS P \r\n            ON OSPM.project_id  = P.Project_Identifier\r\n        WHERE LOWER(OSPM.type_of_pour) LIKE 'slab%' \r\n        GROUP BY 1\r\n        ),\r\n   # Divide By 0\r\n   GRADE_SLAB_FINAL AS (\r\n        SELECT \r\n            GSCU.*,\r\n            'Grade Slab' AS Area,\r\n            GSCM.GS_COMPLETED,\r\n            CASE WHEN GS_Count=0 THEN NULL ELSE CAST((GSCM.GS_COMPLETED/GS_Count) AS DECIMAL(3,2)) END AS Actuals\r\n        FROM GRADE_SLAB_COUNT GSCU \r\n            LEFT JOIN (    SELECT \r\n                            FPS.Project_Identifier,\r\n                            COUNT(FPS.`Level`) AS GS_COMPLETED\r\n                        FROM F_PLN_STRUCTURES FPS\r\n                        WHERE LOWER(FPS.`Level`) LIKE '%grade slab%' \r\n                            AND value IS NOT NULL \r\n                        GROUP BY 1) AS GSCM \r\n                ON GSCU.Project_Identifier = GSCM.Project_Identifier),\r\n    ACTUALS_OTHER_SLABS AS (\r\n        SELECT \r\n            FPS.Project_Identifier,\r\n            OPTPM.Area ,\r\n            COUNT(FPS.Pour) Total_Completed \r\n        FROM F_PLN_STRUCTURES  FPS\r\n            LEFT JOIN O_PLN_TOWER_PODIUM_MAP OPTPM\r\n                ON FPS.Project_Identifier = OPTPM.Project \r\n                AND FPS.`Level` = OPTPM.`Level` \r\n--         WHERE FPS.Project_Identifier = 'Sobha Waves' \r\n--             AND FPS.Pour LIKE 'slab%'\r\n        WHERE FPS.Pour LIKE 'slab%'\r\n            AND LOWER(TRIM(FPS.`Level`))!= 'grade slab'\r\n        GROUP BY 1,2\r\n        ##ORDER BY level_map\r\n        ),\r\n    PIVOTING_TABLE AS (\r\n        SELECT *,\r\n            (Total_Podiums*Podium_Slab) AS PODIUM_COUNT,\r\n            (Total_Typical_Floor*Typical_Floor_Slab) AS TYPICAL_FLOOR_COUNT\r\n        FROM PROJECTS),\r\n    COUNT_VALUE AS (\r\n        SELECT \r\n            Project_Identifier,\r\n            Virtual_table.*\r\n        FROM PIVOTING_TABLE \r\n            CROSS JOIN LATERAL ( \r\n                        SELECT 'Podium',PODIUM_COUNT \r\n                    UNION ALL SELECT 'Typical Floor',TYPICAL_FLOOR_COUNT \r\n                                ) AS Virtual_table(Area,Value)\r\n        WHERE Value IS NOT NULL),\r\n    # Divide By 0\r\n    OTHER_SLABS_FINAL AS (\r\n    SELECT \r\n        CV.*,\r\n        A.Total_Completed,\r\n        CASE WHEN CV.Value=0 THEN NULL ELSE CAST((A.Total_Completed/CV.Value) AS DECIMAL(4,2)) END AS Actuals\r\n    FROM COUNT_VALUE CV\r\n    LEFT JOIN ACTUALS_OTHER_SLABS A ON CV.Project_Identifier = A.Project_Identifier\r\n                        AND CV.Area = A.Area),\r\n    STRUCTURE_UNION_ALL AS (\r\n        SELECT \r\n            Project_Identifier AS project_id,\r\n            Area AS Type_of_work,\r\n            Actuals AS SUM_ALL,\r\n            'F_PLN_STRUCTURES' AS Source_Table\r\n        FROM GRADE_SLAB_FINAL\r\n        UNION ALL\r\n        SELECT \r\n            Project_Identifier AS project_id,\r\n            Area AS Type_of_work,\r\n            Actuals AS SUM_ALL,\r\n            'F_PLN_STRUCTURES' AS Source_Table\r\n        FROM OTHER_SLABS_FINAL),\r\n    STRUCTURE_GAANT_FINAL AS (\r\n        SELECT \r\n            SGF.project_id,\r\n            SGF.Type_of_work,\r\n            (SGF.SUM_ALL*P.FLAT_COUNT)*100 AS SUM_ALL,\r\n            SGF.Source_Table\r\n        FROM STRUCTURE_UNION_ALL SGF \r\n            LEFT JOIN PROJECTS P \r\n                ON SGF.project_id = P.Project_Identifier),\r\n     # Divide By 0\r\n    ALL_AREA_TEMPLET AS (\r\n        SELECT * FROM DRYAREA_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM WETAREA_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM CORRIDOR_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM KITCHEN_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM BALCONY_GAANT_FINAL\r\n        UNION ALL \r\n        SELECT * FROM SLIDINGDOOR_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM KITCHEN_CABINET_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM KEEPOUT_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM BLOCKWORK_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM BALUSTRADE_WORKS_GAANT_FINAL\r\n        UNION ALL \r\n        SELECT * FROM STRUCTURE_GAANT_FINAL)\r\n    SELECT\r\n        *,\r\n        CASE\r\n            -- Converting Template Headers to Milestone Templetes\r\n-- For Corridor Area\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Floor Tile'\r\n                AND `Source_Table` = 'F_PLN_CORRIDOR' THEN 'Floor Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wall Tile'\r\n                AND `Source_Table` = 'F_PLN_CORRIDOR' THEN 'Wall Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'FC Boarding'\r\n                AND `Source_Table` = 'F_PLN_CORRIDOR' THEN 'False Ceiling - Boarding'\r\n-- For Dry Area\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Plaster'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Plaster'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Screed'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Screed'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Floor Tiling'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Floor Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'FC Framing'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'False Ceiling - Framing'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'FC Boarding with Joint Taping'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'False Ceiling - Boarding'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Kitchen Cabinet'\r\n                AND `Source_Table` = 'F_PLN_KITCHENAREA' THEN 'Kitchen Cabinet'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Kitchen Appliances'\r\n                AND `Source_Table` = 'F_PLN_KITCHENAREA' THEN 'Kitchen Appliances'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Sliding Door'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Sliding Door'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Blockwork'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Blockwork'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Balustrade Works'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Balustrade Works'\r\n-- For Wet Area\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wet Area Screed'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'Screed'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wet Area MEP H/L Boarding Clearance'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'MEP High Lvl'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wall tile bottom Tile'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'Wall Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wet Area FC Framing'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'False Ceiling - Framing'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'FC Boarding & Joint Taping'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'False Ceiling - Boarding'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Floor Tile'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'Floor Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wet Area Final Fixtures Installation'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'MEP Final Fix'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Vanity Cabinet'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'Vanity Cabinet'\r\n-- For Balcony Area\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'EIFS Installation'\r\n                AND `Source_Table` = 'F_PLN_BALCONYAREA' THEN 'EIFS'\r\n-- For Keep Out\r\n-- Need to change this once we have the approval frm SAI\r\n--             WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Bathroom Stamp - Civil (L9)'\r\n--                 AND `Source_Table` = 'F_PLN_KEEPOUT' THEN 'CAP^Q Common Area QT Inspections'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Keep Out (QT)'\r\n                AND `Source_Table` = 'F_PLN_KEEPOUT' THEN 'CAP^Q Unit QT Keep-out approvals'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Kitchen Stamp - Civil (I9)'\r\n                AND `Source_Table` = 'F_PLN_KEEPOUT' THEN 'CAP^Q (Stamp - I9) Kitchen Keep-'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Bathroom Stamp - Civil (L9)'\r\n                AND `Source_Table` = 'F_PLN_KEEPOUT' THEN 'CAP^Q (Stamp - L9) Bathroom Keep'\r\n-- For Structures\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Podium'\r\n                AND `Source_Table` = 'F_PLN_STRUCTURES' THEN 'Podium Slabs'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Grade Slab'\r\n                AND `Source_Table` = 'F_PLN_STRUCTURES' THEN 'Grade Slab'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Typical Floor'\r\n                AND `Source_Table` = 'F_PLN_STRUCTURES' THEN 'Typical Floor Slabs'\r\n            ELSE NULL\r\n        END AS Milestone_Activity_Map\r\n    FROM ALL_AREA_TEMPLET AAT),\r\nOUTPUT_Plan AS (\r\n    SELECT \r\n        MMT.Upload_Time AS Upload_Date,\r\n        MMT.project_id,\r\n        MMT.`Group`,\r\n        MMT.`Activity Description`,\r\n        MMT.Activity_New,\r\n--         AC.Milestone_Activity_Map,\r\n        CASE WHEN MMT.FLAT_COUNT=0 THEN NULL ELSE CAST((AC.SUM_ALL/MMT.FLAT_COUNT) AS DECIMAL(12,4)) END AS  Actual_Achived,\r\n        MMT.`Actual Start Date`,\r\n        MMT.`Actual Finish Date`,\r\n        MMT.Total_days,\r\n        MMT.Days_elapsed,\r\n--         MMT.Completion_plan,\r\n        MMT.Source_Templet,\r\n        AC.Source_Table,\r\n        MMT.Sort_Group,\r\n        MMT.Sort_Activity,\r\n        MMT.`Actual %`\r\n--         MMT.FLAT_COUNT\r\n    --     AC.project_id,\r\n    --     AC.Type_of_work,\r\n    --     AC.SUM_ALL,\r\n    --     AC.Source_Table,\r\n--         AC.Milestone_Activity_Map,\r\n--         CAST((AC.SUM_ALL/MMT.FLAT_COUNT)/100 AS DECIMAL(12,4)) AS  Actual_Achived\r\n    FROM MILESTONE_MAIN_TABLE MMT\r\n        LEFT JOIN ACTUALS_COLLECTOR AC\r\n            ON MMT.project_id = AC.project_id\r\n            AND MMT.`Activity Description` = AC.Milestone_Activity_Map\r\n            AND MMT.Source_Templet = AC.Source_Table),\r\n-- Additionally Added the Actuals Value Above\r\n################################# Actual Calculation Completed ##############################################################\r\nPRE_FORMAT_CHANGER_Plan AS (\r\n    SELECT\r\n        DATE(OPM.upload_time) AS Upload_Time,\r\n        OPM.project_id,\r\n        OPM.`Group`,\r\n        OPM.`Activity Description`,\r\n        REPLACE(OPM.`Baseline Start`,'-','/') AS `Baseline Start Date`,\r\n        REPLACE(OPM.`Baseline Finish`,'-','/') AS `Baseline Finish Date`,\r\n        DENSE_RANK() OVER( PARTITION BY OPM.project_id ORDER BY DATE(OPM.upload_time) DESC) DENSE_RANK_,\r\n        OPM.`Actual %`\r\n    FROM\r\n        O_PLN_MILESTONE OPM\r\n        WHERE \r\n--         TRIM(OPM.`Activity Description`) NOT IN \r\n--         (\r\n--             'Pile Cap',\r\n--             'ACP Works',\r\n--             'Lift - CTU',\r\n--             'Lift - Balance passenger lifts',\r\n--             'Swimming Pool',\r\n--             'Kids Play Area/ Outdoor Play Area',\r\n--             'Kids Play Area/ Outdoor Play Are',\r\n--             'Changing Rooms / GYM',\r\n--             'Wooden Decking',\r\n--             'Transformer payment',\r\n--             'LV Inspection & Approval',\r\n--             'BCC - Inspection & Approval',\r\n--             'Power on'\r\n--         ) AND \r\n        (OPM.`Group` IS NOT NULL AND TRIM(OPM.`Group`) NOT IN ('')\r\n                AND OPM.`Activity Description` IS NOT NULL AND TRIM(OPM.`Activity Description`) NOT IN ('')\r\n                AND OPM.`Baseline Start` IS NOT NULL AND TRIM(OPM.`Baseline Start`) NOT IN ('')\r\n                AND OPM.`Baseline Finish` IS NOT NULL AND TRIM(OPM.`Baseline Finish`) NOT IN ('')\r\n                )\r\n        ),\r\nFORMAT_CHANGER_Plan AS (\r\n    SELECT \r\n        FC.Upload_Time,\r\n        FC.project_id,\r\n        FC.`Group`,\r\n        FC.`Activity Description`,\r\n        CASE \r\n            WHEN FC.`Baseline Start Date` LIKE '%/19' THEN REPLACE(FC.`Baseline Start Date`,'/19','/2019')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/20' THEN REPLACE(FC.`Baseline Start Date`,'/20','/2020')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/21' THEN REPLACE(FC.`Baseline Start Date`,'/21','/2021')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/22' THEN REPLACE(FC.`Baseline Start Date`,'/22','/2022')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/23' THEN REPLACE(FC.`Baseline Start Date`,'/23','/2023')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/24' THEN REPLACE(FC.`Baseline Start Date`,'/24','/2024')\r\n            ELSE FC.`Baseline Start Date`\r\n        END `Baseline Start Date`,\r\n        CASE \r\n            WHEN FC.`Baseline Finish Date` LIKE '%/19' THEN REPLACE(FC.`Baseline Finish Date`,'/19','/2019')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/20' THEN REPLACE(FC.`Baseline Finish Date`,'/20','/2020')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/21' THEN REPLACE(FC.`Baseline Finish Date`,'/21','/2021')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/22' THEN REPLACE(FC.`Baseline Finish Date`,'/22','/2022')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/23' THEN REPLACE(FC.`Baseline Finish Date`,'/23','/2023')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/24' THEN REPLACE(FC.`Baseline Finish Date`,'/24','/2024')\r\n            ELSE FC.`Baseline Finish Date`\r\n        END `Baseline Finish Date`,\r\n        FC.`Actual %`\r\n    FROM PRE_FORMAT_CHANGER_Plan FC WHERE FC.DENSE_RANK_ = 1),\r\nFormat_Changer_Final_Plan AS (\r\n    SELECT \r\n        FC.Upload_Time,\r\n        FC.project_id,\r\n        FC.`Group`,\r\n        FC.`Activity Description`,\r\n        CASE \r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%jan%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'jan','01')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%feb%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'feb','02')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%mar%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'mar','03')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%apr%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'apr','04')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%may%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'may','05')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%jun%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'jun','06')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%jul%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'jul','07')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%aug%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'aug','08')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%sep%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'sep','09')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%oct%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'oct','10')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%nov%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'nov','11')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%dec%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'dec','12')\r\n            ELSE FC.`Baseline Start Date`\r\n        END AS `Baseline Start Date`,\r\n        CASE \r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%jan%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'jan','01')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%feb%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'feb','02')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%mar%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'mar','03')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%apr%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'apr','04')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%may%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'may','05')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%jun%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'jun','06')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%jul%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'jul','07')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%aug%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'aug','08')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%sep%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'sep','09')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%oct%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'oct','10')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%nov%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'nov','11')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%dec%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'dec','12')\r\n            ELSE FC.`Baseline Finish Date`\r\n        END AS `Baseline Finish Date`,\r\n        FC.`Actual %`\r\n    FROM FORMAT_CHANGER_Plan FC),\r\nDATA_CORRECTOR_Plan AS (\r\n    SELECT \r\n        FCF.Upload_Time,\r\n        FCF.project_id,\r\n        FCF.`Group`,\r\n        FCF.`Activity Description`,\r\n        STR_TO_DATE(FCF.`Baseline Start Date`,'%d/%c/%Y') AS `Baseline Start Date`,\r\n        STR_TO_DATE(FCF.`Baseline Finish Date`,'%d/%c/%Y') AS `Baseline Finish Date`,\r\n        FCF.`Actual %`\r\n    FROM \r\n        Format_Changer_Final_Plan FCF),\r\n # Divide By 0\r\nMILESTONE_MAIN_TABLE_Plan AS (\r\n    SELECT \r\n        DC.Upload_Time,\r\n        DC.project_id,\r\n        DC.`Group`,\r\n        DC.`Activity Description`,\r\n        DC.`Baseline Start Date`,\r\n        DC.`Baseline Finish Date`,\r\n        DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`) AS Total_days,\r\n        DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`) AS Days_elapsed,\r\n        CASE\r\n\t\t\tWHEN DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`) =0 THEN NULL\r\n            WHEN (DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`)/ DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`)) < 1\r\n                AND (DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`)/ DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`)) > 0 \r\n                THEN (DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`)/ DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`))\r\n            WHEN (DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`)/ DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`)) < 0 THEN 0\r\n                ELSE 1\r\n            END AS Completion_plan,\r\n        CASE\r\n--             For Manual Entry\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` IN ('Pile Cap','Pile')  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('ACP Works')  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` IN (\r\n                                                                                    'Lift - CTU',\r\n                                                                                    'Lift - Balance passenger lifts',\r\n                                                                                    'Swimming Pool',\r\n                                                                                    'Kids Play Area/ Outdoor Play Area',\r\n                                                                                    'Changing Rooms / GYM',\r\n                                                                                    'Wooden Decking'\r\n                                                                                    )  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'Authority Approvals' AND DC.`Activity Description` IN ( \r\n                                                                                    'Transformer payment',\r\n                                                                                    'LV Inspection & Approval',\r\n                                                                                    'BCC - Inspection & Approval',\r\n                                                                                    'Power on'\r\n                                                                                    ) THEN 'MANUAL_ENTRY'\r\n--         For Structures\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` IN ('Grade Slab','Podium Slabs','Typical Floor Slabs')  THEN 'F_PLN_STRUCTURES'\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` NOT IN ('Pile','Pile Cap','Grade Slab','Podium Slabs','Typical Floor Slabs')  THEN 'TBD'\r\n--         For Dry Area\r\n            WHEN DC.`Group` = 'Masonary Works' AND DC.`Activity Description` IN ('Blockworks')  THEN 'F_PLN_DRYAREA'\r\n            WHEN DC.`Group` = 'Finishes - Dry Area' THEN 'F_PLN_DRYAREA'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('Sliding Door')  THEN 'F_PLN_DRYAREA'\r\n--         For Wet Area    \r\n            WHEN DC.`Group` = 'Finishes - Wet Area' THEN 'F_PLN_WETAREA'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` IN ('Vanity Cabinet')  THEN 'F_PLN_WETAREA'\r\n--         For Corridor Area\r\n            WHEN DC.`Group` = 'Finishes - Corridor' THEN 'F_PLN_CORRIDOR'\r\n--         For Balcony Area\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('EIFS','Balustrade Works')  THEN 'F_PLN_BALCONYAREA'\r\n--         For Kitchen Area\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` IN ('Kitchen Appliances')  THEN 'F_PLN_KITCHENAREA'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` IN ('Kitchen Cabinet')  THEN 'F_PLN_KITCHENAREA'\r\n--         For KeepOut Area\r\n            WHEN DC.`Group` = 'Keepout' THEN 'F_PLN_KEEPOUT'\r\n--         Yet to be Decided\r\n            WHEN DC.`Group` = 'Authority Approvals' AND DC.`Activity Description` NOT IN ( \r\n                                                                                    'Transformer payment',\r\n                                                                                    'LV Inspection & Approval',\r\n                                                                                    'BCC - Inspection & Approval',\r\n                                                                                    'Power on'\r\n                                                                                    ) THEN 'TBD'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` NOT IN ('Sliding Door','EIFS','Balustrade Works','ACP Works')  THEN 'TBD'\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` NOT IN (\r\n                                                                                    'Kitchen Appliances',\r\n                                                                                    'Lift - CTU',\r\n                                                                                    'Lift - Balance passenger lifts',\r\n                                                                                    'Swimming Pool',\r\n                                                                                    'Kids Play Area/ Outdoor Play Area',\r\n                                                                                    'Changing Rooms / GYM',\r\n                                                                                    'Wooden Decking')  THEN 'TBD'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` NOT IN ('Vanity Cabinet','Kitchen Cabinet')  THEN 'TBD'\r\n            ELSE 'MISSING'\r\n        END AS Source_Templet,\r\n        OLMP.Sort_Group,\r\n        OLMP.Sort_Activity,\r\n        OLMP.Activity_New,\r\n        P.FLAT_COUNT,\r\n        DC.`Actual %`\r\n        FROM DATA_CORRECTOR_Plan DC \r\n            LEFT JOIN O_PLN_MILESTONE_MAP OLMP\r\n                ON DC.`Group` = OLMP.`Group` \r\n                AND DC.`Activity Description` = OLMP.Activity\r\n            LEFT JOIN PROJECTS P\r\n                ON DC.project_id = P.Project_Identifier),\r\nUnion_All_Final AS (\r\n    SELECT \r\n        *,\r\n        'Actuals' AS Legend\r\n    FROM OUTPUT_Plan\r\n    UNION ALL \r\n    SELECT \r\n        Upload_Time,\r\n        project_id,\r\n        `Group`,\r\n        `Activity Description`,\r\n        Activity_New,\r\n--         Completion_plan*100 AS Actual_Achived,\r\n        Completion_plan AS Actual_Achived,\r\n        `Baseline Start Date`  AS     `Actual Start Date`,\r\n        `Baseline Finish Date` AS    `Actual Finish Date`,\r\n        Total_days,\r\n        Days_elapsed,\r\n        Source_Templet,\r\n        Source_Templet AS Source_Table,\r\n        Sort_Group,\r\n        Sort_Activity,\r\n        `Actual %`,\r\n        'Plan' AS Legend\r\n    FROM MILESTONE_MAIN_TABLE_Plan),\r\nCORRECTOR_Manual_Actuals AS (\r\nSELECT \r\n    DATE(upload_time) AS Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    Description,\r\n    CASE \r\n        WHEN `% Actuals` IS NULL OR TRIM(`% Actuals`) IN ('') THEN 0\r\n        ELSE IFNULL(CAST(REPLACE(`% Actuals`,'%','') AS DECIMAL),0.00)/100 \r\n    END AS `% Actuals`,\r\n    DENSE_RANK () OVER (PARTITION BY project_id ORDER BY DATE(upload_time) DESC) AS Dense_Ranker\r\nFROM F_PLN_MILESTONE_MANUAL),\r\nManual_Actuals AS (\r\n    SELECT \r\n         Upload_Date,\r\n        project_id,\r\n        Description,\r\n        `% Actuals`,\r\n        'Actuals' AS Legend,\r\n        OPMP.*\r\n    FROM CORRECTOR_Manual_Actuals C1\r\n    LEFT JOIN O_PLN_MILESTONE_MAP OPMP ON C1.Description = OPMP.`Activity`\r\n    WHERE Dense_Ranker = 1 ORDER BY 1,2,3,4),\r\nManual_Actual_Merge AS (\r\n    SELECT \r\n        UAF.Upload_Date,\r\n        UAF.project_id,\r\n        UAF.`Group`,\r\n        UAF.`Activity Description`,\r\n        UAF.Activity_New,\r\n        CASE \r\n            WHEN TRIM(UAF.Activity_New) IN ('BCC - Inspection & Approval','Power on','LV Inspection & Approval',\r\n                                        'Wooden Decking','ACP Works','Kids Play Area/ Outdoor Play Area',\r\n                                        'Swimming Pool','Changing Rooms / GYM','Lift - Balance passenger lifts',\r\n                                        'Lift - CTU','Pile Cap','Transformer payment','Pile')\r\n                    AND UAF.Legend = 'Actuals' THEN MD.`% Actuals` \r\n            ELSE UAF.Actual_Achived\r\n        END AS Actual_Achived,\r\n        UAF.`Actual Start Date`,\r\n        UAF.`Actual Finish Date`,\r\n        UAF.Total_days,\r\n        UAF.Days_elapsed,\r\n        UAF.Source_Templet,\r\n        UAF.Source_Table,\r\n        UAF.Sort_Group,\r\n        UAF.Sort_Activity,\r\n        UAF.Legend,\r\n        UAF.`Actual %`\r\n    FROM Union_All_Final UAF \r\n    LEFT JOIN Manual_Actuals MD \r\n    ON UAF.Activity_New = MD.Activity_New\r\n    AND UAF.project_id  = MD.project_id\r\n    AND UAF.Legend  = MD.Legend\r\n    ),\r\nFinal_OutPut AS (\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        `Group`,\r\n        `Activity Description`,\r\n        Activity_New,\r\n        Actual_Achived AS Original_Actuals,\r\n        CASE \r\n            WHEN IFNULL(Actual_Achived,0) >1 THEN 1\r\n            ELSE IFNULL(Actual_Achived,0)\r\n        END AS     Actual_Achived,\r\n        `Actual Start Date`,\r\n        `Actual Finish Date`,\r\n        Total_days,\r\n        Days_elapsed,\r\n        Source_Templet,\r\n        Source_Table,\r\n        Sort_Group,\r\n        Sort_Activity,\r\n        Legend,\r\n        `Actual %`\r\n    FROM Manual_Actual_Merge),\r\nAUG_GAANT_TEST AS (\r\n    SELECT \r\n    --     project_id,\r\n    --     `Group`,\r\n    --     `Activity Description`,\r\n    --     Activity_New,Source_Templet,Source_Table,Legend,\r\n        *,\r\n        CONCAT(Legend,' : ',CAST(Actual_Achived*100 AS DECIMAL),'%') AS PLN_ACT\r\n    FROM Final_OutPut WHERE Activity_New IS NOT NULL ORDER BY Activity_New),\r\nAA AS (\r\nSELECT \r\n    Sort_Group,\r\n    Sort_Activity+0.1 AS Sort_Activity,\r\n    `Group`,\r\n    Activity,\r\n    Activity_New,\r\n    'Actuals' AS Legend,\r\n    CONCAT(Activity_New,' : (A)') AS NEW_ACT  FROM O_PLN_MILESTONE_MAP opmm \r\nUNION ALL \r\nSELECT \r\n    Sort_Group,\r\n    Sort_Activity,\r\n    `Group`,\r\n    Activity,\r\n    Activity_New,\r\n    'Plan' AS Legend,\r\n    CONCAT(Activity_New,' : (P)') AS NEW_ACT  FROM O_PLN_MILESTONE_MAP opmm),\r\nSEPT_GAANT_TEST AS (\r\nSELECT \r\n    AGT.Upload_Date,\r\n    AGT.project_id,\r\n    AGT.`Group`,\r\n    AGT.Sort_Group as Sort_Grp,\r\n--     AGT.`Activity Description`,\r\n    AGT.Activity_New,\r\n    AA.NEW_ACT AS `Activity Description`,\r\n    AA.Sort_Activity,\r\n    AGT.Original_Actuals,\r\n    AGT.Actual_Achived,\r\n    AGT.`Actual Start Date`,\r\n    AGT.`Actual Finish Date`,\r\n--     AGT.Total_days,\r\n--     AGT.Days_elapsed,\r\n--     AGT.Source_Templet,\r\n--     AGT.Source_Table,\r\n    AGT.Legend,\r\n    AGT.`Actual %`,\r\n    AGT.PLN_ACT\r\nFROM AUG_GAANT_TEST AGT\r\nLEFT JOIN AA     ON AGT.Legend = AA.Legend\r\n                AND AGT.Activity_New = AA.Activity_New\r\n                AND AGT.`Activity Description` = AA.Activity\r\n                AND AGT.`Group` = AA.`Group`\r\n--  WHERE AGT.project_id = 'Sobha Waves Grande'\r\nORDER BY 2,AGT.Sort_Group,AA.Sort_Activity),\r\nManual_Addition_To_Code AS (\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        `Group`,\r\n        Sort_Grp,\r\n        Activity_New,\r\n        `Activity Description`,\r\n        Sort_Activity,\r\n        `Actual Start Date`,\r\n        `Actual Finish Date`,\r\n        Original_Actuals,\r\n        Actual_Achived,\r\n        CASE \r\n            WHEN `Actual %` IS NULL OR TRIM(`Actual %`) IN ('') THEN 0\r\n            ELSE CAST(REPLACE(`Actual %`,'%','') AS DECIMAL)/100\r\n        END AS Manual_Values,    \r\n        Legend,\r\n        PLN_ACT\r\n    FROM SEPT_GAANT_TEST agt),\r\nFinal_Final AS (\r\nSELECT \r\n    Upload_Date,\r\n    project_id,\r\n    `Group`,\r\n    Sort_Grp,\r\n    Activity_New,\r\n    `Activity Description`,\r\n    Sort_Activity,\r\n    `Actual Start Date`,\r\n    `Actual Finish Date`,\r\n    Original_Actuals,\r\n--     Actual_Achived,\r\n    CASE \r\n        WHEN Actual_Achived <= Manual_Values AND Legend = 'Actuals' THEN Manual_Values\r\n        ELSE Actual_Achived\r\n    END AS Actual_Achived,    \r\n--     Manual_Values,\r\n    Legend\r\nFROM Manual_Addition_To_Code) \r\nSELECT *,\r\n    CONCAT(Legend,' : ',CAST(Actual_Achived*100 AS DECIMAL),'%') AS PLN_ACT  FROM Final_Final;\r\n\r\n/**/\r\n\r\nSELECT 1;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_MySQL_Data_Loads_DB",
						"type": "DatasetReference"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-01-16T23:08:27Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}