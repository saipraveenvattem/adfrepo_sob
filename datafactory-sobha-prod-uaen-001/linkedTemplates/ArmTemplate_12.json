{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-sobha-prod-uaen-001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_TOWER_PODIUM_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_TOWER_PODIUM_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_TOWER_PODIUM_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_TOWER_PODIUM_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_TOWER_PODIUM_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T12:07:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_WATERROOM_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_WATERROOM_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_WATERROOM_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "O_PLN_WATERROOM_MAP_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_WATERROOM_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_WATERROOM_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T14:03:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_WATERROOM_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_WATERROOM_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_WATERROOM_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WATERROOM_RAW_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork Layout",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork_Layout",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking for Builders Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking_for_Builders_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cutting & Chasing of Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cutting_and_Chasing_of_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Services_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall MEP Services Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_MEP_Services_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Cutting & Chipping",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Cutting_and_Chipping",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Sleeve Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Sleeve_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bore Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bore_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Installation of PPR pipes",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Installation_of_PPR_pipes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manifold & Valve installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Manifold_and_Valve_installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PRV installation & connections",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRV_installation_and_connections",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Testing of Pipes",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Testing_of_Pipes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Sealant Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Sealant_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Framing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Framing_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "False Ceiling Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "False_Ceiling_Framing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Boarding_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "False Ceiling Boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "False_Ceiling_Boarding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Architrave_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Grinding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Grinding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Bug Fill",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Bug_Fill",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy First Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_First_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Final Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Final_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grouting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grouting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PSV Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PSV_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Water Meter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Water_Meter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_WATERROOM_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_WATERROOM_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T12:47:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_WETAREA_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_WETAREA_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_WETAREA_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WETAREA_MAP_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_WETAREA_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_WETAREA_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T10:28:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_WETAREA_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_WetAREA_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_WETAREA_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WetArea_Raw_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Flat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Flat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plastering Clearance with 1 Mtr Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plastering_Clearance_with_1_Mtr_Marking",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Tile Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Tile_Marking",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Cutting & Chasing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Cutting_And_Chasing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pex pipe installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Pex_pipe_installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Re packing of MEP Services",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Re_packing_of_MEP_Services",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Pipe installation - Borepacking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Pipe_installation_Borepacking",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Bore Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Bore_Packing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cistern installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cistern_installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Drywall framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drywall_framing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pex Elbow & Connections",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Pex_Elbow_Connections",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bottom Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bottom_Boarding_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bottom boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bottom_boarding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Under Screed Waterproofing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Under_Screed_Waterproofing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Screed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ledge Wall Full Board Closure Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ledge_Wall_Full_Board_Closure_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Water Supply & Drainage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Water_Supply_Drainage",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Ducting & FCU Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Ducting_FCU_Works",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Electrical Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Electrical_Services_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Works & Testing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Works_Testing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Packing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Packing_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Packing for all builders work opening",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Packing_for_all_builders_work_opening",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area MEP H/L Fire Sealent & Framing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_MEP_H_L_Fire_Sealent_Framing_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet area Wall Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_area_Wall_Tile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area FC Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_FC_Framing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area MEP H/L Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_MEP_H_L_Boarding_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FC Boarding & Joint Taping",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FC_Boarding_Joint_Taping",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Paint Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Paint_Primer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Paint Stucco 1st Coat & 2nd Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Paint_Stucco_1st_Coat_2nd_Coat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Ceiling First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Ceiling_First_Coat_Paint",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Grill & Diffuser Installtion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Grill_Diffuser_Installtion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shower Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shower_Threshold",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Linear Drain Supply",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Linear_Drain_Supply",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Linear Drain Fixing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Linear_Drain_Fixing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Under Tile Waterproofing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Under_Tile_Waterproofing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Threshold",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Floor Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Floor_Tile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wall tile bottom Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_tile_bottom_Tile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Grouting - Wall & Floor",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grouting_Wall_Floor",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Silicone - Wall & Floor Corners",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone_Wall_Floor_Corners",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shower Partition - U channel",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shower_Partition_U_channel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shower Partition - Glass",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shower_Partition_Glass",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Accessories & Silicon",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Accessories_Silicon",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door - Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Frame_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door - Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Architrave_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door - Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Shutter_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door - Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Vanity Cabinet",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vanity_Cabinet",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Vanity Cabinet Counter top",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vanity_Cabinet_Counter_top",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures_Sanitary_CP_fittings_Lights_WB",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Ledge Wall Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Ledge_Wall_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ledge Wall Closing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ledge_Wall_Closing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Silicone around MEP Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone_around_MEP_Fixtures",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Final Coat paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Final_Coat_paint",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_WETAREA_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_WETAREA_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T10:03:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_Sbu_Mapping_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_O_Sbu_Mapping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_SBU_MAPPING_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBU_MAPPING_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "mapping_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Mapping_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "sbu_identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Identifier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_shorts",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Shorts",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_SBU_MAPPING_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_SBU_MAPPING_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T08:12:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_PLANGRID_PROJECT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Task_Report_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate Table [STG].[PG_PLANGRID_PROJECT_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project_Short_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Short_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_PLANGRID_PROJECT_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_PLANGRID_PROJECT_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-09T14:24:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Plangrid_Cluster_Mapping_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Plangrid_Cluster_Mapping_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate Table [STG].[PG_PLANGRID_CLUSTER_MAPPING_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Stamp_First",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stamp_First",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cluster_Short",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Cluster_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cluster_Full",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Cluster_Full",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Works",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Approval",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Approval",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_Plangrid_Cluster_Mapping_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_Plangrid_Cluster_Mapping_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-09T13:33:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Plangrid_Mapping_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Plangrid_Mapping_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate table [STG].[PG_Plangrid_Mapping_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Act_Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Act_Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Cluster",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Cluster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_Plangrid_Mapping_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_Plangrid_Mapping_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-24T13:59:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Project_Master_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Project_Master_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate Table  [STG].[PG_Project_Master_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project_id",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Created_ON",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Project_Created_ON",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_Project_Master_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_Project_Master_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-24T14:34:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Task_Report_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Task_Report_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate table [STG].[PG_TASK_REPORT_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Task_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Task_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sheet",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Sheet",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Root_Cause",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Root_Cause",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Created_By",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Created_By",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Assigned_To",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Assigned_To",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Watchers",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Watchers",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Photos",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Photos",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Archived",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Archived",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Start_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Start_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Due_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Due_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Cost_Impact",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Cost_Impact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cost_Impact_Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										},
										"sink": {
											"name": "Cost_Impact_Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Schedule_Impact",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Schedule_Impact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Schedule_Impact_Amount_Days",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Schedule_Impact_Amount_Days",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Last_Updated_On",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Last_Updated_On",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Closed_on",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Closed_on",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Task_Refresh_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Task_Refresh_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Task_Ref_No",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Task_Ref_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_Task_Report_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_Task_Report_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-09T13:36:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROCUREMENT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROCUREMENT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_PROCUREMENT_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Procurement_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Classification",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Classification",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Issuance of Drawings_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Issuance_of_Drawings_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Issuance of Drawings_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Issuance_of_Drawings_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PR_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PR_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PR_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PR_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vendor Finalization_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vendor_Finalization_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vendor Finalization_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vendor_Finalization_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prequalification Submission_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Prequalification_Submission_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prequalification Submission_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Prequalification_Submission_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prequalification Approval_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Prequalification_Approval_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prequalification Approval_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Prequalification_Approval_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Release of contract documents_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Release_of_Contract_documents_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Release of contract documents_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Release_of_Contract_documents_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing/Technical Submission_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing_Technical_Submission_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing/Technical Submission_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing_Technical_Submission_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing/Technical Submission Approval_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing_Technical_Submission_Approval_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing/Technical Submission Approval_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing_Technical_Submission_Approval_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Required at site by",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Required_at_site_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual delivery at site",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_Delivery_at_site",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PLN_PROCUREMENT_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PLN_PROCUREMENT_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T10:45:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROJECTS_NEW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROJECTS_NEW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[PROJECTS_NEW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Sort_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Sort_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Identifier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FLAT_COUNT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FLAT_COUNT",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Short",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total_Floors",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Floors",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Podiums",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Podiums",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Typical_Floor",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Typical_Floor",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Typical_Floor_Slab",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Typical_Floor_Slab",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Podium_Slab",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Podium_Slab",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "1_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ONE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "2_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TWO_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "1_5_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ONE_FIVE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "2_5_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TWO_FIVE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "3_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "THEREE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "4_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FOUR_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "5_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FIVE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Actual_Start",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Actual_Start",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "BOQ_Value",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BOQ_Value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bathrooms",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Bathrooms",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Center_Tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Center_Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Built_Up_Area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Built_Up_Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Chairman_Lift",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Chairman_Lift",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Delay",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Delay",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Duplex",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Duplex",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire_Lifts",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Fire_Lifts",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Forecast_Duration",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Forecast_Duration",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Forecast_Finish",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Forecast_Finish",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Lat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Lat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Long",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Long",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Office_Space",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Office_Space",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Office_Use_Lift",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Office_Use_Lift",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Parkings",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Parkings",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Pent_House",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Pent_House",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Passenger_Lift",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Passenger_Lift",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Configuration",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Configuration",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Duration",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Project_Duration",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Finish",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Project_Finish",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Project_Start",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Project_Start",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Residence_Use_Lift",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Residence_Use_Lift",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Retail",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Retail",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Service_Lift",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Service_Lift",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Staircase_GF_L1",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Staircase_GF_L1",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Staircase_GF_Roof",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Staircase_GF_Roof",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Units",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Units",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Tower_A",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower_A",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tower_B",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower_B",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tower_C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower_C",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tower_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Towers",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Towers",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Image_Link",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Image_Link",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Render_Image",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Render_Image",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PROJECTS_NEW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PROJECTS_NEW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T10:55:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROJECTS_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROJECTS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[PROJECTS_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Sort_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Project_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Identifier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Short",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FLAT_COUNT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Flat_Count",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Floors",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Floors",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Podiums",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Podiums",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Typical_Floor",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Typical_Floor",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Typical_Floor_Slab",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Typical_Floor_Slab",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Podium_Slab",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Podium_Slab",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PLN_PROJECTS_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PLN_PROJECTS_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T10:19:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Common')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Executive",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE for_executive;\r\nINSERT INTO for_executive\r\nWITH AA AS (\r\n SELECT\r\n DATE(OPBSR.upload_time) AS Upload_Date,\r\n OPBSR.Project_id,\r\n CAST(REPLACE(OPBSR.`Achieved Revenue (Till 2021)`,',','') AS DECIMAL) AS `Achieved Revenue (Till 2021)`,\r\n CAST(REPLACE(OPBSR.`Total Revenue (BOQ)`,',','') AS DECIMAL) AS `Total Revenue (BOQ)`,\r\n AA.value AS TILL_DATE_2022,\r\n BB.Projection_Actuals,\r\n(IFNULL(OPBSR.`Achieved Revenue (Till 2021)`,0)+IFNULL(AA.value,0)+IFNULL(BB.Projection_Actuals,0)) AS Total\r\n FROM O_PLN_BUSINESS_PLAN_RAW OPBSR LEFT JOIN (SELECT \r\n Upload_Date,\r\n Project_id,\r\n SUM(value) AS value\r\n FROM F_PLN_BUSINESS_PLAN\r\n WHERE `Type` = 'Actuals' GROUP BY 1,2) AS AA \r\n ON OPBSR.Project_id = AA.Project_id\r\n LEFT JOIN (SELECT \r\n Upload_Date,\r\n `Project Sclicer` AS Project_id,\r\n SUM(`Actual as on date`) AS Projection_Actuals\r\n FROM F_PLN_PROJECTION GROUP BY 1,2) BB\r\n ON OPBSR.Project_id = BB.Project_id\r\n WHERE TRIM(SBU)= 'Overall' \r\n AND `Type` = 'Actuals'),\r\n Stagging AS (\r\n SELECT \r\n Upload_Date,\r\n Project_id,\r\n `Total Revenue (BOQ)` AS Denominator,\r\n `Achieved Revenue (Till 2021)`,\r\n TILL_DATE_2022,\r\n Projection_Actuals,\r\n IFNULL(`Achieved Revenue (Till 2021)`,0)+IFNULL(TILL_DATE_2022,0)+IFNULL(Projection_Actuals,0) AS Numarator\r\n FROM AA) \r\n SELECT *,cast((Numarator/Denominator) as decimal(38,4)) AS Completed,cast((1-(Numarator/Denominator)) as decimal(39,4)) AS Pending FROM Stagging;\r\n\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Paginated Keepout",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE paginated_keepout;\nINSERT INTO paginated_keepout\nWITH Total AS (\nSELECT project_id,Activity,count(`Flat No.`) AS Total\nFROM F_PLN_KEEPOUT_2 GROUP BY 1,2\n),\nCompleted AS (\nSELECT project_id,Activity,count(`Actual`) AS Completed\nFROM F_PLN_KEEPOUT_2 GROUP BY 1,2\n),\nWork_Front AS (\nSELECT project_id,Activity,Predecessor,count(`Predecessor Actual Work Front`) AS `Work Front`\nFROM F_PLN_KEEPOUT_2 GROUP BY 1,2,3\n),\nPlanned AS (\nSELECT project_id,Activity,count(`Flat No.`) AS `Planned`\nFROM F_PLN_KEEPOUT_2  WHERE (Plan <= `Date`)GROUP BY 1,2\n),\nFOR_THE_DAY AS (\nSELECT project_id,Activity,count(`Actual`) AS `FOR THE DAY`\nFROM F_PLN_KEEPOUT_2  WHERE (`Actual` = `Date`) GROUP BY 1,2\n),\nWITHIN_TIME AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `Within Allowable Time`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 0 GROUP BY 1,2),\nDAY_1 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `1 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 1 GROUP BY 1,2),\nDAY_2 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `2 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 2 GROUP BY 1,2),\nDAY_3 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `3 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 3 GROUP BY 1,2),\nDAY_4 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `4 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 4 GROUP BY 1,2),\nDAY_5 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `5 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 5 GROUP BY 1,2),\nDAY_6 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `6 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 6 GROUP BY 1,2),\nDAY_7 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `7 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 7 GROUP BY 1,2),\nDAY_MORETHAN_7 AS (\nSELECT project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `>7 DAYS`\nFROM F_PLN_KEEPOUT_2 WHERE `SLA Actual` > 7 GROUP BY 1,2),\nTOTAL_DELAYED AS (\nSELECT project_id,\n        Activity,\n        SUM(`SLA Actual`) AS `Total Days Delayed`\nFROM F_PLN_KEEPOUT_2 WHERE `SLA Actual` != 0 GROUP BY 1,2),\n-- Need to Fix this\nSHORT_AGAINST_WORKFRONT AS (\nSELECT  project_id,\n        Activity,\n        COUNT(Actual)-COUNT(`Predecessor Actual`) AS `ShortFall Against WorkFront`\nFROM F_PLN_KEEPOUT_2 WHERE `SLA Actual` != 0 GROUP BY 1,2),\nACTIVITY AS (\nSELECT \n     `Date`,\n     project_id,\n     ACTIVITY,\n    `Engineer Responsible`,\n     Predecessor,\n     ACTIVITY_ID\nFROM F_PLN_KEEPOUT_2 group by 1,2,3,4,5,6),\nJOINING_TABLES AS (\nSELECT\nACT.`Date`,\nACT.project_id AS `Project Id`,\nACT.ACTIVITY_ID AS `Activity Id`,\nACT.ACTIVITY AS Activity,\nACT.`Engineer Responsible`,\nACT.Predecessor,\nTOT.Total,\nPLN.Planned,\nCOM.Completed,\n(PLN.Planned-COM.Completed) AS ShortFall,\nWF.`Work Front`, -- Need to check this\nFTD.`FOR THE DAY` AS `For The Day`,\nWT.`Within Allowable Time`,\nD1.`1 DAY`,\nD2.`2 DAY`,\nD3.`3 DAY`,\nD4.`4 DAY`,\nD5.`5 DAY`,\nD6.`6 DAY`,\nD7.`7 DAY`,\nDS7.`>7 DAYS`,\n(IFNULL(D1.`1 DAY`,0)+IFNULL(D2.`2 DAY`,0)+IFNULL(D3.`3 DAY`,0)+IFNULL(D4.`4 DAY`,0)+IFNULL(D5.`5 DAY`,0)+IFNULL(D6.`6 DAY`,0)+IFNULL(D7.`7 DAY`,0)+IFNULL(DS7.`>7 DAYS`,0)) AS `Total Activities Delayed`,\nTD.`Total Days Delayed`\nFROM ACTIVITY ACT\nLEFT JOIN Total TOT ON ACT.ACTIVITY = TOT.ACTIVITY\nLEFT JOIN Completed COM ON ACT.ACTIVITY = COM.ACTIVITY\nLEFT JOIN Work_Front WF ON ACT.ACTIVITY = WF.ACTIVITY\nLEFT JOIN Planned PLN ON ACT.ACTIVITY = PLN.ACTIVITY\nLEFT JOIN FOR_THE_DAY FTD ON ACT.ACTIVITY = FTD.ACTIVITY\nLEFT JOIN WITHIN_TIME WT ON ACT.ACTIVITY = WT.ACTIVITY\nLEFT JOIN DAY_1 D1 ON ACT.ACTIVITY = D1.ACTIVITY\nLEFT JOIN DAY_2 D2 ON ACT.ACTIVITY = D2.ACTIVITY\nLEFT JOIN DAY_3 D3 ON ACT.ACTIVITY = D3.ACTIVITY\nLEFT JOIN DAY_4 D4 ON ACT.ACTIVITY = D4.ACTIVITY\nLEFT JOIN DAY_5 D5 ON ACT.ACTIVITY = D5.ACTIVITY\nLEFT JOIN DAY_6 D6 ON ACT.ACTIVITY = D6.ACTIVITY\nLEFT JOIN DAY_7 D7 ON ACT.ACTIVITY = D7.ACTIVITY\nLEFT JOIN DAY_MORETHAN_7 DS7 ON ACT.ACTIVITY = DS7.ACTIVITY\nLEFT JOIN TOTAL_DELAYED TD ON ACT.ACTIVITY = TD.ACTIVITY) \nSELECT * FROM JOINING_TABLES ORDER BY `Activity Id`;\n\n/**/\n\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Project Progress Summary",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_project_progress_summary;\r\nINSERT INTO f_pln_project_progress_summary\r\nWITH MAP_MERGE_FWP AS (\r\n        SELECT *, 'Dry Area' AS Area FROM O_PLN_DRYAREA_MAP\r\n        UNION ALL\r\n        SELECT *, 'Wet Area' AS Area FROM O_PLN_WETAREA_MAP\r\n        UNION ALL\r\n        SELECT *, 'Kitchen Area' AS Area FROM O_PLN_KITCHENAREA_MAP\r\n        UNION ALL\r\n        SELECT *, 'Balcony Area' AS Area FROM O_PLN_BALCONYAREA_MAP),\r\n    Total_Activities_FWP AS (\r\n        SELECT \r\n            Flat_count.Project_Identifier AS Project,\r\n            OPD.ACTIVITY_ID,\r\n            OPD.SBU_ID,\r\n            OPD.Area,\r\n            'Flatwise Progress' AS `Progress Type`,\r\n            OPD.CATEGORY,\r\n            OPD.ACTIVITY_SEQUENCE,\r\n            Flat_count.`Flats`,\r\n            Flat_count.`Total Floors`,\r\n            Flat_count.`Scheduled Activities`\r\n        FROM MAP_MERGE_FWP OPD CROSS JOIN (SELECT \r\n                                           Project_Identifier,\r\n                                           FLAT_COUNT AS `Scheduled Activities`,\r\n                                           FLAT_COUNT AS `Flats`,\r\n                                           Total_Floors AS `Total Floors`\r\n                                       FROM PROJECTS WHERE Project_Identifier !='Creek Vista Grande') AS Flat_count),\r\n    PROGRESS_TRACKER_FWP AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            sclicer AS Area, -- For Match \r\n            'Flatwise Progress' AS `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            Type_of_work AS ACTIVITY_SEQUENCE,-- For Match\r\n            value,\r\n            CASE WHEN value = 0 THEN 1 ELSE NULL END AS `Yet To Start`,\r\n            CASE WHEN value = 1 THEN 1 ELSE NULL END AS `Completed`,\r\n            CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END AS `In Progress`\r\n        FROM F_PLN_FLATFINISHES WHERE project_id IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n    PROGRESS_TRACKER_FINAL_FWP AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id AS Project, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            Area, -- For Match \r\n            `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            ACTIVITY_SEQUENCE,-- For Match\r\n            AVG(value) AS `Average Achived`,\r\n            SUM(value) AS `SUM Achived`,\r\n            COUNT(value) AS `Count Achived`,\r\n            SUM(`Yet To Start`) AS `Yet To Start`,\r\n            SUM(Completed) AS Completed,\r\n            SUM(`In Progress`) AS `In Progress`\r\n        FROM PROGRESS_TRACKER_FWP GROUP BY Upload_Date,project_id,ACTIVITY_ID,SBU_ID,tower,Area,Category,ACTIVITY_SEQUENCE),\r\n    _FWP_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n        TA.`Total Floors`,\r\n        TA.`Scheduled Activities`,\r\n        PTF.`SUM Achived`,\r\n        PTF.`Count Achived`,\r\n        PTF.`Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_FWP TA LEFT JOIN PROGRESS_TRACKER_FINAL_FWP PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID),\r\n-- End Of Flatwise Progress -- \r\n-- Start Of Service Rooms Progress -- \r\nMAP_MERGE_SRP AS (\r\n    SELECT *, 'Water Room' AS Area FROM O_PLN_WATERROOM_MAP \r\n    UNION ALL\r\n    SELECT *, 'Electrical Room' AS Area FROM O_PLN_ELECTRICALROOM_MAP\r\n    UNION ALL\r\n    SELECT *, 'Telephone Room' AS Area FROM O_PLN_TELEPHONEROOM_MAP\r\n    UNION ALL\r\n    SELECT *, 'Fire-Lift Lobby' AS Area FROM O_PLN_FIRELIFTLOBBY_MAP\r\n    UNION ALL\r\n    SELECT *, 'Garbage Room' AS Area FROM O_PLN_GARBAGEROOM_MAP),\r\nTotal_Activities_SRP AS (\r\n        SELECT \r\n            Flat_count.Project_Identifier AS Project,\r\n               OPD.ACTIVITY_ID,\r\n            OPD.SBU_ID,\r\n            OPD.Area,\r\n            'Service Room Progress' AS `Progress Type`,\r\n            OPD.CATEGORY,\r\n            OPD.ACTIVITY_SEQUENCE,\r\n            Flat_count.*\r\n           FROM MAP_MERGE_SRP OPD CROSS JOIN (SELECT \r\n                                           Project_Identifier,\r\n                                           Total_Floors AS `Scheduled Activities`, \r\n                                           FLAT_COUNT AS `Flats`,\r\n                                           Total_Floors AS `Total Floors`\r\n                                       FROM PROJECTS) AS Flat_count),\r\n    PROGRESS_TRACKER_SRP AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            sclicer AS Area, -- For Match \r\n            'Flatwise Progress' AS `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            Type_of_work AS ACTIVITY_SEQUENCE,-- For Match\r\n            value,\r\n            CASE WHEN value = 0 THEN 1 ELSE NULL END AS `Yet To Start`,\r\n            CASE WHEN value = 1 THEN 1 ELSE NULL END AS `Completed`,\r\n            CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END AS `In Progress`\r\n        FROM F_PLN_SERVICEROOMS WHERE project_id IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n    PROGRESS_TRACKER_FINAL_SRP AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id AS Project, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            Area, -- For Match \r\n            `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            ACTIVITY_SEQUENCE,-- For Match\r\n            AVG(value) AS `Average Achived`,\r\n            SUM(value) AS `SUM Achived`,\r\n            COUNT(value) AS `Count Achived`,\r\n            SUM(`Yet To Start`) AS `Yet To Start`,\r\n            SUM(Completed) AS Completed,\r\n            SUM(`In Progress`) AS `In Progress`\r\n        FROM PROGRESS_TRACKER_SRP GROUP BY Upload_Date,project_id,ACTIVITY_ID,SBU_ID,tower,Area,Category,ACTIVITY_SEQUENCE),\r\n_SRP_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n           TA.`Total Floors`,\r\n           TA.`Scheduled Activities`,\r\n        PTF.`SUM Achived`,\r\n        PTF.`Count Achived`,\r\n        PTF.`Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_SRP TA LEFT JOIN PROGRESS_TRACKER_FINAL_SRP PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID WHERE TA.Project IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')), \r\n-- End Of Service Rooms Progress -- \r\n-- Start Of Structures Progress -- \r\nTotal_Activities_STP AS\r\n(SELECT \r\n    OPD.project_id AS Project,\r\n    OPD.Sequence_of_Appearance AS ACTIVITY_ID,\r\n    'SBU 3' AS SBU_ID,\r\n    'Slab' AS Area,\r\n    'Structure Progress' AS `Progress Type`,\r\n    OPD.area AS CATEGORY,\r\n    OPD.Pour_count AS ACTIVITY_SEQUENCE,\r\n    Flat_count.`Flats`,\r\n    Flat_count.`Total Floors`,\r\n    Flat_count.`Scheduled Activities`\r\nFROM O_PLN_STRUCTURES_POUR_MAP OPD CROSS JOIN (SELECT \r\n                                   0 AS `Scheduled Activities`,\r\n                                   NULL AS `Flats`,\r\n                                   Total_Floors AS `Total Floors`\r\n                               FROM PROJECTS WHERE Project_Identifier !='Creek Vista Grande') AS Flat_count\r\nWHERE type_of_pour LIKE 'slab%' GROUP BY 1,2,3,4,5,6,7,8,9,10),\r\nPROGRESS_TRACKER_FINAL_STP AS (\r\n    SELECT \r\n    Upload_Date,\r\n    Project_Identifier AS Project,\r\n    'Overall' AS tower,\r\n    Sequence_of_Appearance AS ACTIVITY_ID,\r\n    'SBU 3' AS SBU_ID,\r\n    'Slab' AS Area,\r\n    'Structure Progress' AS `Progress Type`,\r\n    area AS Category,\r\n    Pour_count AS ACTIVITY_SEQUENCE,\r\n    COUNT(`Level`) AS `Completed`,\r\n    NULL AS `In Progress`,\r\n    NULL AS `Yet To Start`\r\nFROM F_PLN_STRUCTURES \r\nWHERE Pour LIKE ('slab%') GROUP BY 1,2,3,4,5,6,7,8,9),\r\n_STP_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n           TA.`Total Floors`,\r\n           TA.`Scheduled Activities`,\r\n        PTF.Completed AS `SUM Achived`,\r\n        PTF.Completed AS `Count Achived`,\r\n         NULL AS `Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_STP TA LEFT JOIN PROGRESS_TRACKER_FINAL_STP PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID WHERE TA.Project IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n-- End Of Structures Progress -- \r\n-- Start Of Corridor Progress -- \r\n    MAP_MERGE_CRA AS (\r\n        SELECT *, 'Corridor' AS Area FROM O_PLN_CORRIDOR_MAP),\r\n    Total_Activities_CRA AS (\r\n        SELECT \r\n            Flat_count.Project_Identifier AS Project,\r\n            OPD.ACTIVITY_ID,\r\n            OPD.SBU_ID,\r\n            OPD.Area,\r\n            'Corridor Progress' AS `Progress Type`,\r\n            OPD.CATEGORY,\r\n            OPD.ACTIVITY_SEQUENCE,\r\n            Flat_count.`Flats`,\r\n            Flat_count.`Total Floors`,\r\n            Flat_count.`Scheduled Activities`\r\n        FROM MAP_MERGE_CRA OPD CROSS JOIN (SELECT \r\n                                           Project_Identifier,\r\n                                           Total_Floors AS `Scheduled Activities`,\r\n                                           FLAT_COUNT AS `Flats`,\r\n                                           Total_Floors AS `Total Floors`\r\n                                       FROM PROJECTS WHERE Project_Identifier !='Creek Vista Grande') AS Flat_count),\r\n    PROGRESS_TRACKER_CRA AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            sclicer AS Area, -- For Match \r\n            'Corridor Progress' AS `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            Type_of_work AS ACTIVITY_SEQUENCE,-- For Match\r\n            value,\r\n            CASE WHEN value = 0 THEN 1 ELSE NULL END AS `Yet To Start`,\r\n            CASE WHEN value = 1 THEN 1 ELSE NULL END AS `Completed`,\r\n            CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END AS `In Progress`\r\n        FROM F_PLN_CORRIDOR WHERE project_id IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n    PROGRESS_TRACKER_FINAL_CRA AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id AS Project, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            Area, -- For Match \r\n            `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            ACTIVITY_SEQUENCE,-- For Match\r\n            AVG(value) AS `Average Achived`,\r\n            SUM(value) AS `SUM Achived`,\r\n            COUNT(value) AS `Count Achived`,\r\n            SUM(`Yet To Start`) AS `Yet To Start`,\r\n            SUM(Completed) AS Completed,\r\n            SUM(`In Progress`) AS `In Progress`\r\n        FROM PROGRESS_TRACKER_CRA GROUP BY Upload_Date,project_id,ACTIVITY_ID,SBU_ID,tower,Area,Category,ACTIVITY_SEQUENCE),\r\n    _CRA_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n           TA.`Total Floors`,\r\n           TA.`Scheduled Activities`,\r\n        PTF.`SUM Achived`,\r\n        PTF.`Count Achived`,\r\n        PTF.`Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_CRA TA LEFT JOIN PROGRESS_TRACKER_FINAL_CRA PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID WHERE TA.Project IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n-- End Of Corridor Progress -- \r\n-- Start Of KeppOut Progress -- \r\n    MAP_MERGE_KOA AS (\r\n        SELECT *, 'KeepOut Area' AS Area FROM O_PLN_KEEPOUT_MAP),\r\n    Total_Activities_KOA AS (\r\n        SELECT \r\n            Flat_count.Project_Identifier AS Project,\r\n            OPD.ACTIVITY_ID,\r\n            OPD.SBU_ID,\r\n            OPD.Area,\r\n            'KeepOut Progress' AS `Progress Type`,\r\n            OPD.CATEGORY,\r\n            OPD.ACTIVITY_SEQUENCE,\r\n            Flat_count.`Flats`,\r\n            Flat_count.`Total Floors`,\r\n            Flat_count.`Scheduled Activities`\r\n        FROM MAP_MERGE_KOA OPD CROSS JOIN (SELECT \r\n                                           Project_Identifier,\r\n                                           FLAT_COUNT AS `Scheduled Activities`,\r\n                                           FLAT_COUNT AS `Flats`,\r\n                                           Total_Floors AS `Total Floors`\r\n                                       FROM PROJECTS WHERE Project_Identifier !='Creek Vista Grande') AS Flat_count)\r\n   ,\r\n    PROGRESS_TRACKER_KOA AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_Filter AS SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            'KeepOut Area' AS Area, -- For Match \r\n            'KeepOut Progress' AS `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            Type_of_work AS ACTIVITY_SEQUENCE,-- For Match\r\n            value,\r\n            CASE WHEN value = 0 THEN 1 ELSE NULL END AS `Yet To Start`,\r\n            CASE WHEN value = 1 THEN 1 ELSE NULL END AS `Completed`,\r\n            CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END AS `In Progress`\r\n        FROM F_PLN_KEEPOUT WHERE project_id IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n    PROGRESS_TRACKER_FINAL_KOA AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id AS Project, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            Area, -- For Match \r\n            `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            ACTIVITY_SEQUENCE,-- For Match\r\n            AVG(value) AS `Average Achived`,\r\n            SUM(value) AS `SUM Achived`,\r\n            COUNT(value) AS `Count Achived`,\r\n            SUM(`Yet To Start`) AS `Yet To Start`,\r\n            SUM(Completed) AS Completed,\r\n            SUM(`In Progress`) AS `In Progress`\r\n        FROM PROGRESS_TRACKER_KOA GROUP BY Upload_Date,project_id,ACTIVITY_ID,SBU_ID,tower,Area,Category,ACTIVITY_SEQUENCE),\r\n    _KOA_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n           TA.`Total Floors`,\r\n           TA.`Scheduled Activities`,\r\n        PTF.`SUM Achived`,\r\n        PTF.`Count Achived`,\r\n        PTF.`Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_KOA TA LEFT JOIN PROGRESS_TRACKER_FINAL_KOA PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID WHERE TA.Project IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve'))\r\n-- End Of KeppOut Progress -- \r\n-- This is only to Merge all Data -- \r\nSELECT *, 2 AS SORT_MAIN FROM _FWP_FINAL -- Flatwise Progress\r\nUNION ALL\r\nSELECT *, 4 AS SORT_MAIN FROM _SRP_FINAL -- Service Room Progress\r\nUNION ALL\r\nSELECT *, 1 AS SORT_MAIN FROM _STP_FINAL -- Structures Progress\r\nUNION ALL\r\nSELECT *, 5 AS SORT_MAIN FROM _CRA_FINAL -- Corridor Progress\r\nUNION ALL\r\nSELECT *, 6 AS SORT_MAIN FROM _KOA_FINAL -- KeepOut Progress\r\n-- End of Code -- \r\n;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "BathRoom-CapQ - SaiBath",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE Sai_Bath;\r\nINSERT INTO Sai_Bath\r\nSELECT DATE(`upload_time`) AS Upload_Date,`project_id`,`tower`,\r\nCASE WHEN `Level` = 'Level 1' THEN 'Level 01'\r\n     WHEN `Level` = 'Level 2' THEN 'Level 02'\r\n     WHEN `Level` = 'Level 3' THEN 'Level 03'\r\n     WHEN `Level` = 'Level 4' THEN 'Level 04'\r\n     WHEN `Level` = 'Level 5' THEN 'Level 05'\r\n     WHEN `Level` = 'Level 6' THEN 'Level 06'\r\n     WHEN `Level` = 'Level 7' THEN 'Level 07'\r\n     WHEN `Level` = 'Level 8' THEN 'Level 08'\r\n     WHEN `Level` = 'Level 9' THEN 'Level 09'\r\n     ELSE `Level` END AS 'Level'\r\n,`Flat`,`Apartment Type`,`Count of Bathrooms`,Unpivoted.Type_of_work,\r\n#Unpivoted.Type_of_work,STR_TO_DATE(Unpivoted.Value,'%d-%b%') AS Actual_Closure,\r\ncase\r\nwhen Unpivoted.value='' then str_to_date(concat(Unpivoted.value,'1900-01-01') ,'%Y-%m-%d')\r\nwhen length(Unpivoted.value)<=6  then date_format(str_to_date(concat(Unpivoted.value,'-00'),'%d-%b-%y'),'0000-%m-%d')\r\nelse date_format(str_to_date(Unpivoted.value,'%d-%b-%y'),'0000-%m-%d') \r\nend as Actual_Closure,\r\n `Sequence`,`Day`\r\n-- DENSE_RANK() OVER (PARTITION BY `Level` ORDER BY id_)\r\nFROM BATHROOM_CAPQ CROSS JOIN LATERAL \r\n            (SELECT    `Final Coat Stamp Plan (L7)`,    'Final Coat Stamp Plan (L7)'\r\n                UNION ALL    SELECT    `Final Coat Stamp Actual (L7)`,    'Final Coat Stamp Actual (L7)'\r\n                UNION ALL   SELECT    `Deep Cleaning Plan`, 'Deep Cleaning Plan'\r\n                UNION ALL    SELECT    `Deep Cleaning Actual`,    'Deep Cleaning Actual'\r\n                UNION ALL   SELECT  `MEP T & C Plan` , 'MEP T & C Plan'\r\n                UNION ALL    SELECT    `MEP T & C Actual`,    'MEP T & C Actual'\r\n                UNION ALL   SELECT  `MEP Stamp Closure Plan (L8)`, 'MEP Stamp Closure Plan (L8)'\r\n                UNION ALL    SELECT    `MEP Stamp Closure Actual (L8)`,    'MEP Stamp Closure Actual (L8)'\r\n                UNION ALL   SELECT  `Civil Stamp Closure Plan (L9)`, 'Civil Stamp Closure Plan (L9)'\r\n                UNION ALL    SELECT    `Civil Stamp Closure Actual (L9)`,    'Civil Stamp Closure Actual (L9)'\r\n) AS Unpivoted(Value,Type_of_work)\r\nLEFT JOIN BATHROOM_CAPQ_MAP bcm ON bcm.Activity = Unpivoted.Type_of_work;\r\n\r\n/**/\r\nSELECT 1;\r\n\r\n",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Engineering Drawing",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_engineeringdrawing;\r\nINSERT INTO f_pln_engineeringdrawing\r\nWITH AA AS (\r\n    SELECT \r\n        DATE(upload_time) AS Upload_Date,\r\n        project_id,\r\n        `Type`,\r\n        `Villa Type`,\r\n        Category,\r\n        `Drawing Number`,\r\n        `Drawing Title`,\r\n        NULLIF(`Scheduled Date`,'') AS `Scheduled Date`,\r\n        `PNCA commitment`,\r\n        DENSE_RANK () OVER (PARTITION BY  project_id ORDER BY  DATE(upload_time) DESC) Project_Udate_DRANK,\r\n        NULLIF(R0,'') AS R0,\r\n        NULLIF(`R0-Trans_Id`,'') AS `R0-Trans_Id`,\r\n        NULLIF(R1,'') AS R1,\r\n        NULLIF(`R1-Trans_Id`,'') AS `R1-Trans_Id`,\r\n        NULLIF(R2,'') AS R2,\r\n        NULLIF(`R2-Trans_Id`,'') AS `R2-Trans_Id`,\r\n        NULLIF(R3,'') AS R3,\r\n        NULLIF(`R3-Trans_Id`,'') AS `R3-Trans_Id`,\r\n        NULLIF(R4,'') AS R4,\r\n        NULLIF(`R4-Trans_Id`,'') AS `R4-Trans_Id`,\r\n        NULLIF(R5,'') AS R5,\r\n        NULLIF(`R5-Trans_Id`,'') AS `R5-Trans_Id`,\r\n        NULLIF(R6,'') AS R6,\r\n        NULLIF(`R6-Trans_Id`,'') AS `R6-Trans_Id`,\r\n        NULLIF(R7,'') AS R7,\r\n        NULLIF(`R7-Trans_Id`,'') AS `R7-Trans_Id`,\r\n        NULLIF(R8,'') AS R8,\r\n        NULLIF(`R8-Trans_Id`,'') AS `R8-Trans_Id`,\r\n        NULLIF(R9,'') AS R9,\r\n        NULLIF(`R9-Trans_Id`,'') AS `R9-Trans_Id`,\r\n        NULLIF(R10,'') AS R10,\r\n        NULLIF(`R10-Trans_Id`,'') AS `R10-Trans_Id`,\r\n        NULLIF(R11,'') AS R11,\r\n        NULLIF(`R11-Trans_Id`,'') AS `R11-Trans_Id`,\r\n        NULLIF(R12,'') AS R12,\r\n        NULLIF(`R12-Trans_Id`,'') AS `R12-Trans_Id`,\r\n        NULLIF(R11,'') AS R13,\r\n        NULLIF(`R11-Trans_Id`,'') AS `R13-Trans_Id`,\r\n        NULLIF(R12,'') AS R14,\r\n        NULLIF(`R12-Trans_Id`,'') AS `R14-Trans_Id`,\r\n        NULLIF(R13,'') AS R15,\r\n        NULLIF(`R13-Trans_Id`,'') AS `R15-Trans_Id`,\r\n        NULLIF(R14,'') AS R16,\r\n        NULLIF(`R14-Trans_Id`,'') AS `R16-Trans_Id`,\r\n        NULLIF(R15,'') AS R17,\r\n        NULLIF(`R15-Trans_Id`,'') AS `R17-Trans_Id`,\r\n        NULLIF(R16,'') AS R18,\r\n        NULLIF(`R16-Trans_Id`,'') AS `R18-Trans_Id`,\r\n        NULLIF(R17,'') AS R19,\r\n        NULLIF(`R17-Trans_Id`,'') AS `R19-Trans_Id`,\r\n        NULLIF(R18,'') AS R20,\r\n        NULLIF(`R18-Trans_Id`,'') AS `R20-Trans_Id`,\r\n        NULLIF(R19,'') AS R21,\r\n        NULLIF(`R19-Trans_Id`,'') AS `R21-Trans_Id`,\r\n        NULLIF(R20,'') AS R22,\r\n        NULLIF(`R20-Trans_Id`,'') AS `R22-Trans_Id`,\r\n        NULLIF(R21,'') AS R23,\r\n        NULLIF(`R21-Trans_Id`,'') AS `R23-Trans_Id`,\r\n        NULLIF(R22,'') AS R24,\r\n        NULLIF(`R22-Trans_Id`,'') AS `R24-Trans_Id`,\r\n        NULLIF(R23,'') AS R25,\r\n        NULLIF(`R23-Trans_Id`,'') AS `R25-Trans_Id`\r\n    FROM O_PLN_DRAWING_DETAIL_DRAW\r\n    WHERE (`Type` IS NOT NULL AND TRIM(`Type`) NOT IN (''))),\r\nAB AS (\r\nSELECT * FROM AA\r\nWHERE Project_Udate_DRANK = 1) SELECT * FROM  AB;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Corrider",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_corridor;\r\nINSERT INTO f_pln_corridor\r\nWITH PRE_STAGGING AS(\r\n        SELECT DATE(O_PLN_CORRIDOR_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_CORRIDOR_RAW.project_id,\r\n        O_PLN_CORRIDOR_RAW.tower,\r\n        O_PLN_CORRIDOR_RAW.Level,\r\n        'Corridor' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_CORRIDOR_MAP.ACTIVITY_ID,\r\n        O_PLN_CORRIDOR_MAP.SBU_ID,\r\n        O_PLN_CORRIDOR_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    FROM O_PLN_CORRIDOR_RAW\r\n    CROSS JOIN LATERAL (\r\n                        SELECT\t`Corridor MEP Marking for Builders Work`\t,\t'Corridor MEP Marking for Builders Work'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Cutting & Chasing of Blockwork`\t,\t'Corridor Cutting & Chasing of Blockwork'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor MEP Services Installation`\t,\t'Corridor MEP Services Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Wall MEP Services Packing`\t,\t'Corridor Wall MEP Services Packing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Plaster`\t,\t'Corridor Plaster'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Screed`\t,\t'Corridor Screed'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Grinding Clearance for Tile`\t,\t'Grinding Clearance for Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Tile Marking`\t,\t'Tile Marking'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Bull Marking`\t,\t'Bull Marking'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Electrical Conduits`\t,\t'Electrical Conduits'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Cold water supply`\t,\t'Cold water supply'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Fire Fighting Pipe Support`\t,\t'Fire Fighting Pipe Support'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Modular Instalation`\t,\t'Modular Instalation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Framing Clearance by MEP`\t,\t'Framing Clearance by MEP'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Center line marking for Facade Installation`\t,\t'Center line marking for Facade Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Curtain Wall Box Installation`\t,\t'Corridor Curtain Wall Box Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Curtain Wall Frame Installation`\t,\t'Corridor Curtain Wall Frame Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Curtain Wall Glass Installation`\t,\t'Corridor Curtain Wall Glass Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Curtain Wall Flashing Installation`\t,\t'Corridor Curtain Wall Flashing Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Floor Tile`\t,\t'Corridor Floor Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Wall Tile`\t,\t'Corridor Wall Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Fire Hose Reel Cabinet Installation`\t,\t'Fire Hose Reel Cabinet Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Grouting for Framing Clearance`\t,\t'Grouting for Framing Clearance'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor FC Framing`\t,\t'Corridor FC Framing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Access Panel Markings & Inspection`\t,\t'MEP Access Panel Markings & Inspection'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Works for Boarding Clearance `\t,\t'MEP Works for Boarding Clearance '\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Framing Levelling`\t,\t'Framing Levelling'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor FC Boarding`\t,\t'Corridor FC Boarding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Joint Taping & Sanding`\t,\t'Joint Taping & Sanding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Ceiling Primer`\t,\t'Corridor Ceiling Primer'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Ceiling Stucco (1st and 2nd Coat)`\t,\t'Corridor Ceiling Stucco (1st and 2nd Coat)'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Ceiling First Coat Paint`\t,\t'Corridor Ceiling First Coat Paint'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Grouting`\t,\t'Corridor Grouting'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Silicone`\t,\t'Corridor Silicone'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Left over Screed`\t,\t'Left over Screed'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Left Over Area Floor Tile`\t,\t'Left Over Area Floor Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Left Over Area Wall Tile`\t,\t'Left Over Area Wall Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Remaining Grout and Silicone Works`\t,\t'Remaining Grout and Silicone Works'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor MEP Final Fixtures`\t,\t'Corridor MEP Final Fixtures'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Final Coat Paint`\t,\t'Corridor Final Coat Paint'\r\n                        )as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_CORRIDOR_MAP \r\n    ON TRIM(Column_Name.Type_of_work) = TRIM(O_PLN_CORRIDOR_MAP.ACTIVITY_SEQUENCE)\r\n    WHERE VALUE IS NOT NULL),\r\nOUTPUT_FINAL AS (\r\n    SELECT \r\n        PS.Upload_Date ,\r\n        PS.project_id    ,\r\n        PS.tower    ,\r\n        PS.`Level`    ,\r\n        PS.sclicer    ,\r\n        CASE \r\n            WHEN PS.value IN ('','NA') THEN '0%'\r\n            ELSE PS.value\r\n        END AS value,\r\n        PS.Type_of_work    ,\r\n        PS.ACTIVITY_ID    ,\r\n        PS.SBU_ID    ,\r\n        PS.CATEGORY    ,\r\n        OLMA.level_map,\r\n        CASE \r\n            WHEN TRIM(PS.CATEGORY) IN('Builders Work') THEN  2\r\n            WHEN TRIM(PS.CATEGORY) IN('MEP') THEN  12\r\n            WHEN TRIM(PS.CATEGORY) IN('Plaster') THEN  3\r\n            WHEN TRIM(PS.CATEGORY) IN('Screed') THEN  5\r\n            WHEN TRIM(PS.CATEGORY) IN('Tile') THEN  9\r\n            WHEN TRIM(PS.CATEGORY) IN('Marble') THEN  10\r\n            WHEN TRIM(PS.CATEGORY) IN('Facade') THEN  11\r\n            WHEN TRIM(PS.CATEGORY) IN('Gypsum') THEN  6\r\n            WHEN TRIM(PS.CATEGORY) IN('Paint') THEN  8\r\n            ELSE 20\r\n        END AS CATEGORY_SORT\r\n    FROM PRE_STAGGING PS\r\n        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n            ON PS.`Level` = OLMA.`level`\r\n    WHERE PS.Project_Udate_DRANK = 1)\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        sclicer,\r\n        CAST(REPLACE(value,'%','') AS DECIMAL)/100 AS value,\r\n        Type_of_work,\r\n        ACTIVITY_ID,\r\n        SBU_ID,\r\n        CATEGORY,\r\n        level_map,\r\n        CATEGORY_SORT\r\n    FROM OUTPUT_FINAL;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Keep Out SLA",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_keepout_2;\r\nINSERT INTO f_pln_keepout_2\r\nWITH KEEPOUTS_MAIN AS(\r\n    SELECT\r\n        DATE(OPKDR.upload_time) AS Upload_Date,\r\n        OPKDR.project_id    ,\r\n        OPKDR.tower    ,\r\n        OPKDR.`Level`,\r\n        OPKDR.`Flat No.`,\r\n        OPKDR.`Apartment Type`,\r\n        OPKM.SBU_ID,\r\n        OPKM.ACTIVITY_ID,\r\n        OPKM.ENGINEER_RESPONSIBLE,\r\n        OPKM.PREDECESSOR_DATA,\r\n        Column_Name.Types_of_Activities,\r\n        Column_Name.value_plan,\r\n        Column_Name.value_act,\r\n        DENSE_RANK() OVER(PARTITION BY OPKDR.project_id ORDER BY DATE(OPKDR.upload_time) DESC) AS Dense_Ranker\r\n    FROM O_PLN_KEEPOUT_DETAILED_RAW OPKDR\r\n    CROSS JOIN LATERAL (\r\n                        SELECT         `WIR - Final Coat Paint Plan`                    ,`WIR - Final Coat Paint Actual` ,'WIR - Final Coat Paint'\r\n                UNION ALL SELECT      `F6 / F7 Final Coat Paint - Stamp Closure Plan`     ,`F6 / F7 Final Coat Paint - Stamp Closure Actual`,'F6 / F7 Final Coat Paint - Stamp Closure'\r\n                UNION ALL SELECT      `Deep Cleaning Plan`                                 ,`Deep Cleaning Actual`,'Deep Cleaning'\r\n                UNION ALL SELECT      `Facade Stamp Closing Plan`                         ,`Facade Stamp Closing Actual`,'Facade Stamp Closing'\r\n                UNION ALL SELECT      `MEP Final Fixtures Plan`                         ,`MEP Final Fixtures Actual`,'MEP Final Fixtures'\r\n                UNION ALL SELECT      `MEP T&C Stamps Closure Plan`                     ,`MEP T&C Stamps Closure Actual` ,'MEP T&C Stamps Closure'\r\n                UNION ALL SELECT      `F7 Stamp Closure Plan`                             ,`F7 Stamp Closure Actual` ,'F7 Stamp Closure'\r\n                UNION ALL SELECT      `MEP NOC in Draft / Assign to MEP QC Plan`         ,`MEP NOC in Draft / Assign to MEP QC Actual`,'MEP NOC in Draft / Assign to MEP QC'\r\n                UNION ALL SELECT      `Civil NOC in Draft / Assign to Civil QC Plan`     ,`Civil NOC in Draft / Assign to Civil QC Actual` ,'Civil NOC in Draft / Assign to Civil QC'\r\n                UNION ALL SELECT      `MEP NOC Submission Plan`                         ,`MEP NOC Submission Actual`,'MEP NOC Submission' ##\r\n                UNION ALL SELECT      `CIVIL NOC Submission Plan`                         ,`CIVIL NOC Submission Actual`,'CIVIL NOC Submission' ##\r\n                UNION ALL SELECT      `Facade Field report 1st inspection Plan`         ,`Facade Field report 1st inspection Actual`,'Facade Field report 1st inspection'\r\n                UNION ALL SELECT      `Facade Field Report assign to MEP Plan`             ,`Facade Field Report assign to MEP Actual` ,'Facade Field Report assign to MEP'\r\n                UNION ALL SELECT      `MEP Stamp Field report 1st inspection Plan`         ,`MEP Stamp Field report 1st inspection Actual`,'MEP Stamp Field report 1st inspection'\r\n                UNION ALL SELECT      `MEP Field report submission Plan`                 ,`MEP Field report submission Actual` ,'MEP Field report submission'\r\n                UNION ALL SELECT      `Civil Field report 1st inspection Plan`             ,`Civil Field report 1st inspection Actual` ,'Civil Field report 1st inspection'\r\n                UNION ALL SELECT      `Civil Field Report Submission Plan`                 ,`Civil Field Report Submission Actual` ,'Civil Field Report Submission'\r\n                UNION ALL SELECT      `SCL Keep-out Stamp (N1) -Into Review Plan`         ,`SCL Keep-out Stamp (N1) -Into Review Actual` ,'SCL Keep-out Stamp (N1) -Into Review'\r\n                UNION ALL SELECT      `PNCA Keep-out (N1) Into Pending Plan`             ,`PNCA Keep-out (N1) Into Pending Actual` ,'PNCA Keep-out (N1) Into Pending'\r\n                UNION ALL SELECT      `QT Inspection Keep-out Stamp (N1) Plan`             ,`QT Inspection Keep-out Stamp (N1) Actual` ,'QT Inspection Keep-out Stamp (N1)'\r\n    ) AS Column_Name(value_plan,value_act,Types_of_Activities)\r\n    JOIN O_PLN_KEEPOUTS_MAP OPKM\r\n    ON Column_Name.Types_of_Activities = OPKM.ACTIVITY_SEQUENCE\r\n    WHERE Column_Name.value_act !='0-Jan-00'),\r\nPRE_VALIDATION_DATA AS(\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        `Flat No.`,\r\n        `Apartment Type`,\r\n        SBU_ID,\r\n        ACTIVITY_ID,\r\n        ENGINEER_RESPONSIBLE,\r\n        PREDECESSOR_DATA,\r\n        Types_of_Activities,\r\n        value_plan,\r\n        value_act\r\n    FROM KEEPOUTS_MAIN \r\n    WHERE Dense_Ranker=1),\r\nOUTPUT_1 AS (\r\n    SELECT \r\n        PVD1.Upload_Date,\r\n        PVD1.project_id,\r\n        PVD1.tower,\r\n        PVD1.`Level`,\r\n        PVD1.`Flat No.`,\r\n        PVD1.`Apartment Type`,\r\n        PVD1.SBU_ID,\r\n        PVD1.ACTIVITY_ID,\r\n        PVD1.ENGINEER_RESPONSIBLE,\r\n        PVD1.Types_of_Activities,\r\n        PVD1.PREDECESSOR_DATA,\r\n        CASE\r\n            WHEN TRIM(PVD1.value_act) IN ('','-') THEN NULL\r\n            ELSE STR_TO_DATE(PVD1.value_act,'%d-%b-%y')\r\n        END AS value_act,\r\n        CASE\r\n            WHEN TRIM(PVD2.value_act) IN ('','-') THEN NULL\r\n            ELSE STR_TO_DATE(PVD2.value_act,'%d-%b-%y')\r\n        END AS Predes_value_act,\r\n        CASE\r\n            WHEN TRIM(PVD1.value_plan) IN ('','-') THEN NULL\r\n            ELSE STR_TO_DATE(PVD1.value_plan,'%d-%b-%y')\r\n        END AS value_plan,\r\n        CASE\r\n            WHEN TRIM(PVD2.value_plan) IN ('','-') THEN NULL\r\n            ELSE STR_TO_DATE(PVD2.value_plan,'%d-%b-%y')\r\n        END AS Predes_value_plan\r\n    FROM PRE_VALIDATION_DATA PVD1 \r\n    LEFT JOIN PRE_VALIDATION_DATA PVD2\r\n         ON PVD1.project_id = PVD2.project_id\r\n        AND PVD1.tower = PVD2.tower\r\n        AND PVD1.`Level` = PVD2.`Level`\r\n        AND PVD1.`Flat No.` = PVD2.`Flat No.`\r\n        AND PVD1.PREDECESSOR_DATA = PVD2.Types_of_Activities),\r\nPRE_VALIDATION_DATA2 AS (\r\n    SELECT \r\n            PVD1.project_id,\r\n            PVD1.tower,\r\n            PVD1.`Level`,\r\n            PVD1.`Flat No.`,\r\n            PVD1.`Apartment Type`,\r\n            PVD1.Types_of_Activities,\r\n            CASE \r\n                WHEN TRIM(PVD1.value_act) IN ('','-') THEN NULL\r\n                ELSE STR_TO_DATE(PVD1.value_act,'%d-%b-%y')\r\n            END AS value_act,\r\n            CASE \r\n                WHEN TRIM(PVD1.value_plan) IN ('','-') THEN NULL\r\n                ELSE STR_TO_DATE(PVD1.value_plan,'%d-%b-%y')\r\n            END AS value_plan,\r\n            CASE \r\n                WHEN TRIM(PVD1.Types_of_Activities) IN ('MEP T&C Stamps Closure'\r\n                                            ,'Facade Field Report assign to MEP'\r\n                                            ,'MEP NOC Submission') THEN 'FROM CTE 1'\r\n                ELSE 'FROM CTE 2'\r\n            END AS Types_of_Activities_group\r\n    FROM PRE_VALIDATION_DATA PVD1\r\n    WHERE TRIM(PVD1.Types_of_Activities) IN ('MEP T&C Stamps Closure'\r\n                                    ,'Facade Field Report assign to MEP'\r\n                                    ,'MEP NOC Submission'\r\n                                    ,'MEP Field report submission'\r\n                                    ,'CIVIL NOC Submission')),\r\nAggeregate_Prdes_act AS (\r\n    SELECT \r\n        *,\r\n        DENSE_RANK() OVER(PARTITION BY project_id,tower,`Level`,`Flat No.`,`Apartment Type`,Types_of_Activities_group ORDER BY value_act DESC) AS Date_Ranker_act,\r\n    COUNT(value_act) AS Count_Act\r\n    FROM PRE_VALIDATION_DATA2 PVD1\r\n    GROUP BY project_id,tower,`Level`,`Flat No.`,`Apartment Type`,Types_of_Activities,value_act,value_plan,Types_of_Activities_group),\r\nAggeregate_Prdes_Pln AS (\r\n    SELECT \r\n        *,\r\n        DENSE_RANK() OVER(PARTITION BY project_id,tower,`Level`,`Flat No.`,`Apartment Type`,Types_of_Activities_group ORDER BY value_plan DESC) AS Date_Ranker_pln,\r\n        COUNT(value_plan) AS Count_Pln\r\n    FROM PRE_VALIDATION_DATA2 PVD1\r\n    GROUP BY project_id,tower,`Level`,`Flat No.`,`Apartment Type`,Types_of_Activities,value_act,value_plan,Types_of_Activities_group),\r\n-- Need to rework this part\r\nAggeregate_Prdes_Pln_Final AS (\r\n    SELECT \r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        `Flat No.`,\r\n        `Apartment Type`,\r\n        Types_of_Activities,\r\n        value_plan,\r\n        Types_of_Activities_group,\r\n        Date_Ranker_pln,\r\n        SUM(Count_Pln) AS Count_Pln\r\n    FROM Aggeregate_Prdes_Pln   GROUP BY 1,2,3,4,5,6,7,8 ORDER BY Date_Ranker_pln),\r\nAggeregate_Prdes_Act_Final AS (\r\n    SELECT \r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        `Flat No.`,\r\n        `Apartment Type`,\r\n        Types_of_Activities,\r\n        value_act,\r\n        Types_of_Activities_group,\r\n        Date_Ranker_act,\r\n        SUM(Count_act) AS Count_act\r\n    FROM Aggeregate_Prdes_act  GROUP BY 1,2,3,4,5,6,7,8 ORDER BY Date_Ranker_act),\r\nAggeregate_Prdes AS (\r\n    SELECT \r\n        APP.project_id,\r\n        APP.tower,\r\n        APP.`Level`,\r\n        APP.`Flat No.`,\r\n        APP.`Apartment Type`,\r\n        APP.Types_of_Activities_group,\r\n        APP.value_plan,\r\n        APA.value_act,\r\n        APA.Date_Ranker_act,\r\n        APP.Date_Ranker_Pln,\r\n--         APA.Count_Act,\r\n--         APP.Count_Pln,\r\n--         Chnaged this based on sai's Requirement\r\n        CASE \r\n            WHEN APP.Types_of_Activities_group = 'FROM CTE 1' AND APA.Count_Act = 3 THEN 1\r\n            WHEN APP.Types_of_Activities_group = 'FROM CTE 2' AND APA.Count_Act = 2 THEN 1\r\n            ELSE NULL\r\n        END AS Count_Act,\r\n        CASE \r\n            WHEN APP.Types_of_Activities_group = 'FROM CTE 1' AND APP.Count_Pln = 3 THEN 1\r\n            WHEN APP.Types_of_Activities_group = 'FROM CTE 2' AND APP.Count_Pln = 2 THEN 1\r\n            ELSE NULL\r\n        END AS Count_Pln\r\n    FROM Aggeregate_Prdes_Pln_Final APP\r\n    LEFT JOIN Aggeregate_Prdes_Act_Final APA\r\n        ON APP.project_id = APA.project_id\r\n        AND APP.tower = APA.tower\r\n        AND APP.`Level` = APA.`Level`\r\n        AND APP.`Flat No.` = APA.`Flat No.`\r\n        AND APP.`Apartment Type` = APA.`Apartment Type`\r\n        AND APP.Types_of_Activities_group = APA.Types_of_Activities_group\r\n        AND APP.Date_Ranker_Pln = APA.Date_Ranker_act\r\n),\r\n-- Till Here\r\n-- Aggeregate_Prdes_Dranker AS (\r\n--     SELECT \r\n--         APP.project_id,\r\n--         APP.tower,\r\n--         APP.`Level`,\r\n--         APP.`Flat No.`,\r\n--         APP.`Apartment Type`,\r\n--         APP.Types_of_Activities_group,\r\n--         APP.value_plan,\r\n--         APA.value_act,\r\n--         APA.Date_Ranker_act,\r\n--         APP.Date_Ranker_Pln\r\n--     FROM Aggeregate_Prdes_Pln APP\r\n--     LEFT JOIN Aggeregate_Prdes_act APA\r\n--         ON APP.project_id = APA.project_id\r\n--         AND APP.tower = APA.tower\r\n--         AND APP.`Level` = APA.`Level`\r\n--         AND APP.`Flat No.` = APA.`Flat No.`\r\n--         AND APP.`Apartment Type` = APA.`Apartment Type`\r\n--         AND APP.Types_of_Activities = APA.Types_of_Activities\r\n--         AND APP.Types_of_Activities_group = APA.Types_of_Activities_group),\r\nOUTPUT_Final_A as (\r\n    SELECT \r\n        PVD1.Upload_Date,\r\n        PVD1.project_id,\r\n        PVD1.tower,\r\n        PVD1.`Level`,\r\n        PVD1.`Flat No.`,\r\n        PVD1.`Apartment Type`,\r\n        PVD1.SBU_ID,\r\n        PVD1.ACTIVITY_ID,\r\n        PVD1.ENGINEER_RESPONSIBLE,\r\n        PVD1.Types_of_Activities,\r\n        PVD1.PREDECESSOR_DATA,\r\n        PVD1.value_plan,\r\n        PVD2.Count_Pln,\r\n        CASE\r\n            WHEN TRIM(PVD1.PREDECESSOR_DATA) IN ('FROM CTE 1','FROM CTE 2') THEN PVD2.value_plan\r\n            ELSE Predes_value_plan\r\n        END AS Predes_value_plan,\r\n        PVD1.value_act,\r\n        PVD2.Count_Act,\r\n        CASE\r\n            WHEN TRIM(PVD1.PREDECESSOR_DATA) IN ('FROM CTE 1','FROM CTE 2') THEN PVD2.value_act\r\n            ELSE Predes_value_act\r\n        END AS Predes_value_act\r\n    FROM OUTPUT_1 PVD1 LEFT JOIN Aggeregate_Prdes PVD2\r\n        ON PVD1.project_id = PVD2.project_id\r\n        AND PVD1.tower = PVD2.tower\r\n        AND PVD1.`Level` = PVD2.`Level`\r\n        AND PVD1.`Flat No.` = PVD2.`Flat No.`\r\n        AND PVD1.PREDECESSOR_DATA = PVD2.Types_of_Activities_group),\r\nADD_DATE_FORMAT AS (\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        `Flat No.`,\r\n        SBU_ID,\r\n        `Apartment Type`,\r\n        ACTIVITY_ID,\r\n        ENGINEER_RESPONSIBLE,\r\n        Types_of_Activities,\r\n        CASE \r\n            WHEN (value_plan IS NULL OR TRIM(value_plan) = ('')) \r\n                AND  (Predes_value_plan IS NOT NULL OR TRIM(Predes_value_plan) != ('')) THEN Upload_Date\r\n            ELSE value_plan\r\n        END AS delay_pln,\r\n        value_plan,\r\n        Count_Pln,\r\n        Predes_value_plan,\r\n        PREDECESSOR_DATA AS Predecessor_Activities,\r\n        CASE \r\n            WHEN (value_act IS NULL OR TRIM(value_act) = ('')) \r\n                AND (Predes_value_act IS NOT NULL OR TRIM(Predes_value_act) != ('')) THEN Upload_Date\r\n            ELSE value_act \r\n        END AS delay_act,\r\n        value_act,\r\n        Count_act,\r\n        Predes_value_act\r\n    FROM OUTPUT_Final_A\r\n) ,\r\nOUTPUT_Final_B AS (\r\n    SELECT \r\n        ADF.*,\r\n        DATEDIFF(ADF.delay_pln,ADF.Predes_value_plan) AS Planned_SLA,\r\n        DATEDIFF(ADF.delay_act,ADF.Predes_value_act) AS Actual_SLA,\r\n        OPKM.Predecessor_Activity_allowed_lag AS Given_SLA\r\n    FROM ADD_DATE_FORMAT ADF\r\n        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n            ON ADF.`Level` = OLMA.`level`\r\n        LEFT JOIN O_PLN_KEEPOUTS_MAP OPKM \r\n            ON ADF.Types_of_Activities = OPKM.ACTIVITY_SEQUENCE),\r\nOUTPUT_ AS (\r\n    SELECT \r\n        ADF.*,\r\n        CASE \r\n            WHEN ADF.Actual_SLA <= 0 THEN     '<= 0'\r\n            WHEN ADF.Actual_SLA = 1 THEN     '= 1'\r\n            WHEN ADF.Actual_SLA = 2 THEN     '= 2'\r\n            WHEN ADF.Actual_SLA = 3 THEN     '= 3'\r\n            WHEN ADF.Actual_SLA = 4 THEN     '= 4'\r\n            WHEN ADF.Actual_SLA = 5 THEN     '= 5'\r\n            WHEN ADF.Actual_SLA = 6 THEN     '= 6'\r\n            WHEN ADF.Actual_SLA = 7 THEN     '= 7'\r\n            WHEN ADF.Actual_SLA > 7 THEN     '> 7'\r\n            ELSE NULL\r\n        END AS Actual_SLA_Title \r\n    FROM OUTPUT_Final_B ADF) \r\nSELECT \r\n    Upload_Date AS `Date`,\r\n    project_id,\r\n    tower AS `Tower`,\r\n    `Level`,\r\n    `Flat No.`,\r\n    SBU_ID,\r\n    `Apartment Type`,\r\n    ACTIVITY_ID,\r\n    ENGINEER_RESPONSIBLE AS `Engineer Responsible`,\r\n    Types_of_Activities AS `Activity`,\r\n    delay_pln,\r\n    value_plan AS `Plan`,\r\n    Count_Pln,\r\n    Predes_value_plan AS `Predecessor Plan`,\r\n    CASE \r\n        WHEN TRIM(Predecessor_Activities) IN ('FROM CTE 1','FROM CTE 2') AND Count_Pln = 1 THEN value_plan \r\n        WHEN TRIM(Predecessor_Activities) IN ('FROM CTE 1','FROM CTE 2') AND Count_Pln != 1 THEN NULL\r\n        ELSE Predes_value_plan\r\n    END AS `Predecessor Plan Work Front`,\r\n    Predecessor_Activities AS Predecessor,\r\n    delay_act,\r\n    value_act AS `Actual`,\r\n    Count_act,\r\n    Predes_value_act AS `Predecessor Actual`,\r\n    CASE\r\n        WHEN TRIM(Predecessor_Activities) IN ('FROM CTE 1','FROM CTE 2') AND Count_Act = 1 THEN value_act\r\n        WHEN TRIM(Predecessor_Activities) IN ('FROM CTE 1','FROM CTE 2') AND Count_Act != 1 THEN NULL\r\n        ELSE Predes_value_act\r\n    END AS `Predecessor Actual Work Front`,\r\n    CASE WHEN Planned_SLA <= 0 THEN 0 ELSE Planned_SLA END AS `SLA Planned`,\r\n    CASE WHEN Actual_SLA <= 0 THEN 0 ELSE Actual_SLA END AS `SLA Actual`,\r\n    Given_SLA AS SLA,\r\n    Actual_SLA_Title  AS `Actual SLA Title`\r\nFROM OUTPUT_ ;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T23:08:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Structures",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_structures;\r\nINSERT INTO f_pln_structures\r\n     WITH POUR_RAW AS (\r\n        SELECT\r\n            DATE(upload_time) as Upload_Date,\r\n            project_id,\r\n            `Level`,\r\n            Column_Name.*,\r\n            DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(upload_time) DESC) as `DENSE_RANK` \r\n        FROM O_PLN_STRUCTURE_POURING\r\n        cross join lateral (\r\n                            SELECT `Core Wall 1` , 'Core Wall 1'\r\n                            UNION ALL SELECT `Core Wall 2` , 'Core Wall 2'\r\n                            UNION ALL SELECT `Core Wall 3` , 'Core Wall 3'\r\n                            UNION ALL SELECT `Core Wall 4` , 'Core Wall 4'\r\n                            UNION ALL SELECT `Core Wall 5` , 'Core Wall 5'\r\n                            UNION ALL SELECT `Core Wall 6` , 'Core Wall 6'\r\n                            UNION ALL SELECT `Core Wall 7` , 'Core Wall 7'\r\n                            UNION ALL SELECT `Core Wall 8` , 'Core Wall 8'\r\n                            UNION ALL SELECT `Core Wall 9` , 'Core Wall 9'\r\n                            UNION ALL SELECT `Core Wall 10` , 'Core Wall 10'\r\n                            UNION ALL SELECT `Core Wall 11` , 'Core Wall 11'\r\n                            UNION ALL SELECT `Core Wall 12` , 'Core Wall 12'\r\n                            UNION ALL SELECT `Core Wall 13` , 'Core Wall 13'\r\n                            UNION ALL SELECT `Core Wall 14` , 'Core Wall 14'\r\n                            UNION ALL SELECT `Core Wall 15` , 'Core Wall 15'\r\n                            UNION ALL SELECT `Core Wall 16` , 'Core Wall 16'\r\n                            UNION ALL SELECT `Core Wall 17` , 'Core Wall 17'\r\n                            UNION ALL SELECT `Core Wall 18` , 'Core Wall 18'\r\n                            UNION ALL SELECT `Core Wall 19` , 'Core Wall 19'\r\n                            UNION ALL SELECT `Core Wall 20` , 'Core Wall 20'\r\n                            UNION ALL SELECT `Slab 1` , 'Slab 1'\r\n                            UNION ALL SELECT `Slab 2` , 'Slab 2'\r\n                            UNION ALL SELECT `Slab 3` , 'Slab 3'\r\n                            UNION ALL SELECT `Slab 4` , 'Slab 4'\r\n                            UNION ALL SELECT `Slab 5` , 'Slab 5'\r\n                            UNION ALL SELECT `Slab 6` , 'Slab 6'\r\n                            UNION ALL SELECT `Slab 7` , 'Slab 7'\r\n                            UNION ALL SELECT `Slab 8` , 'Slab 8'\r\n                            UNION ALL SELECT `Slab 9` , 'Slab 9'\r\n                            UNION ALL SELECT `Slab 10` , 'Slab 10'\r\n                            UNION ALL SELECT `Slab 11` , 'Slab 11'\r\n                            UNION ALL SELECT `Slab 12` , 'Slab 12'\r\n                            UNION ALL SELECT `Slab 13` , 'Slab 13'\r\n                            UNION ALL SELECT `Slab 14` , 'Slab 14'\r\n                            UNION ALL SELECT `Slab 15` , 'Slab 15'\r\n                            UNION ALL SELECT `Slab 16` , 'Slab 16'\r\n                            UNION ALL SELECT `Slab 17` , 'Slab 17'\r\n                            UNION ALL SELECT `Slab 18` , 'Slab 18'\r\n                            UNION ALL SELECT `Slab 19` , 'Slab 19'\r\n                            UNION ALL SELECT `Slab 20` , 'Slab 20'\r\n                            UNION ALL SELECT `Staircase 1` , 'Staircase 1'\r\n                            UNION ALL SELECT `Staircase 2` , 'Staircase 2'\r\n                            UNION ALL SELECT `Staircase 3` , 'Staircase 3'\r\n                            UNION ALL SELECT `Staircase 4` , 'Staircase 4'\r\n                            UNION ALL SELECT `Staircase 5` , 'Staircase 5'\r\n                            UNION ALL SELECT `Staircase 6` , 'Staircase 6'\r\n                            UNION ALL SELECT `Staircase 7` , 'Staircase 7'\r\n                            UNION ALL SELECT `Staircase 8` , 'Staircase 8'\r\n                            UNION ALL SELECT `Staircase 9` , 'Staircase 9'\r\n                            UNION ALL SELECT `Staircase 10` , 'Staircase 10'\r\n                            UNION ALL SELECT `Staircase 11` , 'Staircase 11'\r\n                            UNION ALL SELECT `Staircase 13` , 'Staircase 13'\r\n                            UNION ALL SELECT `Staircase 14` , 'Staircase 14'\r\n                            UNION ALL SELECT `Staircase 15` , 'Staircase 15'\r\n                            UNION ALL SELECT `Staircase 16` , 'Staircase 16'\r\n                            UNION ALL SELECT `Staircase 17` , 'Staircase 17'\r\n                            UNION ALL SELECT `Staircase 18` , 'Staircase 18'\r\n                            UNION ALL SELECT `Staircase 19` , 'Staircase 19'\r\n                            UNION ALL SELECT `Staircase 20` , 'Staircase 20'\r\n                        )as Column_Name(value,\r\n                        `Pour`) WHERE value IS NOT NULL AND TRIM(value) not in ('')),\r\n    PRE_STAGGING_POUR AS (\r\n                            SELECT\r\n                                PR.Upload_Date,\r\n                                PR.project_id,\r\n                                OPSPM.Project_Identifier,\r\n                                PR.`Level`,\r\n                                STR_TO_DATE(PR.value,'%d-%b-%y') AS value,\r\n                                PR.Pour,\r\n                                OPSPM.Pour_count,\r\n                                OPSPM.area,\r\n                                OPSPM.Sequence_of_Appearance,\r\n                                OPSPM.type_of_pour,\r\n                                OPSPM.Sort_ID\r\n                            FROM POUR_RAW PR \r\n                                LEFT JOIN (SELECT \r\n                                                * \r\n                                            FROM O_PLN_STRUCTURES_POUR_MAP OPSPM \r\n                                                LEFT JOIN PROJECTS P \r\n                                                    ON OPSPM.project_id = P.Project_Identifier) AS OPSPM\r\n                                ON PR.POUR = OPSPM.type_of_pour \r\n                                    AND PR.project_id = OPSPM.Project_Identifier\r\n                                WHERE `DENSE_RANK` = 1 ORDER BY 1,2),\r\n    PRE_STAGGING_DATEDIFF AS (\r\n                            SELECT \r\n                                PS.Project_Identifier, \r\n                                PS.area,\r\n                                PS.`LEVEL`, \r\n                                PS.Pour,\r\n                                PS.value,\r\n                                LAG(PS.VALUE) over(partition by PS.Project_Identifier,PS.Pour order by PS.Pour,value) as Next_Date,\r\n                                DATEDIFF(PS.value,LAG(PS.VALUE) over(partition by PS.Project_Identifier,PS.Pour order by PS.Pour,PS.value)) as sa\r\n                            FROM PRE_STAGGING_POUR PS \r\n                                WHERE LOWER(PS.Pour) like 'slab%' \r\n--                                     AND LOWER(PS.`level`) NOT LIKE 'grade%' \r\n                                        ORDER BY PS.Pour,PS.value)\r\n    SELECT\r\n        PSP.Upload_Date,\r\n        PSP.Project_id as Project_Identifier,\r\n        PSP.area,\r\n        OLMA.level_map,\r\n        PSP.`Level`,\r\n        PSP.Pour_count,\r\n        PSP.Pour,\r\n        PSP.Sequence_of_Appearance,\r\n        PSP.value,\r\n        PSD.Next_Date,\r\n        PSD.sa as Avg_days,\r\n        CASE \r\n            WHEN PSP.area = 'Tower' THEN     1\r\n            WHEN PSP.area = 'Podium' THEN     2\r\n            WHEN PSP.area = 'Podium-TA' THEN 3\r\n            WHEN PSP.area = 'Tower A' THEN     4\r\n            WHEN PSP.area = 'Podium-TB' THEN 5\r\n            WHEN PSP.area = 'Tower B' THEN     6\r\n            WHEN PSP.area = 'Tower C' THEN     7\r\n            WHEN PSP.area = 'Tower D' THEN     8\r\n        ELSE NULL\r\n        END AS View_Map,\r\n        CASE \r\n            WHEN PSP.value < CURRENT_DATE() THEN 1\r\n            ELSE 0\r\n        END AS value_Average\r\n    FROM PRE_STAGGING_POUR PSP\r\n    LEFT JOIN PRE_STAGGING_DATEDIFF PSD \r\n        ON PSP.Project_Identifier = PSD.Project_Identifier\r\n        AND PSP.Pour = PSD.Pour\r\n        AND PSP.value = PSD.value\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA ON \r\n    PSP.`Level` = OLMA.`level` order by 1,2,3,4,5,6,8;\r\n\r\n    /**/\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wooden Door Delivery",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE door_delivery_m;\r\n\r\nINSERT INTO door_delivery_m\r\nWITH AA AS (\r\nSELECT \r\n    DATE(upload_time) AS Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    `Sr. No.`,\r\n    Building,\r\n    NULLIF(`Delivery Order No`,'') AS `Delivery Order No`,\r\n    NULLIF(`Delivery Date`,'') AS `Delivery Date`,\r\n    TRIM(`Door Type`) AS `Door Type`,\r\n    `Element`,\r\n    `Fire Rating`,\r\n    Orientation,\r\n--     `Quantity (Sets)`,\r\n--     `Quantity (Nos)`,\r\n    CASE \r\n        WHEN TRIM(`Element`) = 'Architrave' AND `Quantity (Nos)` NOT IN ('') THEN `Quantity (Nos)`/2\r\n        WHEN TRIM(`Element`) = 'Architrave' AND `Quantity (Nos)` IN ('') THEN `Quantity (Sets)`\r\n        WHEN TRIM(`Element`) != 'Architrave' THEN `Quantity (Nos)`\r\n    END AS ASA,    \r\n    Remarks,\r\n    Vendor,\r\n    DENSE_RANK () OVER(PARTITION BY project_id ORDER BY DATE(upload_time) DESC) AS AASD\r\nFROM O_PLN_DOOR_DELIVERY_RAW),\r\n    DATA_1 AS(\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        `Delivery Order No`,\r\n        `Delivery Date`,\r\n        `Door Type`,\r\n        `Element`,\r\n        Vendor,\r\n        sum(ASA),\r\n        MIN(ASA),\r\n       'Dates_Used' AS Used_Data\r\n    FROM AA WHERE AASD = 1 AND `Delivery Order No` IS NOT NULL\r\n    GROUP BY 1,2,3,4,5,6,7 ORDER BY 1,2,3,4,5,6),\r\n    Delivery AS (\r\n    SELECT \r\n        DATE(DD.Upload_time) AS Upload_Date,\r\n        DD.project_id,\r\n        TRIM(DD.`Door Type`) AS `Door Type`,\r\n        DD.`Element`,\r\n        DD.Vendor,\r\n        DD.`Delivery Order No`,\r\n        DD.`Delivery Date`,\r\n        DD.`Quantity (Sets)`,\r\n        DD.`Quantity (Nos)`, DENSE_RANK () OVER(PARTITION BY DD.project_id ORDER BY DATE(DD.Upload_time) desc) AS KASD\r\n    FROM O_PLN_DOOR_DELIVERY_RAW DD\r\n        WHERE `Door Type` NOT IN ('','-')),\r\n    Set_Count AS(\r\n            SELECT\r\n                D.Upload_Date,\r\n                D.project_id,\r\n                D.`Door Type`,\r\n                D.`Element`,\r\n                D.Vendor,\r\n                D.`Delivery Order No`,\r\n                D.`Delivery Date`,\r\n                SUM(D.`Quantity (Sets)`) AS Set_C,\r\n                SUM(D.`Quantity (Nos)`) AS Qty_C\r\n            FROM Delivery D WHERE KASD = 1 Group by 1,2,3,4,5,6,7),\r\n    FOR_Architrave AS(\r\n            SELECT \r\n                SC.Upload_Date,\r\n                SC.project_id,\r\n                SC.`Door Type`,\r\n                SC.`Element`,\r\n                SC.Vendor,\r\n                SC.`Delivery Order No`,\r\n                SC.`Delivery Date`,\r\n                SC.Set_C,\r\n                SC.Qty_C,\r\n                CASE WHEN `Element` = ('Architrave') THEN Qty_C/2 ELSE Qty_C END AS Qty_S\r\n            FROM Set_Count SC GROUP BY 1,2,3,4,5,6,7,8,9,10 order by 2),\r\n    Pre_Min_C AS(\r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Door Type`,\r\n                `Element`,\r\n                 Vendor,\r\n                 `Delivery Order No`,\r\n                `Delivery Date`,\r\n                Set_C + Qty_S AS Qty_Delivered\r\n            FROM FOR_Architrave GROUP BY 1,2,3,4,5,6,7 order by 2),\r\n    Min_Count AS(\r\n            SELECT \r\n                project_id,\r\n                `Door Type`,\r\n                MIN(Qty_Delivered) AS Total_Delivered\r\n            FROM Pre_Min_C\r\n            Group by 1,2 ORDER BY 2),\r\n    Pre_Final_Count AS (        \r\n            SELECT\r\n                PFC.Upload_Date,\r\n                PFC.project_id,\r\n                PFC.`Door Type`,\r\n                CASE WHEN PFC.`Door Type`= 'TD1' THEN '1'\r\n                     WHEN PFC.`Door Type`= 'TD2' THEN '2'\r\n                     WHEN  PFC.`Door Type`= 'TD3' THEN '3'\r\n                     WHEN  PFC.`Door Type`= 'TD4' THEN '4'\r\n                     WHEN  PFC.`Door Type`= 'TD5' THEN '5'\r\n                     WHEN  PFC.`Door Type`= 'TD6' THEN '6'\r\n                     WHEN   PFC.`Door Type`= 'TD7' THEN '7'\r\n                ELSE '0' End AS Sort_Data,      \r\n                PFC.`Element`,\r\n                PFC.Vendor,\r\n                PFC.`Delivery Order No`,\r\n                PFC.`Delivery Date`,\r\n                PFC.Qty_Delivered,\r\n                MC.Total_Delivered AS Total_Delivery\r\n            FROM Pre_Min_C PFC \r\n            LEFT JOIN Min_Count MC ON PFC.`Door Type` = MC.`Door Type`  and PFC.project_id = MC.project_id order by 2,3,4,5),\r\n    Final_ AS (        \r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Door Type`,\r\n                `Element`,\r\n                Vendor,\r\n                `Delivery Order No`,\r\n                `Delivery Date`,\r\n                Qty_Delivered,\r\n                LAG(Total_Delivery,2) OVER (PARTITION BY Sort_Data ORDER BY Total_Delivery,`Element`) Final_Delivery\r\n            FROM Pre_Final_Count),\r\n    DATA_2 AS (        \r\n        SELECT\r\n            Upload_Date,\r\n            project_id,\r\n            `Delivery Order No`,\r\n            `Delivery Date`,\r\n            `Door Type`,\r\n            `Element`,\r\n             Vendor,\r\n            Qty_Delivered AS `sum(ASA)`,\r\n            Final_Delivery AS `MIN(ASA)`,\r\n            'Total_Used'   AS Used_Data\r\n        FROM Final_),\r\n    FINAL_UNION\r\n    AS (\r\n    SELECT * FROM DATA_1\r\n    UNION ALL\r\n    SELECT * FROM DATA_2\r\n    ) SELECT * FROM FINAL_UNION;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wooden Doors",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_wooden_door;\r\nINSERT INTO f_wooden_door\r\nWITH MANPOWER_DATA AS(\r\n            SELECT DATE(ddm.upload_time) AS Upload_Date,\r\n            ddm.project_id,\r\n            ddm.tower,\r\n            ddm.sbu_id,\r\n            ddm.`Date`,\r\n            OPDM.SC_NAME,\r\n            OPDM.SC_Short,\r\n            Column_Name.SCC,\r\n            CASE \r\n                WHEN TRIM(Column_Name.value) IN ('-','') THEN NULL\r\n                ELSE Column_Name.value\r\n            END AS value,\r\n            DENSE_RANK () OVER (PARTITION BY ddm.project_id ORDER BY  DATE(ddm.upload_time) DESC) _DRANK\r\n        FROM O_PLN_DOOR_MANPOWER ddm\r\n        CROSS JOIN LATERAL (\r\n                            SELECT `SC1` , 'SC1'\r\n                            UNION ALL SELECT  `SC2`,'SC2'\r\n                            UNION ALL SELECT  `SC3`,'SC3'\r\n                            UNION ALL SELECT  `SC4`,'SC4'\r\n                            UNION ALL SELECT  `SC5`,'SC5'\r\n                            UNION ALL SELECT  `SC6`,'SC6'\r\n                            UNION ALL SELECT  `SC7`,'SC7'\r\n                            UNION ALL SELECT  `SC8`,'SC8'\r\n                            UNION ALL SELECT  `SC9`,'SC9'\r\n                            UNION ALL SELECT  `SC10`,'SC10'\r\n                            UNION ALL SELECT  `SC11`,'SC11'\r\n                            UNION ALL SELECT  `SC12`,'SC12'\r\n                            UNION ALL SELECT  `SC13`,'SC13'\r\n                            UNION ALL SELECT  `SC14`,'SC14'\r\n                            UNION ALL SELECT  `SC15`,'SC15'\r\n                            UNION ALL SELECT  `SC16`,'SC16'\r\n                            UNION ALL SELECT  `SC17`,'SC17'\r\n                            UNION ALL SELECT  `SC18`,'SC18'\r\n                            UNION ALL SELECT  `SC19`,'SC19'\r\n                            UNION ALL SELECT  `SC20`,'SC20'\r\n                            )AS Column_Name(value,SCC)\r\n    JOIN O_PLN_DOORMANPOWER_MAP OPDM\r\n    ON Column_Name.SCC = OPDM.SC\r\n    AND ddm.project_id = OPDM.project_id\r\n    WHERE OPDM.SC_Short != ('')),\r\n    GROUPIN AS(\r\n        SELECT\r\n            MD.SC_NAME,\r\n            MD.SC_Short,\r\n            MD.project_id,\r\n            SUM(MD.value) AS Value_Total\r\n        FROM MANPOWER_DATA MD\r\n        WHERE _DRANK = 1 GROUP BY 1,2,3),\r\n        DOOR_ AS (    \r\n            SELECT\r\n                DATE (DI.upload_time) AS Upload_Date,\r\n                DI.project_id,\r\n                DI.tower,\r\n                DI.Building,\r\n                DI.`Type`,\r\n                DI.`Level`,\r\n                DI.`Flat No`,\r\n                DENSE_RANK () OVER(PARTITION BY  DI.project_id ORDER BY  DATE(DI.upload_time) DESC)D_RANK,\r\n                NULLIF (TRIM(DI.`Flat No_A`),'') AS `Flat No_A`,\r\n                NULLIF (TRIM(DI.`Door Type`),'') AS `Door Type`,\r\n                NULLIF (TRIM(DI.`Jamb Width`),'') AS `Jamb Width`,\r\n                NULLIF (TRIM(DI.Orientation),'') AS Orientation,\r\n                NULLIF (TRIM(DI.`Door Id`),'') AS `Door Id`,\r\n                NULLIF (TRIM(DI.`Fire Rating`),'') AS `Fire Rating`,\r\n                NULLIF (TRIM(DI.Frame),'') AS Frame,\r\n                NULLIF (TRIM(DI.Foam),'') AS Foam,\r\n                NULLIF (TRIM(DI.Architrave),'') AS Architrave,\r\n                NULLIF (TRIM(DI.Shutter),'') AS Shutter,\r\n                NULLIF (TRIM(DI.Ironmongery),'') AS Ironmongery,\r\n                NULLIF (TRIM(DI.Installer),'') AS Installer\r\n            FROM  O_PLN_DOOR_INSTALLATION_RAW DI),\r\n        SORTING AS (\r\n            SELECT\r\n                DR.Upload_Date,\r\n                DR.project_id,\r\n                DR.tower,\r\n                DR.Building,\r\n                DR.`Type`,\r\n                DR.`Level`,\r\n                DR.`Flat No`,\r\n                DR.`Flat No_A`,\r\n                DR.`Door Type`,\r\n                DR.`Jamb Width`,\r\n                DR.Orientation,\r\n                DR.`Door Id`,\r\n                DR.`Fire Rating`,\r\n                Frame,\r\n                Foam,\r\n                Architrave,\r\n                Shutter,\r\n                Ironmongery,\r\n                DR.Installer,\r\n                DR.D_RANK\r\n                FROM DOOR_ DR\r\n                WHERE D_RANK = 1),\r\n        DATA_DATE AS(\r\n                SELECT \r\n                Sort.Upload_Date,\r\n                Sort.project_id,\r\n                Sort.tower,\r\n                Sort.Building,\r\n                Sort.`Type`,\r\n                Sort.`Level`,\r\n                Sort.`Flat No`,\r\n                Sort.`Door Type`,\r\n                Sort.`Jamb Width`,\r\n                Sort.Orientation,\r\n                Sort.`Door Id`,\r\n                Sort.`Fire Rating`,\r\n                Sort.Frame,\r\n                Sort.Foam,\r\n                Sort.Architrave,\r\n                Sort.Shutter,\r\n                (REPLACE(Sort.Ironmongery,'-008','')),\r\n                Sort.Installer,\r\n                OLMA.level_map,\r\n                (REPLACE(MGR.Value_Total,'-','')) AS Total,\r\n                MGR.SC_Short,\r\n                MGR.SC_NAME,\r\n                CASE WHEN Frame = NULL AND Architrave != NULL THEN Architrave \r\n                     WHEN Architrave = NULL AND Shutter != NULL THEN Shutter\r\n                     WHEN Shutter = NULL AND Architrave != NULL THEN Architrave ELSE Frame END AS DATE_WISE_SPLIT \r\n                FROM SORTING Sort\r\n                        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n                             ON Sort.`Level` = OLMA.`level`\r\n                        LEFT JOIN GROUPIN MGR\r\n                             ON Sort.Installer = MGR.SC_Short\r\n                             AND Sort.project_id = MGR.project_id)\r\n    SELECT \r\n         * \r\n    FROM DATA_DATE \r\n    WHERE `Door Id` NOT IN ('','NULL') \r\n    AND `Flat No` NOT IN ('','NULL');\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-27T08:28:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Flatwise_Template')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dry Area Template",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_dryarea;\r\nINSERT INTO f_pln_dryarea\r\nWITH PRE_STAGGING AS(\r\n\r\n    select\r\n\r\n        DATE(O_PLN_DRYAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_DRYAREA_RAW.project_id,\r\n\r\n        O_PLN_DRYAREA_RAW.tower,\r\n\r\n        O_PLN_DRYAREA_RAW.`Level`,\r\n\r\n        O_PLN_DRYAREA_RAW.Flat,\r\n\r\n        'Dry Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_DRYAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_DRYAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_DRYAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                            ORDER BY  DATE(upload_time) DESC\r\n\r\n                            )    AS Project_Udate_DRANK\r\n\r\n    from O_PLN_DRYAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n            SELECT     `HSE Clearance for Deshuttering`              ,               'HSE Clearance for Deshuttering'\r\n\r\n                                                                UNION ALL SELECT           `MEP Riser Works`           ,               'MEP Riser Works'\r\n\r\n                                                                UNION ALL SELECT           `LPG Pipe`           ,               'LPG Pipe'\r\n\r\n                                                                UNION ALL SELECT           `Blockwork Layout Marking`        ,               'Blockwork Layout Marking'\r\n\r\n                                                                UNION ALL SELECT           `Blockwork First Layer`   ,               'Blockwork First Layer'\r\n\r\n                                                                UNION ALL SELECT           `Blockwork with 1mtr marking`  ,               'Blockwork with 1mtr marking'\r\n\r\n                                                                UNION ALL SELECT           `GI Lintel`             ,               'GI Lintel'\r\n\r\n                                                                UNION ALL SELECT           `RCC Lintel / Stiffener`   ,               'RCC Lintel / Stiffener'\r\n\r\n                                                                UNION ALL SELECT           `Above Lintel Block Work`             ,               'Above Lintel Block Work'\r\n\r\n                                                                UNION ALL SELECT           `Head Restraints Installation`      ,               'Head Restraints Installation'\r\n\r\n                                                                UNION ALL SELECT           `Fire Sealant Works & PU Foam Works`  ,               'Fire Sealant Works & PU Foam Works'\r\n\r\n                                                                UNION ALL SELECT           `MEP Marking for HL Builders Work`        ,               'MEP Marking for HL Builders Work'\r\n\r\n                                                                UNION ALL SELECT           `Blockwork Cutting for MEP Services`      ,               'Blockwork Cutting for MEP Services'\r\n\r\n                                                                UNION ALL SELECT           `MEP Wall Marking for Cutting & Chasing`             ,               'MEP Wall Marking for Cutting & Chasing'\r\n\r\n                                                                UNION ALL SELECT           `Bull Marking for Plaster`              ,               'Bull Marking for Plaster'\r\n\r\n                                                                UNION ALL SELECT           `Sub Frame`        ,               'Sub Frame'\r\n\r\n                                                                UNION ALL SELECT           `Corner Bead Fixing`        ,               'Corner Bead Fixing'\r\n\r\n                                                                UNION ALL SELECT           `Cutting & Chasing`          ,               'Cutting & Chasing'\r\n\r\n                                                                UNION ALL SELECT           `MEP Plastering Clearance (Box fixing & Pipe setting)`      ,                'MEP Plastering Clearance (Box fixing & Pipe setting)'\r\n\r\n                                                                UNION ALL SELECT           `ONU, DB & All MEP works Installation`  ,               'ONU, DB & All MEP works Installation'\r\n\r\n                                                                UNION ALL SELECT           `ONU, DB & All MEP works Packing`         ,               'ONU, DB & All MEP works Packing'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Plaster`             ,               'Dry Area Plaster'\r\n\r\n                                                                UNION ALL SELECT           `Plastering Clearance with 1 Meter Marking`        ,                'Plastering Clearance with 1 Meter Marking'\r\n\r\n                                                                UNION ALL SELECT           `Center line marking for Facade Installation`         ,                'Center line marking for Facade Installation'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Starter Gutter`     ,               'UCW-Starter Gutter'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Brackets` ,               'UCW-Brackets'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Panels`    ,               'UCW-Panels'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Alignment`            ,               'UCW-Alignment'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Tile Marking`  ,               'Dry Area Tile Marking'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Bore Packing` ,               'Dry Area Bore Packing'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Screed`             ,               'Dry Area Screed'\r\n\r\n                                                                UNION ALL SELECT           `Screed Curing`  ,               'Screed Curing'\r\n\r\n                                                                UNION ALL SELECT           `Primer,Stucco banding` ,               'Primer,Stucco banding'\r\n\r\n                                                                UNION ALL SELECT           `Bulk Head`         ,               'Bulk Head'\r\n\r\n                                                                UNION ALL SELECT           `MEP H/L Wiring`              ,               'MEP H/L Wiring'\r\n\r\n                                                                UNION ALL SELECT           `MEP H/L Framing Clearance`      ,               'MEP H/L Framing Clearance'\r\n\r\n                                                                UNION ALL SELECT           `Fire Sealant works around ducts`             ,               'Fire Sealant works around ducts'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area FC Framing`    ,               'Dry Area FC Framing'\r\n\r\n                                                                UNION ALL SELECT           `Wardrobe Nib wall`        ,               'Wardrobe Nib wall'\r\n\r\n                                                                UNION ALL SELECT           `MEP H/L Boarding Clearance`    ,               'MEP H/L Boarding Clearance'\r\n\r\n                                                                UNION ALL SELECT           `FC Boarding with Joint Taping`  ,               'FC Boarding with Joint Taping'\r\n\r\n                                                                UNION ALL SELECT           `Primer Ceiling` ,               'Primer Ceiling'\r\n\r\n                                                                UNION ALL SELECT           `Stucco 1st Coat Ceiling` ,               'Stucco 1st Coat Ceiling'\r\n\r\n                                                                UNION ALL SELECT           `Stucco 2nd Coat Ceiling`               ,               'Stucco 2nd Coat Ceiling'\r\n\r\n                                                                UNION ALL SELECT           `First Coat Paint Ceiling` ,               'First Coat Paint Ceiling'\r\n\r\n                                                                UNION ALL SELECT           `Main Door Threshold`   ,               'Main Door Threshold'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Floor Tiling`     ,               'Dry Area Floor Tiling'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Skirting`            ,               'Dry Area Skirting'\r\n\r\n                                                                UNION ALL SELECT           `POP Above Skirting`       ,               'POP Above Skirting'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Box Installation`       ,               'Hinge Door Box Installation'\r\n\r\n                                                                UNION ALL SELECT           `Screed near Hinge Door`              ,               'Screed near Hinge Door'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Frame Installation`  ,               'Hinge Door Frame Installation'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Box Section`            ,               'Curtain Wall Box Section'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Frame Installation`               ,               'Curtain Wall Frame Installation'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Glass Installation`  ,               'Curtain Wall Glass Installation'\r\n\r\n                                                                UNION ALL SELECT           `UCW-GI Sheet Installation - Wall`             ,               'UCW-GI Sheet Installation - Wall'\r\n\r\n                                                                UNION ALL SELECT           `UCW-GI Sheet Installation - Floor`            ,               'UCW-GI Sheet Installation - Floor'\r\n\r\n                                                                UNION ALL SELECT           `Screed near Curtain Wall`            ,               'Screed near Curtain Wall'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Box Installation`     ,               'Sliding Door Box Installation'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Frame Installation`                ,               'Sliding Door Frame Installation'\r\n\r\n                                                                UNION ALL SELECT           `Screed near Sliding Door`            ,               'Screed near Sliding Door'\r\n\r\n                                                                UNION ALL SELECT           `Left Over Tile Installation`           ,               'Left Over Tile Installation'\r\n\r\n                                                                UNION ALL SELECT           `Left Over Skirting`           ,               'Left Over Skirting'\r\n\r\n                                                                UNION ALL SELECT           `Tile Grouting`   ,               'Tile Grouting'\r\n\r\n                                                                UNION ALL SELECT           `Tile Silicone Works`        ,               'Tile Silicone Works'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Mullion`    ,               'Curtain Wall Mullion'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Flashing Installation`            ,               'Curtain Wall Flashing Installation'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Silicone`    ,               'Curtain Wall Silicone'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Firestop and Silicone`        ,               'UCW-Firestop and Silicone'\r\n\r\n                                                                UNION ALL SELECT           `UCW-GI Flashing`            ,               'UCW-GI Flashing'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Glass Installation`    ,               'Hinge Door Glass Installation'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Internal Silicone`      ,               'Hinge Door Internal Silicone'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Alignment` ,               'Hinge Door Alignment'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door External Silicone`     ,               'Hinge Door External Silicone'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Glass Installation`  ,               'Sliding Door Glass Installation'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Internal Silicone`    ,               'Sliding Door Internal Silicone'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Alignment`               ,               'Sliding Door Alignment'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door External Silicone`   ,               'Sliding Door External Silicone'\r\n\r\n                                                                UNION ALL SELECT           `Window Jamb,Corner,Pelmet Area, Shadow Angle POP Works`  ,               'Window Jamb,Corner,Pelmet Area, Shadow Angle POP Works'\r\n\r\n                                                                UNION ALL SELECT           `Wall Stucco 1st Coat`    ,               'Wall Stucco 1st Coat'\r\n\r\n                                                                UNION ALL SELECT           `Wall stucco 2nd coat`    ,               'Wall stucco 2nd coat'\r\n\r\n                                                                UNION ALL SELECT           `Wall Paint 1st Coat`       ,               'Wall Paint 1st Coat'\r\n\r\n                                                                UNION ALL SELECT           `Door - Frame Installation`            ,               'Door - Frame Installation'\r\n\r\n                                                                UNION ALL SELECT           `Door - Architrave Installation`    ,               'Door - Architrave Installation'\r\n\r\n                                                                UNION ALL SELECT           `Door - Shutter Installation`         ,               'Door - Shutter Installation'\r\n\r\n                                                                UNION ALL SELECT           `Door - Ironmongery Installation`              ,               'Door - Ironmongery Installation'\r\n\r\n                                                                UNION ALL SELECT           `Door - Silicone Works`  ,               'Door - Silicone Works'\r\n\r\n                                                                UNION ALL SELECT           `Cut piece Skirting near Door`     ,               'Cut piece Skirting near Door'\r\n\r\n                                                                UNION ALL SELECT           `Gas Meter Installation` ,               'Gas Meter Installation'\r\n\r\n                                                                UNION ALL SELECT           `MEP Kitchen Appliances`             ,               'MEP Kitchen Appliances'\r\n\r\n                                                                UNION ALL SELECT           `Wardrobe Carcass Installation`  ,               'Wardrobe Carcass Installation'\r\n\r\n                                                                UNION ALL SELECT           `Wardrobe Shutter Installation`  ,               'Wardrobe Shutter Installation'\r\n\r\n                                                                UNION ALL SELECT           `Wardrobe Silicone Works`          ,               'Wardrobe Silicone Works'\r\n\r\n                                                                UNION ALL SELECT           `Cut piece Skirting near Wardrobe`           ,               'Cut piece Skirting near Wardrobe'\r\n\r\n                                                                UNION ALL SELECT           `Air Balancing for FCU`   ,               'Air Balancing for FCU'\r\n\r\n                                                                UNION ALL SELECT           `FCU Closure Clearance` ,               'FCU Closure Clearance'\r\n\r\n                                                                UNION ALL SELECT           `VCD Closure - FCU`         ,               'VCD Closure - FCU'\r\n\r\n                                                                UNION ALL SELECT           `Air Balancing for FAHU`                ,               'Air Balancing for FAHU'\r\n\r\n                                                                UNION ALL SELECT           `FAHU Closure Clearance`             ,               'FAHU Closure Clearance'\r\n\r\n                                                                UNION ALL SELECT           `VCD Closure - FAHU`     ,               'VCD Closure - FAHU'\r\n\r\n                                                                UNION ALL SELECT           `Final Fixtures Installation`           ,               'Final Fixtures Installation'\r\n\r\n                                                                UNION ALL SELECT           `Access Panel Final Coat and Installation`               ,                'Access Panel Final Coat and Installation'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Final Coat Preparation`              ,               'Dry Area Final Coat Preparation'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Final Coat Paint`            ,               'Dry Area Final Coat Paint'\r\n\r\n                                                                UNION ALL SELECT           `Thermostat Cover Installation`  ,               'Thermostat Cover Installation'\r\n\r\n                                                                UNION ALL SELECT           `Intercom Cover Installation`       ,               'Intercom Cover Installation'\r\n\r\n                                                                UNION ALL SELECT           `ONU & DB Panel Door` ,               'ONU & DB Panel Door'\r\n\r\n                                                                UNION ALL SELECT           `Switch socket cover Installation`               ,               'Switch socket cover Installation'\r\n\r\n                                                                )\r\n\r\n        as Column_Name(value,Type_of_work)\r\n\r\n    JOIN O_PLN_DRYAREA_MAP\r\n\r\n    ON Column_Name.Type_of_work = O_PLN_DRYAREA_MAP.ACTIVITY_SEQUENCE\r\n\r\n    WHERE value IS NOT NULL )\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date   ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n   PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA','-') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level` WHERE Project_Udate_DRANK = 1;\r\n\r\n        /**/\r\n\r\n        SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Kitchen Area Template",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Dry Area Template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_kitchenarea;\r\nINSERT INTO f_pln_kitchenarea\r\nWITH PRE_STAGGING AS(\r\n\r\n    SELECT\r\n\r\n        DATE(O_PLN_KITCHENAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_KITCHENAREA_RAW.project_id,\r\n\r\n        O_PLN_KITCHENAREA_RAW.tower,\r\n\r\n        O_PLN_KITCHENAREA_RAW.`Level`,\r\n\r\n        O_PLN_KITCHENAREA_RAW.Flat,\r\n\r\n        'Kitchen Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_KITCHENAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_KITCHENAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_KITCHENAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                            ORDER BY  DATE(upload_time) DESC\r\n\r\n                            )   AS  Project_Udate_DRANK\r\n\r\n    from O_PLN_KITCHENAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n            SELECT     `Kitchen Area Plaster`     ,               'Kitchen Area Plaster'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen / Utility Framing Clearance`        ,                'Kitchen / Utility Framing Clearance'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen / Utility Framing`             ,               'Kitchen / Utility Framing'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen / Utility Boarding Clearance`      ,                'Kitchen / Utility Boarding Clearance'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen / Utility Boarding`           ,               'Kitchen / Utility Boarding'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Wall Tile`            ,               'Kitchen Wall Tile'\r\n\r\n                                                                                UNION ALL SELECT           `MEP Box Fixing`               ,               'MEP Box Fixing'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Cabinet`             ,               'Kitchen Cabinet'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Counter Plywood`          ,               'Kitchen Counter Plywood'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Counter Top`    ,               'Kitchen Counter Top'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Counter Top Skirting`    ,               'Kitchen Counter Top Skirting'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Cabinet Grouting`           ,               'Kitchen Cabinet Grouting'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Cabinet Silicone`             ,               'Kitchen Cabinet Silicone'\r\n\r\n                                                                                UNION ALL SELECT           `MEP Fixtures for Kitchen Cabinet`            ,               'MEP Fixtures for Kitchen Cabinet'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Appliances`       ,               'Kitchen Appliances'\r\n\r\n                                                                                )\r\n\r\n        as Column_Name(value,Type_of_work)\r\n\r\n    JOIN O_PLN_KITCHENAREA_MAP\r\n\r\n    ON Column_Name.Type_of_work = O_PLN_KITCHENAREA_MAP.ACTIVITY_SEQUENCE\r\n\r\n    WHERE value IS NOT NULL)\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date    ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n    PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level`\r\n\r\nWHERE Project_Udate_DRANK = 1;\r\n\r\n /**/\r\n Select 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wet Area Template",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Kitchen Area Template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_wetarea;\r\nINSERT INTO f_pln_wetarea\r\nWITH PRE_STAGGING AS (\r\n\r\n    SELECT\r\n\r\n        DATE(O_PLN_WETAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_WETAREA_RAW.project_id,\r\n\r\n        O_PLN_WETAREA_RAW.tower,\r\n\r\n        O_PLN_WETAREA_RAW.`Level`,\r\n\r\n        O_PLN_WETAREA_RAW.Flat,\r\n\r\n        'Wet Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_WETAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_WETAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_WETAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                                ORDER BY  DATE(upload_time) DESC\r\n\r\n                                )   AS  Project_Udate_DRANK\r\n\r\n    from O_PLN_WETAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n                SELECT `Plastering Clearance with 1 Mtr Marking`             ,               'Plastering Clearance with 1 Mtr Marking'\r\n\r\nUNION ALL SELECT           `Wet Area Tile Marking` ,               'Wet Area Tile Marking'\r\n\r\nUNION ALL SELECT           `MEP Marking`  ,               'MEP Marking'\r\n\r\nUNION ALL SELECT           `Wet Area Cutting & Chasing`      ,               'Wet Area Cutting & Chasing'\r\n\r\nUNION ALL SELECT           `Pex pipe installation`     ,               'Pex pipe installation'\r\n\r\nUNION ALL SELECT           `Re packing of MEP Services`       ,               'Re packing of MEP Services'\r\n\r\nUNION ALL SELECT           `MEP Pipe installation - Borepacking`      ,               'MEP Pipe installation - Borepacking'\r\n\r\nUNION ALL SELECT           `Wet Area Bore Packing`               ,               'Wet Area Bore Packing'\r\n\r\nUNION ALL SELECT           `Cistern installation`        ,               'Cistern installation'\r\n\r\nUNION ALL SELECT           `Drywall framing`             ,               'Drywall framing'\r\n\r\nUNION ALL SELECT           `Pex Elbow & Connections`          ,               'Pex Elbow & Connections'\r\n\r\nUNION ALL SELECT           `Bottom Boarding Clearance`      ,               'Bottom Boarding Clearance'\r\n\r\nUNION ALL SELECT           `Bottom boarding`           ,               'Bottom boarding'\r\n\r\nUNION ALL SELECT           `Under Screed Waterproofing`   ,               'Under Screed Waterproofing'\r\n\r\nUNION ALL SELECT           `Wet Area Screed`           ,               'Wet Area Screed'\r\n\r\nUNION ALL SELECT           `Ledge Wall Full Board Closure Clearance`             ,               'Ledge Wall Full Board Closure Clearance'\r\n\r\nUNION ALL SELECT           `MEP HL Water Supply & Drainage`          ,               'MEP HL Water Supply & Drainage '\r\n\r\nUNION ALL SELECT           `MEP HL Ducting & FCU Works`  ,               'MEP HL Ducting & FCU Works '\r\n\r\nUNION ALL SELECT           `MEP HL Electrical Services Installation`  ,               'MEP HL Electrical Services Installation'\r\n\r\nUNION ALL SELECT           `MEP HL Works & Testing`            ,               'MEP HL Works & Testing'\r\n\r\nUNION ALL SELECT           `MEP HL Packing Clearance`         ,               'MEP HL Packing Clearance'\r\n\r\nUNION ALL SELECT           `Packing for all builders work opening`   ,               'Packing for all builders work opening '\r\n\r\nUNION ALL SELECT           `Wet Area MEP H/L Fire Sealent & Framing Clearance`     ,               'Wet Area MEP H/L Fire Sealent & Framing Clearance '\r\n\r\nUNION ALL SELECT           `Wet area Wall Tile`         ,               'Wet area Wall Tile'\r\n\r\nUNION ALL SELECT           `Wet Area FC Framing`   ,               'Wet Area FC Framing'\r\n\r\nUNION ALL SELECT           `Wet Area MEP H/L Boarding Clearance` ,               'Wet Area MEP H/L Boarding Clearance'\r\n\r\nUNION ALL SELECT           `FC Boarding & Joint Taping`        ,               'FC Boarding & Joint Taping'\r\n\r\nUNION ALL SELECT           `Ceiling Paint Primer`      ,               'Ceiling Paint Primer'\r\n\r\nUNION ALL SELECT           `Ceiling Paint Stucco 1st Coat & 2nd Coat`             ,               'Ceiling Paint Stucco 1st Coat & 2nd Coat'\r\n\r\nUNION ALL SELECT           `Wet Area Ceiling First Coat Paint`            ,               'Wet Area Ceiling First Coat Paint'\r\n\r\nUNION ALL SELECT           `MEP Grill & Diffuser Installtion` ,               'MEP Grill & Diffuser Installtion '\r\n\r\nUNION ALL SELECT           `Shower Threshold`         ,               'Shower Threshold'\r\n\r\nUNION ALL SELECT           `Linear Drain Supply`      ,               'Linear Drain Supply'\r\n\r\nUNION ALL SELECT           `Linear Drain Fixing`        ,               'Linear Drain Fixing '\r\n\r\nUNION ALL SELECT           `Under Tile Waterproofing`         ,               'Under Tile Waterproofing'\r\n\r\nUNION ALL SELECT           `Bathroom Door Threshold`         ,               'Bathroom Door Threshold'\r\n\r\nUNION ALL SELECT           `Wet Area Floor Tile`       ,               'Wet Area Floor Tile'\r\n\r\nUNION ALL SELECT           `Wall tile bottom Tile`     ,               'Wall tile bottom Tile'\r\n\r\nUNION ALL SELECT           `Grouting - Wall & Floor`               ,               'Grouting - Wall & Floor'\r\n\r\nUNION ALL SELECT           `Silicone - Wall & Floor Corners` ,               'Silicone - Wall & Floor Corners'\r\n\r\nUNION ALL SELECT           `Shower Partition - U channel`    ,               'Shower Partition - U channel'\r\n\r\nUNION ALL SELECT           `Shower Partition - Glass`             ,               'Shower Partition - Glass'\r\n\r\nUNION ALL SELECT           `Accessories & Silicon`    ,               'Accessories & Silicon'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Frame Installation`      ,               'Bathroom Door - Frame Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Architrave Installation`              ,               'Bathroom Door - Architrave Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Shutter Installation`    ,               'Bathroom Door - Shutter Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Ironmongery Installation`         ,               'Bathroom Door - Ironmongery Installation'\r\n\r\nUNION ALL SELECT           `Vanity Cabinet` ,               'Vanity Cabinet'\r\n\r\nUNION ALL SELECT           `Vanity Cabinet Counter top`       ,               'Vanity Cabinet Counter top'\r\n\r\nUNION ALL SELECT           `MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)`    ,               'MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)'\r\n\r\nUNION ALL SELECT           `MEP Ledge Wall Clearance`        ,               'MEP Ledge Wall Clearance '\r\n\r\nUNION ALL SELECT           `Ledge Wall Closing`        ,               'Ledge Wall Closing'\r\n\r\nUNION ALL SELECT           `Silicone around MEP Fixtures`   ,               'Silicone around MEP Fixtures'\r\n\r\nUNION ALL SELECT           `Wet Area Final Coat paint`          ,               'Wet Area Final Coat paint'\r\n\r\n \r\n\r\n            )\r\n\r\n              as Column_Name(value,Type_of_work)\r\n\r\n        JOIN O_PLN_WETAREA_MAP\r\n\r\n        ON TRIM(Column_Name.Type_of_work) = TRIm(O_PLN_WETAREA_MAP.ACTIVITY_SEQUENCE)\r\n\r\n        WHERE value IS NOT NULL)\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date    ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n    PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA','-') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level`\r\n\r\nWHERE Project_Udate_DRANK = 1;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Balcony Area Template",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wet Area Template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_balconyarea;\r\nINSERT INTO f_pln_balconyarea\r\nWITH PRE_STAGGING AS (\r\n\r\n    SELECT DATE(O_PLN_BALCONYAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_BALCONYAREA_RAW.project_id,\r\n\r\n        O_PLN_BALCONYAREA_RAW.tower,\r\n\r\n        O_PLN_BALCONYAREA_RAW.`Level`,\r\n\r\n        O_PLN_BALCONYAREA_RAW.Flat,\r\n\r\n        'Balcony Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_BALCONYAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_BALCONYAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_BALCONYAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                            ORDER BY  DATE(upload_time) DESC\r\n\r\n                            ) AS Project_Udate_DRANK\r\n\r\n    from O_PLN_BALCONYAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n                SELECT `Marking for Rain Water Pipe`    ,               'Marking for Rain Water Pipe'\r\n\r\nUNION ALL SELECT           `Rain water pipe`              ,               'Rain water pipe'\r\n\r\nUNION ALL SELECT           `Rain Water Pipe Packing`             ,               'Rain Water Pipe Packing'\r\n\r\nUNION ALL SELECT           `Balcony Blockwork`        ,               'Balcony Blockwork'\r\n\r\nUNION ALL SELECT           `Balcony Plaster`               ,               'Balcony Plaster'\r\n\r\nUNION ALL SELECT           `F channel Installation`   ,               'F channel Installation'\r\n\r\nUNION ALL SELECT           `Non Shrink Grout`          ,               'Non Shrink Grout'\r\n\r\nUNION ALL SELECT           `Top Rail Bracket Installation`      ,               'Top Rail Bracket Installation'\r\n\r\nUNION ALL SELECT           `EIFS Installation`              ,               'EIFS Installation'\r\n\r\nUNION ALL SELECT           `Balcony EIFS Plaster`     ,               'Balcony EIFS Plaster'\r\n\r\nUNION ALL SELECT           `Grinding Clearance`       ,               'Grinding Clearance'\r\n\r\nUNION ALL SELECT           `Ceiling Skim Coat & Primer`        ,               'Ceiling Skim Coat & Primer'\r\n\r\nUNION ALL SELECT           `Balcony Screed`               ,               'Balcony Screed'\r\n\r\nUNION ALL SELECT           `Drain Fixing`      ,               'Drain Fixing'\r\n\r\nUNION ALL SELECT           `Ceiling Balcony Box Installation`               ,               'Ceiling Balcony Box Installation'\r\n\r\nUNION ALL SELECT           `Left Over Screed (If any)`             ,               'Left Over Screed (If any)'\r\n\r\nUNION ALL SELECT           `EIFS Wall Texture`          ,               'EIFS Wall Texture'\r\n\r\nUNION ALL SELECT           `Balustrade Glass Installation`     ,               'Balustrade Glass Installation'\r\n\r\nUNION ALL SELECT           `Balustrade Top Rail`       ,               'Balustrade Top Rail'\r\n\r\nUNION ALL SELECT           `Balcony Under Tile Water Proofing`        ,               'Balcony Under Tile Water Proofing'\r\n\r\nUNION ALL SELECT           `Balcony Floor Tiling`       ,               'Balcony Floor Tiling'\r\n\r\nUNION ALL SELECT           `Balustrade - Internal Flashing`   ,               'Balustrade - Internal Flashing'\r\n\r\nUNION ALL SELECT           `Balcony Skirting`              ,               'Balcony Skirting'\r\n\r\nUNION ALL SELECT           `Metal Ceiling`   ,               'Metal Ceiling'\r\n\r\nUNION ALL SELECT           `Balcony Ceiling Texture`              ,               'Balcony Ceiling Texture'\r\n\r\nUNION ALL SELECT           `Complete Wall Texture`               ,               'Complete Wall Texture'\r\n\r\nUNION ALL SELECT           `Balcony Grouting`           ,               'Balcony Grouting'\r\n\r\nUNION ALL SELECT           `Balcony Silicone`             ,               'Balcony Silicone'\r\n\r\nUNION ALL SELECT           `Balcony MEP Final Fixtures`       ,               'Balcony MEP Final Fixtures'\r\n\r\nUNION ALL SELECT           `Balcony Final Coat Paint`             ,               'Balcony Final Coat Paint'\r\n\r\nUNION ALL SELECT           `Balcony Drain Cover Supply`      ,               'Balcony Drain Cover Supply'\r\n\r\nUNION ALL SELECT           `Cover fixing for balcony drain`   ,               'Cover fixing for balcony drain'\r\n\r\nUNION ALL SELECT           `Cover plate B/W ACP & EIFS`     ,               'Cover plate B/W ACP & EIFS'\r\n\r\n \r\n\r\n        )\r\n\r\n        as Column_Name(value,Type_of_work)\r\n\r\n    JOIN O_PLN_BALCONYAREA_MAP\r\n\r\n    ON Column_Name.Type_of_work = O_PLN_BALCONYAREA_MAP.ACTIVITY_SEQUENCE\r\n\r\n    WHERE value IS NOT NULL\r\n\r\n    AND value !='')\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date    ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n    PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA','-') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level`\r\n\r\nWHERE Project_Udate_DRANK = 1;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "FlatWise",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Balcony Area Template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_flatfinishes;\r\nINSERT INTO f_pln_flatfinishes\r\nWITH UNION_ALL AS (\r\n        SELECT * FROM F_PLN_DRYAREA\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_WETAREA\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_BALCONYAREA\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_KITCHENAREA\r\n                ),\r\n    UNION_CLEAN AS (\r\n        SELECT \r\n        UA.Upload_Date,\r\n            UA.project_id,\r\n            UA.tower,\r\n            UA.`Level`,\r\n            UA.Flat,\r\n            UA.sclicer,\r\n            CASE \r\n                WHEN UA.value IN ('','NA','TBC','-','#N/A') THEN '0%'\r\n                ELSE UA.value\r\n            END AS value,\r\n            UA.Type_of_work,\r\n            UA.ACTIVITY_ID,\r\n            UA.SBU_ID,\r\n            UA.Category,\r\n            CONCAT(UA.ACTIVITY_ID,' ', UA.Type_of_work) AS sort_type_of_work \r\n        FROM \r\n        UNION_ALL UA),\r\n    STAGGING AS (\r\n        SELECT\r\n            UA.Upload_Date,\r\n            UA.project_id,\r\n            UA.tower,\r\n            UA.`Level`,\r\n            UA.Flat,\r\n            UA.sclicer,\r\n            CAST(REPLACE(UA.value,'%','') AS DECIMAL)/100 AS value,\r\n            UA.Type_of_work,\r\n            UA.ACTIVITY_ID,\r\n            UA.SBU_ID,\r\n            UA.Category,\r\n            OLMA.level_map,\r\n            CONCAT(UA.ACTIVITY_ID,' ', UA.Type_of_work) AS sort_type_of_work\r\n        FROM UNION_CLEAN UA\r\n            LEFT JOIN O_LEVEL_MAP_ALL OLMA ON UA.`Level` = OLMA.`level`\r\n        WHERE LENGTH(value) <= 4)\r\n    SELECT\r\n        *,\r\n        CASE WHEN sclicer = 'Dry Area' THEN 1\r\n            WHEN sclicer = 'Wet Area' THEN 2\r\n            WHEN sclicer = 'Kitchen Area' THEN 3\r\n           WHEN sclicer = 'Balcony Area' THEN 4\r\n        END AS Sort_Slicer,\r\n        CASE \r\n            WHEN    TRIM(Category) =     ('MEP')    THEN    1\r\n            WHEN    TRIM(Category) =     ('Blockwork')    THEN    2\r\n            WHEN    TRIM(Category) =     ('Plaster')    THEN    3\r\n            WHEN    TRIM(Category) =     ('Builders Work')    THEN    4\r\n            WHEN    TRIM(Category) =     ('Facade')    THEN    5\r\n            WHEN    TRIM(Category) =     ('Tile')    THEN    6\r\n            WHEN    TRIM(Category) =     ('Screed')    THEN    7\r\n            WHEN    TRIM(Category) =     ('Paint')    THEN    8\r\n            WHEN    TRIM(Category) =     ('Gypsum')    THEN    9\r\n            WHEN    TRIM(Category) =     ('Marble')    THEN    10\r\n            WHEN    TRIM(Category) =     ('Silicone')    THEN    11\r\n            WHEN    TRIM(Category) =     ('Joinery')    THEN    12\r\n            WHEN    TRIM(Category) =     ('SBU1')    THEN    13\r\n            WHEN    TRIM(Category) =     ('Waterproofing')    THEN    14\r\n            WHEN    TRIM(Category) =     ('Fa�ade')    THEN    15\r\n            WHEN    TRIM(Category) =     ('EIFS')    THEN    16\r\n            WHEN    TRIM(Category) =     ('SFD')    THEN    17\r\n            WHEN    TRIM(Category) =     ('Water Proofing')    THEN    18\r\n            WHEN    TRIM(Category) =     ('Appliances')    THEN    19\r\n        END AS Category_Sort        \r\n    FROM STAGGING\r\n    ORDER BY value;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-01T12:06:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Flatwise_Template_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wet Area Template",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_wetarea;\r\nINSERT INTO f_pln_wetarea\r\nWITH PRE_STAGGING AS (\r\n\r\n    SELECT\r\n\r\n        DATE(O_PLN_WETAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_WETAREA_RAW.project_id,\r\n\r\n        O_PLN_WETAREA_RAW.tower,\r\n\r\n        O_PLN_WETAREA_RAW.`Level`,\r\n\r\n        O_PLN_WETAREA_RAW.Flat,\r\n\r\n        'Wet Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_WETAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_WETAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_WETAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                                ORDER BY  DATE(upload_time) DESC\r\n\r\n                                )   AS  Project_Udate_DRANK\r\n\r\n    from O_PLN_WETAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n                SELECT `Plastering Clearance with 1 Mtr Marking`             ,               'Plastering Clearance with 1 Mtr Marking'\r\n\r\nUNION ALL SELECT           `Wet Area Tile Marking` ,               'Wet Area Tile Marking'\r\n\r\nUNION ALL SELECT           `MEP Marking`  ,               'MEP Marking'\r\n\r\nUNION ALL SELECT           `Wet Area Cutting & Chasing`      ,               'Wet Area Cutting & Chasing'\r\n\r\nUNION ALL SELECT           `Pex pipe installation`     ,               'Pex pipe installation'\r\n\r\nUNION ALL SELECT           `Re packing of MEP Services`       ,               'Re packing of MEP Services'\r\n\r\nUNION ALL SELECT           `MEP Pipe installation - Borepacking`      ,               'MEP Pipe installation - Borepacking'\r\n\r\nUNION ALL SELECT           `Wet Area Bore Packing`               ,               'Wet Area Bore Packing'\r\n\r\nUNION ALL SELECT           `Cistern installation`        ,               'Cistern installation'\r\n\r\nUNION ALL SELECT           `Drywall framing`             ,               'Drywall framing'\r\n\r\nUNION ALL SELECT           `Pex Elbow & Connections`          ,               'Pex Elbow & Connections'\r\n\r\nUNION ALL SELECT           `Bottom Boarding Clearance`      ,               'Bottom Boarding Clearance'\r\n\r\nUNION ALL SELECT           `Bottom boarding`           ,               'Bottom boarding'\r\n\r\nUNION ALL SELECT           `Under Screed Waterproofing`   ,               'Under Screed Waterproofing'\r\n\r\nUNION ALL SELECT           `Wet Area Screed`           ,               'Wet Area Screed'\r\n\r\nUNION ALL SELECT           `Ledge Wall Full Board Closure Clearance`             ,               'Ledge Wall Full Board Closure Clearance'\r\n\r\nUNION ALL SELECT           `MEP HL Water Supply & Drainage`          ,               'MEP HL Water Supply & Drainage '\r\n\r\nUNION ALL SELECT           `MEP HL Ducting & FCU Works`  ,               'MEP HL Ducting & FCU Works '\r\n\r\nUNION ALL SELECT           `MEP HL Electrical Services Installation`  ,               'MEP HL Electrical Services Installation'\r\n\r\nUNION ALL SELECT           `MEP HL Works & Testing`            ,               'MEP HL Works & Testing'\r\n\r\nUNION ALL SELECT           `MEP HL Packing Clearance`         ,               'MEP HL Packing Clearance'\r\n\r\nUNION ALL SELECT           `Packing for all builders work opening`   ,               'Packing for all builders work opening '\r\n\r\nUNION ALL SELECT           `Wet Area MEP H/L Fire Sealent & Framing Clearance`     ,               'Wet Area MEP H/L Fire Sealent & Framing Clearance '\r\n\r\nUNION ALL SELECT           `Wet area Wall Tile`         ,               'Wet area Wall Tile'\r\n\r\nUNION ALL SELECT           `Wet Area FC Framing`   ,               'Wet Area FC Framing'\r\n\r\nUNION ALL SELECT           `Wet Area MEP H/L Boarding Clearance` ,               'Wet Area MEP H/L Boarding Clearance'\r\n\r\nUNION ALL SELECT           `FC Boarding & Joint Taping`        ,               'FC Boarding & Joint Taping'\r\n\r\nUNION ALL SELECT           `Ceiling Paint Primer`      ,               'Ceiling Paint Primer'\r\n\r\nUNION ALL SELECT           `Ceiling Paint Stucco 1st Coat & 2nd Coat`             ,               'Ceiling Paint Stucco 1st Coat & 2nd Coat'\r\n\r\nUNION ALL SELECT           `Wet Area Ceiling First Coat Paint`            ,               'Wet Area Ceiling First Coat Paint'\r\n\r\nUNION ALL SELECT           `MEP Grill & Diffuser Installtion` ,               'MEP Grill & Diffuser Installtion '\r\n\r\nUNION ALL SELECT           `Shower Threshold`         ,               'Shower Threshold'\r\n\r\nUNION ALL SELECT           `Linear Drain Supply`      ,               'Linear Drain Supply'\r\n\r\nUNION ALL SELECT           `Linear Drain Fixing`        ,               'Linear Drain Fixing '\r\n\r\nUNION ALL SELECT           `Under Tile Waterproofing`         ,               'Under Tile Waterproofing'\r\n\r\nUNION ALL SELECT           `Bathroom Door Threshold`         ,               'Bathroom Door Threshold'\r\n\r\nUNION ALL SELECT           `Wet Area Floor Tile`       ,               'Wet Area Floor Tile'\r\n\r\nUNION ALL SELECT           `Wall tile bottom Tile`     ,               'Wall tile bottom Tile'\r\n\r\nUNION ALL SELECT           `Grouting - Wall & Floor`               ,               'Grouting - Wall & Floor'\r\n\r\nUNION ALL SELECT           `Silicone - Wall & Floor Corners` ,               'Silicone - Wall & Floor Corners'\r\n\r\nUNION ALL SELECT           `Shower Partition - U channel`    ,               'Shower Partition - U channel'\r\n\r\nUNION ALL SELECT           `Shower Partition - Glass`             ,               'Shower Partition - Glass'\r\n\r\nUNION ALL SELECT           `Accessories & Silicon`    ,               'Accessories & Silicon'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Frame Installation`      ,               'Bathroom Door - Frame Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Architrave Installation`              ,               'Bathroom Door - Architrave Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Shutter Installation`    ,               'Bathroom Door - Shutter Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Ironmongery Installation`         ,               'Bathroom Door - Ironmongery Installation'\r\n\r\nUNION ALL SELECT           `Vanity Cabinet` ,               'Vanity Cabinet'\r\n\r\nUNION ALL SELECT           `Vanity Cabinet Counter top`       ,               'Vanity Cabinet Counter top'\r\n\r\nUNION ALL SELECT           `MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)`    ,               'MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)'\r\n\r\nUNION ALL SELECT           `MEP Ledge Wall Clearance`        ,               'MEP Ledge Wall Clearance '\r\n\r\nUNION ALL SELECT           `Ledge Wall Closing`        ,               'Ledge Wall Closing'\r\n\r\nUNION ALL SELECT           `Silicone around MEP Fixtures`   ,               'Silicone around MEP Fixtures'\r\n\r\nUNION ALL SELECT           `Wet Area Final Coat paint`          ,               'Wet Area Final Coat paint'\r\n\r\n \r\n\r\n            )\r\n\r\n              as Column_Name(value,Type_of_work)\r\n\r\n        JOIN O_PLN_WETAREA_MAP\r\n\r\n        ON TRIM(Column_Name.Type_of_work) = TRIm(O_PLN_WETAREA_MAP.ACTIVITY_SEQUENCE)\r\n\r\n        WHERE value IS NOT NULL)\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date    ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n    PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA','-') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level`\r\n\r\nWHERE Project_Udate_DRANK = 1;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-01T12:06:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Monthly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Business Plan Template 2022",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_business_plan_1;\r\nINSERT IGNORE INTO f_pln_business_plan_1 (Upload_date,project_id,`Type`,SBU,`Month`,`value`,`DENSE_RANK`,sbu_sort,month_sort,year_sort,Cummulative)\r\nWITH DATA_FORMATTER AS (\r\n    SELECT\r\n        DATE(upload_time) AS Upload_date,\r\n        project_id,\r\n        tower,\r\n        sbu_id,\r\n        `Type`,\r\n        SBU,\r\n        Column_Name.`Month`,\r\n        CASE \r\n            WHEN TRIM(Column_Name.VALUE) IN ('',' ','-')  AND `Type` = 'Plan'  THEN '0'\r\n            ELSE Column_Name.VALUE\r\n        END AS Value\r\n        FROM o_pln_business_plan_raw\r\n        cross join lateral (\r\n                        SELECT `Jan-22` ,  'Jan-22'\r\n                    UNION ALL SELECT `Feb-22` ,  'Feb-22'\r\n                    UNION ALL SELECT `Mar-22` ,  'Mar-22'\r\n                    UNION ALL SELECT `Apr-22` ,  'Apr-22'\r\n                    UNION ALL SELECT `May-22` ,  'May-22'\r\n                    UNION ALL SELECT `Jun-22` ,  'Jun-22'\r\n                    UNION ALL SELECT `Jul-22` ,  'Jul-22'\r\n                    UNION ALL SELECT `Aug-22` ,  'Aug-22'\r\n                    UNION ALL SELECT `Sep-22` ,  'Sep-22'\r\n                    UNION ALL SELECT `Oct-22` ,  'Oct-22'\r\n                    UNION ALL SELECT `Nov-22` ,  'Nov-22'\r\n                    UNION ALL SELECT `Dec-22` ,  'Dec-22'\r\n        )as Column_Name(value,`Month`)\r\n        WHERE\r\n    --     TRIM(SBU) NOT IN ('',' ', 'Overall','Cumulative','%') AND\r\n--         TRIM(value) NOT IN ('',' ', '-','Jan-22','Feb-22','Mar-22','Apr-22','May-22','Jun-22','Jul-22','Aug-22','Sep-22','Oct-22','Nov-22','Dec-22')\r\n        TRIM(value) NOT IN ('Jan-22','Feb-22','Mar-22','Apr-22','May-22','Jun-22','Jul-22','Aug-22','Sep-22','Oct-22','Nov-22','Dec-22')\r\n        AND TRIM(SBU) NOT IN ('',' ','Cumulative','%','Total Revenue (BOQ)','Achieved Revenue (Till 2021)','Overall')\r\n    ),\r\nSTAGGING AS (\r\n        SELECT\r\n            Upload_Date,\r\n            project_id,\r\n            `Type`,\r\n            SBU,\r\n            `Month`,\r\n            IFNULL(REPLACE(value,',',''),0.00) AS value,    \r\n            DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(Upload_Date) DESC) AS `DENSE_RANK`\r\n        FROM DATA_FORMATTER opbp\r\n        /*WHERE TRIM(value) NOT IN ('','-',' ')*/\r\n        GROUP BY 1,2,3,4,5,6 ORDER BY 1,2,3,4,5 DESC),\r\n    PRILIM_OUTPUT AS (\r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Type`,\r\n                SBU,\r\n                CASE\r\n                    WHEN SBU = 'SBU 1' THEN 1\r\n                    WHEN SBU = 'SBU 2' THEN 2\r\n                    WHEN SBU = 'SBU 3' THEN 3\r\n                    WHEN SBU = 'SBU 4' THEN 4\r\n                    WHEN SBU = 'SBU 5' THEN 5\r\n                    ELSE 6\r\n                END AS SBU_Custom_Sort,\r\n                `Month`,\r\n                value                \r\n            FROM STAGGING WHERE `DENSE_RANK` = 1 AND TRIM(SBU) NOT IN ('',' ','Cumulative','%','Total Revenue (BOQ)','Achieved Revenue (Till 2021)','Overall')),\r\nPRE_FINAL AS (\r\nSELECT\r\n    FPBP.Upload_Date,\r\n    FPBP.project_id,\r\n    FPBP.`Type`,\r\n    FPBP.SBU,\r\n    FPBP.SBU_Custom_Sort,\r\n    FPBP.`Month`,\r\n        CASE\r\n        WHEN TRIM(FPBP.`Month`) IN ('Total Revenue (BOQ)','Achieved Revenue (Till 2021)') THEN null\r\n        ELSE replace(date_format(str_to_date(concat('01-',FPBP.`Month`),'%d-%b-%y'),'%Y-%m'),'-','')\r\nEND AS ORDER_Month,\r\n        /*concat(\r\n        substring(date_format(str_to_date(concat('01-',FPBP.`Month`,'01-01-1900'),'%d-%b-%y'),'%d-%m-%Y'), 7,4),\r\n        substring(date_format(str_to_date(concat('01-',FPBP.`Month`,'01-01-1900'),'%d-%b-%y'),'%d-%m-%Y'), 4,2)\r\n        ) A,*/\r\n    \r\n    FPBP.value\r\nFROM PRILIM_OUTPUT FPBP ORDER BY 2,3,5,7),\r\nCummulative_Sum AS (\r\n    SELECT\r\n        *,\r\n        SUM(CAST(value AS DECIMAL) ) OVER(PARTITION BY project_id,`Type`,SBU_Custom_Sort ORDER BY ORDER_Month) AS Cummulative\r\n    FROM PRE_FINAL\r\n        )\r\nSelect Upload_date\r\n\t\t,project_id\r\n        ,`Type`\r\n        ,SBU\r\n        ,`Month`\r\n        ,Case when TRIM(`value`) = '0' Then '' else TRIM(`value`) end `value`\r\n        ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(Upload_Date) DESC) AS `DENSE_RANK`\r\n        ,SBU_Custom_Sort `sbu_sort`\r\n        ,ROW_NUMBER() OVER(PARTITION BY project_id, SBU, `Type` ORDER BY ORDER_month ASC) AS `month_sort`\r\n        ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY YEAR(DATE(ORDER_month)) DESC) AS `year_sort`\r\n        ,Cummulative\r\n\t\t\t\r\nFrom (         \r\nSELECT     PF.*,\r\n        CUM.Cummulative        \r\n  \r\nFROM PRE_FINAL PF LEFT JOIN Cummulative_Sum CUM\r\n    on PF.project_id = CUM.project_id\r\n    and PF.`Type` = CUM.`Type`\r\n    and PF.SBU = CUM.SBU\r\n    and PF.SBU_Custom_Sort = CUM.SBU_Custom_Sort\r\n    and PF.ORDER_Month = CUM.ORDER_Month\r\n    and PF.value = CUM.value  \r\n) A;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Business Plan Template 2023",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Business Plan Template 2022",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "INSERT IGNORE INTO f_pln_business_plan_1\r\nWITH DATA_FORMATTER AS (\r\n SELECT\r\n        DATE(upload_time) AS Upload_date,\r\n        project_id,\r\n        tower,\r\n        sbu_id,\r\n        `Type`,\r\n        SBU,\r\n        Column_Name.`Month`,\r\n        CASE \r\n            WHEN TRIM(Column_Name.VALUE) IN ('',' ','-')  AND `Type` = 'Plan'  THEN '0'\r\n            ELSE Column_Name.VALUE\r\n        END AS Value\r\n        FROM o_pln_business_plan_1\r\n        cross join lateral (\r\n                        SELECT `Jan-23` ,  'Jan-23'\r\n                    UNION ALL SELECT `Feb-23` ,  'Feb-23'\r\n                    UNION ALL SELECT `Mar-23` ,  'Mar-23'\r\n                    UNION ALL SELECT `Apr-23` ,  'Apr-23'\r\n                    UNION ALL SELECT `May-23` ,  'May-23'\r\n                    UNION ALL SELECT `Jun-23` ,  'Jun-23'\r\n                    UNION ALL SELECT `Jul-23` ,  'Jul-23'\r\n                    UNION ALL SELECT `Aug-23` ,  'Aug-23'\r\n                    UNION ALL SELECT `Sep-23` ,  'Sep-23'\r\n                    UNION ALL SELECT `Oct-23` ,  'Oct-23'\r\n                    UNION ALL SELECT `Nov-23` ,  'Nov-23'\r\n                    UNION ALL SELECT `Dec-23` ,  'Dec-23'\r\n        )as Column_Name(value,`Month`)\r\n        WHERE\r\n    --     TRIM(SBU) NOT IN ('',' ', 'Overall','Cumulative','%') AND\r\n--         TRIM(value) NOT IN ('',' ', '-','Jan-23','Feb-23','Mar-23','Apr-23','May-23','Jun-23','Jul-23','Aug-23','Sep-23','Oct-23','Nov-23','Dec-23')\r\n        TRIM(value) NOT IN ('Jan-23','Feb-23','Mar-23','Apr-23','May-23','Jun-23','Jul-23','Aug-23','Sep-23','Oct-23','Nov-23','Dec-23')\r\n        AND TRIM(SBU) NOT IN ('',' ','Cumulative','%','Total Revenue (BOQ)','Achieved Revenue (Till 2021)','Overall')\r\n    ),\r\nSTAGGING AS (\r\n        SELECT\r\n            Upload_Date,\r\n            project_id,\r\n            `Type`,\r\n            SBU,\r\n            `Month`,\r\n            IFNULL(REPLACE(value,',',''),0.00) AS value,    \r\n            DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(Upload_Date) DESC) AS `DENSE_RANK`\r\n        FROM DATA_FORMATTER opbp\r\n        /*WHERE TRIM(value) NOT IN ('','-',' ')*/\r\n        GROUP BY 1,2,3,4,5,6 ORDER BY 1,2,3,4,5 DESC),\r\n    PRILIM_OUTPUT AS (\r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Type`,\r\n                SBU,\r\n                CASE\r\n                    WHEN SBU = 'SBU 1' THEN 1\r\n                    WHEN SBU = 'SBU 2' THEN 2\r\n                    WHEN SBU = 'SBU 3' THEN 3\r\n                    WHEN SBU = 'SBU 4' THEN 4\r\n                    WHEN SBU = 'SBU 5' THEN 5\r\n                    ELSE 6\r\n                END AS SBU_Custom_Sort,\r\n                `Month`,\r\n                value                \r\n            FROM STAGGING WHERE `DENSE_RANK` = 1 AND TRIM(SBU) NOT IN ('',' ','Cumulative','%','Total Revenue (BOQ)','Achieved Revenue (Till 2021)','Overall')),\r\nPRE_FINAL AS (\r\nSELECT\r\n    FPBP.Upload_Date,\r\n    FPBP.project_id,\r\n    FPBP.`Type`,\r\n    FPBP.SBU,\r\n    FPBP.SBU_Custom_Sort,\r\n    FPBP.`Month`,\r\n        CASE\r\n        WHEN TRIM(FPBP.`Month`) IN ('Total Revenue (BOQ)','Achieved Revenue (Till 2021)') THEN null\r\n        ELSE replace(date_format(str_to_date(concat('01-',FPBP.`Month`),'%d-%b-%y'),'%Y-%m'),'-','')\r\nEND AS ORDER_Month,\r\n        /*concat(\r\n        substring(date_format(str_to_date(concat('01-',FPBP.`Month`,'01-01-1900'),'%d-%b-%y'),'%d-%m-%Y'), 7,4),\r\n        substring(date_format(str_to_date(concat('01-',FPBP.`Month`,'01-01-1900'),'%d-%b-%y'),'%d-%m-%Y'), 4,2)\r\n        ) A,*/\r\n    \r\n    FPBP.value\r\nFROM PRILIM_OUTPUT FPBP ORDER BY 2,3,5,7),\r\nCummulative_Sum AS (\r\n    SELECT\r\n        *,\r\n        SUM(CAST(value AS DECIMAL) ) OVER(PARTITION BY project_id,`Type`,SBU_Custom_Sort ORDER BY ORDER_Month) AS Cummulative\r\n    FROM PRE_FINAL\r\n        )\r\nSelect Upload_date\r\n\t\t,project_id\r\n        ,`Type`\r\n        ,SBU\r\n        ,`Month`\r\n        ,Case when TRIM(`value`) = '0' Then '' else TRIM(`value`) end `value`\r\n        ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(Upload_Date) DESC) AS `DENSE_RANK`\r\n        ,SBU_Custom_Sort `sbu_sort`\r\n        ,ROW_NUMBER() OVER(PARTITION BY project_id, SBU, `Type` ORDER BY ORDER_month ASC) AS `month_sort`\r\n        ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY YEAR(DATE(ORDER_month)) DESC)+1 AS `year_sort`\r\n        ,Cummulative\r\nFrom (         \r\nSELECT     PF.*,\r\n        CUM.Cummulative\r\n  \r\nFROM PRE_FINAL PF LEFT JOIN Cummulative_Sum CUM\r\n    on PF.project_id = CUM.project_id\r\n    and PF.`Type` = CUM.`Type`\r\n    and PF.SBU = CUM.SBU\r\n    and PF.SBU_Custom_Sort = CUM.SBU_Custom_Sort\r\n    and PF.ORDER_Month = CUM.ORDER_Month\r\n    and PF.value = CUM.value  \r\n) A;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T10:44:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Service_Room')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Electrical Room",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_electricalroom;\r\nINSERT INTO f_pln_electricalroom\r\nWITH PRE_STAGGING AS(    \r\n        SELECT DATE(O_PLN_ELECTRICALROOM_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_ELECTRICALROOM_RAW.project_id,\r\n        O_PLN_ELECTRICALROOM_RAW.tower,\r\n        O_PLN_ELECTRICALROOM_RAW.Level,\r\n        'Electrical Room' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_ELECTRICALROOM_MAP.ACTIVITY_ID,\r\n        O_PLN_ELECTRICALROOM_MAP.SBU_ID,\r\n        O_PLN_ELECTRICALROOM_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    FROM O_PLN_ELECTRICALROOM_RAW\r\n    CROSS JOIN LATERAL (\r\n                        SELECT\t`Blockwork Layout`\t,\t'Blockwork Layout'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Blockwork`\t,\t'Blockwork'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Marking for Builders Work`\t,\t'MEP Marking for Builders Work'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Cutting & Chasing of Blockwork`\t,\t'Cutting & Chasing of Blockwork'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Services Installation`\t,\t'MEP Services Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall MEP Services Packing`\t,\t'Wall MEP Services Packing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Plaster`\t,\t'Plaster'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Screed`\t,\t'Screed'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall & Ceiling Primer`\t,\t'Wall & Ceiling Primer'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Ceiling Stucco (1st and 2nd Coat)`\t,\t'Ceiling Stucco (1st and 2nd Coat)'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall Stucco (1st and 2nd Coat)`\t,\t'Wall Stucco (1st and 2nd Coat)'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Ceiling First Coat Paint`\t,\t'Ceiling First Coat Paint'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall First Coat Paint`\t,\t'Wall First Coat Paint'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Meter Board Fixing`\t,\t'Meter Board Fixing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Meter Board Painting`\t,\t'Meter Board Painting'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Installation of cable tray and trunking`\t,\t'Installation of cable tray and trunking'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Installation of Panels`\t,\t'Installation of Panels'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Cable laying and glanding works`\t,\t'Cable laying and glanding works'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Dressing and termination of SMDB & Panels`\t,\t'Dressing and termination of SMDB & Panels'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Bus bar with Tap off Box completion`\t,\t'Bus bar with Tap off Box completion'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Threshold`\t,\t'Threshold'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Floor Tile`\t,\t'Floor Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Frame Installation`\t,\t'Door-Frame Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Architrave Installation`\t,\t'Door-Architrave Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Shutter Installation`\t,\t'Door-Shutter Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Ironmongery Installation`\t,\t'Door-Ironmongery Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Silicone`\t,\t'Door-Silicone'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Grinding`\t,\t'Epoxy Grinding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Bug Fill`\t,\t'Epoxy Bug Fill'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Primer`\t,\t'Epoxy Primer'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy First Coat`\t,\t'Epoxy First Coat'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Final Coat`\t,\t'Epoxy Final Coat'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Skirting`\t,\t'Skirting'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`POP Works`\t,\t'POP Works'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Electrical Room Top Boarding`\t,\t'Electrical Room Top Boarding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Fire Sealant Works`\t,\t'Fire Sealant Works'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Angle Fixing`\t,\t'Angle Fixing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Shaft Boarding`\t,\t'Shaft Boarding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Grouting`\t,\t'Grouting'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Silicone`\t,\t'Silicone'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Signage`\t,\t'Signage'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Final Fixtures`\t,\t'MEP Final Fixtures'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Electric Meter Installation`\t,\t'Electric Meter Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Final Coat Paint`\t,\t'Final Coat Paint'\r\n                        )as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_ELECTRICALROOM_MAP \r\n    ON Column_Name.Type_of_work = O_PLN_ELECTRICALROOM_MAP.ACTIVITY_SEQUENCE\r\n    WHERE VALUE IS NOT NULL)\r\nSELECT \r\n    PS.Upload_Date    ,\r\n    PS.project_id    ,\r\n    PS.tower    ,\r\n    PS.`Level`    ,\r\n    PS.sclicer    ,\r\n    CASE \r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n        ELSE PS.value\r\n    END AS value,\r\n    PS.Type_of_work    ,\r\n    PS.ACTIVITY_ID    ,\r\n    PS.SBU_ID    ,\r\n    PS.CATEGORY    ,\r\n    OLMA.level_map\r\nFROM PRE_STAGGING PS\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n        ON PS.`Level` = OLMA.`level`\r\nWHERE PS.Project_Udate_DRANK = 1 ORDER BY value DESC;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fire-Lift Lobby",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Electrical Room",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_fireliftlobby;\r\nINSERT INTO f_pln_fireliftlobby\r\nWITH PRE_STAGGING AS (\r\n        SELECT DATE(O_PLN_FIRELIFTLOBBY_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_FIRELIFTLOBBY_RAW.project_id,\r\n        O_PLN_FIRELIFTLOBBY_RAW.tower,\r\n        O_PLN_FIRELIFTLOBBY_RAW.Level,\r\n        'Fire Lift Lobby' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_FIRELIFTLOBBY_MAP.ACTIVITY_ID,\r\n        O_PLN_FIRELIFTLOBBY_MAP.SBU_ID,\r\n        O_PLN_FIRELIFTLOBBY_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    FROM O_PLN_FIRELIFTLOBBY_RAW\r\n    CROSS JOIN LATERAL (\r\n                        SELECT    `MEP Marking for Builders Work`    ,    'MEP Marking for Builders Work'\r\n                        UNION ALL SELECT    `Cutting & Chasing of Blockwork`    ,    'Cutting & Chasing of Blockwork'\r\n                        UNION ALL SELECT    `MEP Services Installation`    ,    'MEP Services Installation'\r\n                        UNION ALL SELECT    `Wall MEP Services Packing`    ,    'Wall MEP Services Packing'\r\n                        UNION ALL SELECT    `Plaster`    ,    'Plaster'\r\n                        UNION ALL SELECT    `Screed`    ,    'Screed'\r\n                        UNION ALL SELECT    `Lift Door Installation & Jamb Installation`    ,    'Lift Door Installation & Jamb Installation'\r\n                        UNION ALL SELECT    `Beside Lift Door Blockwork`    ,    'Beside Lift Door Blockwork'\r\n                        UNION ALL SELECT    `Beside Lift Door Plaster`    ,    'Beside Lift Door Plaster'\r\n                        UNION ALL SELECT    `MEP High Level Works`    ,    'MEP High Level Works'\r\n                        UNION ALL SELECT    `FC Framing`    ,    'FC Framing'\r\n                        UNION ALL SELECT    `MEP Boarding Clearance`    ,    'MEP Boarding Clearance'\r\n                        UNION ALL SELECT    `FC Boarding`    ,    'FC Boarding'\r\n                        UNION ALL SELECT    `Joint Taping and Sanding`    ,    'Joint Taping and Sanding'\r\n                        UNION ALL SELECT    `Ceiling Primer`    ,    'Ceiling Primer'\r\n                        UNION ALL SELECT    `Ceiling Stucco 1st and 2nd Coat`    ,    'Ceiling Stucco 1st and 2nd Coat'\r\n                        UNION ALL SELECT    `Ceiling First Coat Paint`    ,    'Ceiling First Coat Paint'\r\n                        UNION ALL SELECT    `Wall Primer`    ,    'Wall Primer'\r\n                        UNION ALL SELECT    `Wall Stucco 1st and 2nd Coat`    ,    'Wall Stucco 1st and 2nd Coat'\r\n                        UNION ALL SELECT    `Wall First Coat Paint`    ,    'Wall First Coat Paint'\r\n                        UNION ALL SELECT    `Floor Tile`    ,    'Floor Tile'\r\n                        UNION ALL SELECT    `Door-Frame Installation`    ,    'Door-Frame Installation'\r\n                        UNION ALL SELECT    `Door-Architrave Installation`    ,    'Door-Architrave Installation'\r\n                        UNION ALL SELECT    `Door-Shutter Installation`    ,    'Door-Shutter Installation'\r\n                        UNION ALL SELECT    `Door-Ironmongery Installation`    ,    'Door-Ironmongery Installation'\r\n                        UNION ALL SELECT    `Door-Silicone`    ,    'Door-Silicone'\r\n                        UNION ALL SELECT    `Epoxy Grinding`    ,    'Epoxy Grinding'\r\n                        UNION ALL SELECT    `Epoxy Bug Fill`    ,    'Epoxy Bug Fill'\r\n                        UNION ALL SELECT    `Epoxy Primer`    ,    'Epoxy Primer'\r\n                        UNION ALL SELECT    `Epoxy First Coat`    ,    'Epoxy First Coat'\r\n                        UNION ALL SELECT    `Epoxy Final Coat`    ,    'Epoxy Final Coat'\r\n                        UNION ALL SELECT    `Skirting`    ,    'Skirting'\r\n                        UNION ALL SELECT    `Grout`    ,    'Grout'\r\n                        UNION ALL SELECT    `Silicone`    ,    'Silicone'\r\n                        UNION ALL SELECT    `Signage`    ,    'Signage'\r\n                        UNION ALL SELECT    `MEP Final Fixtures`    ,    'MEP Final Fixtures'\r\n                        UNION ALL SELECT    `Final Coat`    ,    'Final Coat'\r\n                        )as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_FIRELIFTLOBBY_MAP \r\n    ON Column_Name.Type_of_work = O_PLN_FIRELIFTLOBBY_MAP.ACTIVITY_SEQUENCE\r\n    WHERE VALUE IS NOT NULL\r\n    )\r\nSELECT \r\n    PS.Upload_Date    ,\r\n    PS.project_id    ,\r\n    PS.tower    ,\r\n    PS.`Level`    ,\r\n    PS.sclicer    ,\r\n    CASE \r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n        ELSE PS.value\r\n    END AS value,\r\n    PS.Type_of_work    ,\r\n    PS.ACTIVITY_ID    ,\r\n    PS.SBU_ID    ,\r\n    PS.CATEGORY    ,\r\n    OLMA.level_map\r\nFROM PRE_STAGGING PS\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n        ON PS.`Level` = OLMA.`level`\r\nWHERE PS.Project_Udate_DRANK = 1;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Garbage Room",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fire-Lift Lobby",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_garbageroom;\r\nINSERT INTO f_pln_garbageroom\r\nWITH PRE_STAGGING AS(\r\n        SELECT DATE(O_PLN_GARBAGEROOM_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_GARBAGEROOM_RAW.project_id,\r\n        O_PLN_GARBAGEROOM_RAW.tower,\r\n        O_PLN_GARBAGEROOM_RAW.Level,\r\n        'Garbage Room' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_GARBAGEROOM_MAP.ACTIVITY_ID,\r\n        O_PLN_GARBAGEROOM_MAP.SBU_ID,\r\n        O_PLN_GARBAGEROOM_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    FROM O_PLN_GARBAGEROOM_RAW\r\n    CROSS JOIN LATERAL (\r\n                        SELECT    `Outer Wall Blockwork`    ,    'Outer Wall Blockwork'\r\n                        UNION ALL SELECT    `Garbage chute Works`    ,    'Garbage chute Works'\r\n                        UNION ALL SELECT    `MEP Piping Works`    ,    'MEP Piping Works'\r\n                        UNION ALL SELECT    `MEP Pressure test & Clearance`    ,    'MEP Pressure test & Clearance'\r\n                        UNION ALL SELECT    `Inner wall Blockwork`    ,    'Inner wall Blockwork'\r\n                        UNION ALL SELECT    `MEP Marking for Builders Work`    ,    'MEP Marking for Builders Work'\r\n                        UNION ALL SELECT    `Cutting & Chasing of Blockwork`    ,    'Cutting & Chasing of Blockwork'\r\n                        UNION ALL SELECT    `MEP Services Installation`    ,    'MEP Services Installation'\r\n                        UNION ALL SELECT    `Wall MEP Services Packing`    ,    'Wall MEP Services Packing'\r\n                        UNION ALL SELECT    `Plaster`    ,    'Plaster'\r\n                        UNION ALL SELECT    `Core Cutting & Chipping`    ,    'Core Cutting & Chipping'\r\n                        UNION ALL SELECT    `MEP Sleeve Installation`    ,    'MEP Sleeve Installation'\r\n                        UNION ALL SELECT    `Bore Packing`    ,    'Bore Packing'\r\n                        UNION ALL SELECT    `Under Screed Water Proofing`    ,    'Under Screed Water Proofing'\r\n                        UNION ALL SELECT    `Screed`    ,    'Screed'\r\n                        UNION ALL SELECT    `Wall Tile`    ,    'Wall Tile'\r\n                        UNION ALL SELECT    `MEP Framing Clearance`    ,    'MEP Framing Clearance'\r\n                        UNION ALL SELECT    `False Ceiling Framing`    ,    'False Ceiling Framing'\r\n                        UNION ALL SELECT    `MEP Boarding Clearance`    ,    'MEP Boarding Clearance'\r\n                        UNION ALL SELECT    `False Ceiling Boarding`    ,    'False Ceiling Boarding'\r\n                        UNION ALL SELECT    `Ceiling Primer`    ,    'Ceiling Primer'\r\n                        UNION ALL SELECT    `Ceiling Stucco (1st and 2nd Coat)`    ,    'Ceiling Stucco (1st and 2nd Coat)'\r\n                        UNION ALL SELECT    `Ceiling First Coat Paint`    ,    'Ceiling First Coat Paint'\r\n                        UNION ALL SELECT    `Under Tile Water Proofing`    ,    'Under Tile Water Proofing'\r\n                        UNION ALL SELECT    `Threshold`    ,    'Threshold'\r\n                        UNION ALL SELECT    `Floor Tile`    ,    'Floor Tile'\r\n                        UNION ALL SELECT    `Skirting`    ,    'Skirting'\r\n                        UNION ALL SELECT    `Grouting`    ,    'Grouting'\r\n                        UNION ALL SELECT    `Silicone`    ,    'Silicone'\r\n                        UNION ALL SELECT    `Hopper Door`    ,    'Hopper Door'\r\n                        UNION ALL SELECT    `Door-Frame Installation`    ,    'Door-Frame Installation'\r\n                        UNION ALL SELECT    `Door-Architrave Installation`    ,    'Door-Architrave Installation'\r\n                        UNION ALL SELECT    `Door-Shutter Installation`    ,    'Door-Shutter Installation'\r\n                        UNION ALL SELECT    `Door-Ironmongery Installation`    ,    'Door-Ironmongery Installation'\r\n                        UNION ALL SELECT    `Door-Silicone`    ,    'Door-Silicone'\r\n                        UNION ALL SELECT    `Signage`    ,    'Signage'\r\n                        UNION ALL SELECT    `MEP Final Fixtures`    ,    'MEP Final Fixtures'\r\n                        UNION ALL SELECT    `Final Coat Paint`    ,    'Final Coat Paint'\r\n                        )as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_GARBAGEROOM_MAP \r\n    ON Column_Name.Type_of_work = O_PLN_GARBAGEROOM_MAP.ACTIVITY_SEQUENCE\r\n    WHERE VALUE IS NOT NULL)\r\nSELECT \r\n    PS.Upload_Date  ,\r\n    PS.project_id    ,\r\n    PS.tower    ,\r\n    PS.`Level`    ,\r\n    PS.sclicer    ,\r\n    CASE \r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n        ELSE PS.value\r\n    END AS value,\r\n    PS.Type_of_work    ,\r\n    PS.ACTIVITY_ID    ,\r\n    PS.SBU_ID    ,\r\n    PS.CATEGORY    ,\r\n    OLMA.level_map\r\nFROM PRE_STAGGING PS\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n        ON PS.`Level` = OLMA.`level`\r\nWHERE PS.Project_Udate_DRANK = 1;\r\n\r\n/**/\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Telephone Room",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Garbage Room",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_telephoneroom;\nINSERT INTO f_pln_telephoneroom\nWITH PRE_STAGGING AS(\n        SELECT DATE(O_PLN_TELEPHONEROOM_RAW.upload_time) AS Upload_Date,\n        O_PLN_TELEPHONEROOM_RAW.project_id,\n        O_PLN_TELEPHONEROOM_RAW.tower,\n        O_PLN_TELEPHONEROOM_RAW.Level,\n        'Telephone Room' AS sclicer,\n        Column_Name.*,\n        O_PLN_TELEPHONEROOM_MAP.ACTIVITY_ID,\n        O_PLN_TELEPHONEROOM_MAP.SBU_ID,\n        O_PLN_TELEPHONEROOM_MAP.CATEGORY,\n        DENSE_RANK () OVER     (PARTITION BY  project_id\n                            ORDER BY  DATE(upload_time) DESC\n                            )     Project_Udate_DRANK\n    FROM O_PLN_TELEPHONEROOM_RAW\n    CROSS JOIN LATERAL (\n\t\t\t\t\t\tSELECT\t`Blockwork Layout`\t,\t'Blockwork Layout'\n\t\t\t\t\t\tUNION ALL SELECT\t`Blockwork`\t,\t'Blockwork'\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Marking for Builders Work`\t,\t'MEP Marking for Builders Work'\n\t\t\t\t\t\tUNION ALL SELECT\t`Cutting & Chasing of Blockwork`\t,\t'Cutting & Chasing of Blockwork'\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Services Installation`\t,\t'MEP Services Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall MEP Services Packing`\t,\t'Wall MEP Services Packing'\n\t\t\t\t\t\tUNION ALL SELECT\t`Plaster`\t,\t'Plaster'\n\t\t\t\t\t\tUNION ALL SELECT\t`Screed`\t,\t'Screed'\n\t\t\t\t\t\tUNION ALL SELECT\t`Ceiling Stucco (1st and 2nd Coat)`\t,\t'Ceiling Stucco (1st and 2nd Coat)'\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall Stucco (1st and 2nd Coat)`\t,\t'Wall Stucco (1st and 2nd Coat)'\n\t\t\t\t\t\tUNION ALL SELECT\t`Ceiling First Coat Paint`\t,\t'Ceiling First Coat Paint'\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall First Coat Paint`\t,\t'Wall First Coat Paint'\n\t\t\t\t\t\tUNION ALL SELECT\t`Installation of cable tray and trunking`\t,\t'Installation of cable tray and trunking'\n\t\t\t\t\t\tUNION ALL SELECT\t`Installation of Panels`\t,\t'Installation of Panels'\n\t\t\t\t\t\tUNION ALL SELECT\t`Cable laying and glanding works`\t,\t'Cable laying and glanding works'\n\t\t\t\t\t\tUNION ALL SELECT\t`Fire Sealant`\t,\t'Fire Sealant'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Grinding`\t,\t'Epoxy Grinding'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Bug Fill`\t,\t'Epoxy Bug Fill'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Primer`\t,\t'Epoxy Primer'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy First Coat`\t,\t'Epoxy First Coat'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Final Coat`\t,\t'Epoxy Final Coat'\n\t\t\t\t\t\tUNION ALL SELECT\t`Floor Tile`\t,\t'Floor Tile'\n\t\t\t\t\t\tUNION ALL SELECT\t`Skirting`\t,\t'Skirting'\n\t\t\t\t\t\tUNION ALL SELECT\t`POP`\t,\t'POP'\n\t\t\t\t\t\tUNION ALL SELECT\t`Grout`\t,\t'Grout'\n\t\t\t\t\t\tUNION ALL SELECT\t`Threshold`\t,\t'Threshold'\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Frame Installation`\t,\t'Door-Frame Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Architrave Installation`\t,\t'Door-Architrave Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Shutter Installation`\t,\t'Door-Shutter Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Ironmongery Installation`\t,\t'Door-Ironmongery Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Final Fixtures`\t,\t'MEP Final Fixtures'\n\t\t\t\t\t\tUNION ALL SELECT\t`Final Coat Paint`\t,\t'Final Coat Paint'\n                        )as Column_Name(value,Type_of_work)\n    JOIN O_PLN_TELEPHONEROOM_MAP \n    ON Column_Name.Type_of_work = O_PLN_TELEPHONEROOM_MAP.ACTIVITY_SEQUENCE\n    WHERE VALUE IS NOT NULL)\nSELECT \n    PS.Upload_Date ,\n    PS.project_id    ,\n    PS.tower    ,\n    PS.`Level`    ,\n    PS.sclicer    ,\n    CASE \n        WHEN PS.value IN ('','NA') THEN '0%'\n        ELSE PS.value\n    END AS value,\n    PS.Type_of_work    ,\n    PS.ACTIVITY_ID    ,\n    PS.SBU_ID    ,\n    PS.CATEGORY    ,\n    OLMA.level_map\nFROM PRE_STAGGING PS\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\n        ON PS.`Level` = OLMA.`level`\nWHERE PS.Project_Udate_DRANK = 1 ;\n\n/**/\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Watermeter Room",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Telephone Room",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_waterroom;\r\nINSERT INTO f_pln_waterroom\r\nWITH PRE_STAGGING AS (\r\n        SELECT DATE(O_PLN_WATERROOM_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_WATERROOM_RAW.project_id,\r\n        O_PLN_WATERROOM_RAW.tower,\r\n        O_PLN_WATERROOM_RAW.`Level`,\r\n        'Water Room' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_WATERROOM_MAP.ACTIVITY_ID,\r\n        O_PLN_WATERROOM_MAP.SBU_ID,\r\n        O_PLN_WATERROOM_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    from O_PLN_WATERROOM_RAW\r\n    cross join lateral (\r\n                SELECT  `Blockwork Layout` , 'Blockwork Layout'\r\n            UNION ALL SELECT Blockwork , 'Blockwork'\r\n            UNION ALL SELECT `MEP Marking for Builders Work` , 'MEP Marking for Builders Work'\r\n            UNION ALL SELECT `Cutting & Chasing of Blockwork` , 'Cutting & Chasing of Blockwork'\r\n            UNION ALL SELECT `MEP Services Installation` , 'MEP Services Installation'\r\n            UNION ALL SELECT `Wall MEP Services Packing` , 'Wall MEP Services Packing'\r\n            UNION ALL SELECT Plaster , 'Plaster'\r\n            UNION ALL SELECT `Core Cutting & Chipping` , 'Core Cutting & Chipping'\r\n            UNION ALL SELECT `MEP Sleeve Installation` , 'MEP Sleeve Installation'\r\n            UNION ALL SELECT `Bore Packing` , 'Bore Packing'\r\n            UNION ALL SELECT Screed , 'Screed'\r\n            UNION ALL SELECT `Wall Primer` , 'Wall Primer'\r\n            UNION ALL SELECT `Wall Stucco (1st and 2nd Coat)` , 'Wall Stucco (1st and 2nd Coat)'\r\n            UNION ALL SELECT `Wall First Coat Paint` , 'Wall First Coat Paint'\r\n            UNION ALL SELECT `Installation of PPR pipes` , 'Installation of PPR pipes'\r\n            UNION ALL SELECT `Manifold & Valve installation` , 'Manifold & Valve installation'\r\n            UNION ALL SELECT `PRV installation & connections` , 'PRV installation & connections'\r\n            UNION ALL SELECT `Testing of Pipes` , 'Testing of Pipes'\r\n            UNION ALL SELECT `Fire Sealant Works` , 'Fire Sealant Works'\r\n            UNION ALL SELECT `MEP Framing Clearance` , 'MEP Framing Clearance'\r\n            UNION ALL SELECT `False Ceiling Framing` , 'False Ceiling Framing'\r\n            UNION ALL SELECT `MEP Boarding Clearance` , 'MEP Boarding Clearance'\r\n            UNION ALL SELECT `False Ceiling Boarding` , 'False Ceiling Boarding'\r\n            UNION ALL SELECT `Ceiling Primer` , 'Ceiling Primer'\r\n            UNION ALL SELECT `Ceiling Stucco (1st and 2nd Coat)` , 'Ceiling Stucco (1st and 2nd Coat)'\r\n            UNION ALL SELECT `First Coat Paint` , 'First Coat Paint'\r\n            UNION ALL SELECT Threshold , 'Threshold'\r\n            UNION ALL SELECT `Door-Frame Installation` , 'Door-Frame Installation'\r\n            UNION ALL SELECT `Door-Architrave Installation` , 'Door-Architrave Installation'\r\n            UNION ALL SELECT `Door-Shutter Installation` , 'Door-Shutter Installation'\r\n            UNION ALL SELECT `Door-Ironmongery Installation` , 'Door-Ironmongery Installation'\r\n            UNION ALL SELECT `Epoxy Grinding` , 'Epoxy Grinding'\r\n            UNION ALL SELECT `Epoxy Bug Fill` , 'Epoxy Bug Fill'\r\n            UNION ALL SELECT `Epoxy Primer` , 'Epoxy Primer'\r\n            UNION ALL SELECT `Epoxy First Coat` , 'Epoxy First Coat'\r\n            UNION ALL SELECT `Epoxy Final Coat` , 'Epoxy Final Coat'\r\n            UNION ALL SELECT Skirting , 'Skirting'\r\n            UNION ALL SELECT `POP Works` , 'POP Works'\r\n            UNION ALL SELECT Grouting , 'Grouting'\r\n            UNION ALL SELECT Silicone , 'Silicone'\r\n            UNION ALL SELECT `MEP Final Fixtures` , 'MEP Final Fixtures'\r\n            UNION ALL SELECT `PSV Installation` , 'Pressure Safety Valve Installation'\r\n            UNION ALL SELECT `Water Meter Installation` , 'Water Meter Installation'\r\n            UNION ALL SELECT `Final Coat Paint` , 'Final Coat Paint'\r\n    )\r\n        as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_WATERROOM_MAP \r\n    ON Column_Name.Type_of_work = O_PLN_WATERROOM_MAP.ACTIVITY_SEQUENCE\r\n    WHERE value IS NOT NULL)\r\nSELECT \r\n    PS.Upload_Date ,\r\n    PS.project_id    ,\r\n    PS.tower    ,\r\n    PS.`Level`    ,\r\n    PS.sclicer    ,\r\n    CASE \r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n        ELSE PS.value\r\n    END AS value,\r\n    PS.Type_of_work    ,\r\n    PS.ACTIVITY_ID    ,\r\n    PS.SBU_ID    ,\r\n    PS.CATEGORY    ,\r\n    OLMA.level_map\r\nFROM PRE_STAGGING PS\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n        ON PS.`Level` = OLMA.`level`\r\nWHERE PS.Project_Udate_DRANK = 1;\r\n\r\n/**/\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Service Room",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Watermeter Room",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_servicerooms;\r\nINSERT INTO f_pln_servicerooms\r\n    WITH UNION_ALL AS (\r\n        SELECT * FROM F_PLN_WATERROOM\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_ELECTRICALROOM\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_GARBAGEROOM\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_TELEPHONEROOM\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_FIRELIFTLOBBY\r\n    )\r\n    SELECT \r\n        UNION_ALL.Upload_Date,    \r\n        UNION_ALL.project_id,\r\n        UNION_ALL.tower,\r\n        UNION_ALL.`Level`,\r\n        UNION_ALL.sclicer,\r\n        CAST(REPLACE(UNION_ALL.value,'%','') AS DECIMAL)/100 AS value,\r\n        UNION_ALL.ACTIVITY_ID,\r\n        UNION_ALL.SBU_ID,\r\n        UNION_ALL.CATEGORY,\r\n        CASE\r\n            WHEN Type_of_work = 'Blockwork' AND sclicer = 'Electrical Room' THEN 'Blockwork ER'\r\n            WHEN Type_of_work = 'Blockwork Layout' AND sclicer = 'Electrical Room' THEN 'Blockwork Layout ER'\r\n            WHEN Type_of_work = 'Bore Packing' AND sclicer = 'Electrical Room' THEN 'Bore Packing ER'\r\n            WHEN Type_of_work = 'Bus bar with Tap off Box completion' AND sclicer = 'Electrical Room' THEN 'Bus bar with Tap off Box completion ER'\r\n            WHEN Type_of_work = 'Cable laying and glanding works' AND sclicer = 'Electrical Room' THEN 'Cable laying and glanding works ER'\r\n            WHEN Type_of_work = 'Ceiling First Coat Paint' AND sclicer = 'Electrical Room' THEN 'Ceiling First Coat Paint ER'\r\n            WHEN Type_of_work = 'Ceiling Stucco (1st and 2nd Coat)' AND sclicer = 'Electrical Room' THEN 'Ceiling Stucco (1st and 2nd Coat) ER'\r\n            WHEN Type_of_work = 'Core Cutting & Chipping' AND sclicer = 'Electrical Room' THEN 'Core Cutting & Chipping ER'\r\n            WHEN Type_of_work = 'Cutting & Chasing of Blockwork' AND sclicer = 'Electrical Room' THEN 'Cutting & Chasing of Blockwork ER'\r\n            WHEN Type_of_work = 'Door-Architrave Installation' AND sclicer = 'Electrical Room' THEN 'Door-Architrave Installation ER'\r\n            WHEN Type_of_work = 'Door-Frame Installation' AND sclicer = 'Electrical Room' THEN 'Door-Frame Installation ER'\r\n            WHEN Type_of_work = 'Door-Ironmongery Installation' AND sclicer = 'Electrical Room' THEN 'Door-Ironmongery Installation ER'\r\n            WHEN Type_of_work = 'Door-Shutter Installation' AND sclicer = 'Electrical Room' THEN 'Door-Shutter Installation ER'\r\n            WHEN Type_of_work = 'Door-Silicone' AND sclicer = 'Electrical Room' THEN 'Door-Silicone ER'\r\n            WHEN Type_of_work = 'Epoxy Bug Fill' AND sclicer = 'Electrical Room' THEN 'Epoxy Bug Fill ER'\r\n            WHEN Type_of_work = 'Epoxy Final Coat' AND sclicer = 'Electrical Room' THEN 'Epoxy Final Coat ER'\r\n            WHEN Type_of_work = 'Epoxy First Coat' AND sclicer = 'Electrical Room' THEN 'Epoxy First Coat ER'\r\n            WHEN Type_of_work = 'Epoxy Grinding' AND sclicer = 'Electrical Room' THEN 'Epoxy Grinding ER'\r\n            WHEN Type_of_work = 'Epoxy Primer' AND sclicer = 'Electrical Room' THEN 'Epoxy Primer ER'\r\n            WHEN Type_of_work = 'Final Coat Paint' AND sclicer = 'Electrical Room' THEN 'Final Coat Paint ER'\r\n            WHEN Type_of_work = 'Fire Sealant Works' AND sclicer = 'Electrical Room' THEN 'Fire Sealant Works ER'\r\n            WHEN Type_of_work = 'Floor Tile' AND sclicer = 'Electrical Room' THEN 'Floor Tile ER'\r\n            WHEN Type_of_work = 'Grouting' AND sclicer = 'Electrical Room' THEN 'Grouting ER'\r\n            WHEN Type_of_work = 'Installation of cable tray and trunking' AND sclicer = 'Electrical Room' THEN 'Installation of cable tray and trunking ER'\r\n            WHEN Type_of_work = 'Installation of Panels' AND sclicer = 'Electrical Room' THEN 'Installation of Panels ER'\r\n            WHEN Type_of_work = 'MEP Final Fixtures' AND sclicer = 'Electrical Room' THEN 'MEP Final Fixtures ER'\r\n            WHEN Type_of_work = 'MEP Marking for Builders Work' AND sclicer = 'Electrical Room' THEN 'MEP Marking for Builders Work ER'\r\n            WHEN Type_of_work = 'MEP Services Installation' AND sclicer = 'Electrical Room' THEN 'MEP Services Installation ER'\r\n            WHEN Type_of_work = 'MEP Sleeve Installation' AND sclicer = 'Electrical Room' THEN 'MEP Sleeve Installation ER'\r\n            WHEN Type_of_work = 'Plaster' AND sclicer = 'Electrical Room' THEN 'Plaster ER'\r\n            WHEN Type_of_work = 'POP Works' AND sclicer = 'Electrical Room' THEN 'POP Works ER'\r\n            WHEN Type_of_work = 'Screed' AND sclicer = 'Electrical Room' THEN 'Screed ER'\r\n            WHEN Type_of_work = 'Signage' AND sclicer = 'Electrical Room' THEN 'Signage ER'\r\n            WHEN Type_of_work = 'Silicone' AND sclicer = 'Electrical Room' THEN 'Silicone ER'\r\n            WHEN Type_of_work = 'Skirting' AND sclicer = 'Electrical Room' THEN 'Skirting ER'\r\n            WHEN Type_of_work = 'Threshold' AND sclicer = 'Electrical Room' THEN 'Threshold ER'\r\n            WHEN Type_of_work = 'Wall First Coat Paint' AND sclicer = 'Electrical Room' THEN 'Wall First Coat Paint ER'\r\n            WHEN Type_of_work = 'Wall MEP Services Packing' AND sclicer = 'Electrical Room' THEN 'Wall MEP Services Packing ER'\r\n            WHEN Type_of_work = 'Wall Stucco (1st and 2nd Coat)' AND sclicer = 'Electrical Room' THEN 'Wall Stucco (1st and 2nd Coat) ER'\r\n            WHEN Type_of_work = 'Ceiling First Coat Paint' AND sclicer = 'Fire Lift Lobby' THEN 'Ceiling First Coat Paint FLL'\r\n            WHEN Type_of_work = 'Ceiling Primer' AND sclicer = 'Fire Lift Lobby' THEN 'Ceiling Primer FLL'\r\n            WHEN Type_of_work = 'Cutting & Chasing of Blockwork' AND sclicer = 'Fire Lift Lobby' THEN 'Cutting & Chasing of Blockwork FLL'\r\n            WHEN Type_of_work = 'Door-Shutter Installation' AND sclicer = 'Telephone Room' THEN 'Door-Shutter Installation TR'\r\n            WHEN Type_of_work = 'Epoxy Bug Fill' AND sclicer = 'Telephone Room' THEN 'Epoxy Bug Fill TR'\r\n            WHEN Type_of_work = 'Epoxy Final Coat' AND sclicer = 'Telephone Room' THEN 'Epoxy Final Coat TR'\r\n            WHEN Type_of_work = 'Epoxy First Coat' AND sclicer = 'Telephone Room' THEN 'Epoxy First Coat TR'\r\n            WHEN Type_of_work = 'Epoxy Grinding' AND sclicer = 'Telephone Room' THEN 'Epoxy Grinding TR'\r\n            WHEN Type_of_work = 'Epoxy Primer' AND sclicer = 'Telephone Room' THEN 'Epoxy Primer TR'\r\n            WHEN Type_of_work = 'Final Coat Paint' AND sclicer = 'Telephone Room' THEN 'Final Coat Paint TR'\r\n            WHEN Type_of_work = 'Floor Tile' AND sclicer = 'Telephone Room' THEN 'Floor Tile TR'\r\n            WHEN Type_of_work = 'Grout' AND sclicer = 'Telephone Room' THEN 'Grout TR'\r\n            WHEN Type_of_work = 'Installation of cable tray and trunking' AND sclicer = 'Telephone Room' THEN 'Installation of cable tray and trunking TR'\r\n            WHEN Type_of_work = 'Installation of Panels' AND sclicer = 'Telephone Room' THEN 'Installation of Panels TR'\r\n            WHEN Type_of_work = 'MEP Final Fixtures' AND sclicer = 'Telephone Room' THEN 'MEP Final Fixtures TR'\r\n            WHEN Type_of_work = 'MEP Marking for Builders Work' AND sclicer = 'Telephone Room' THEN 'MEP Marking for Builders Work TR'\r\n            WHEN Type_of_work = 'MEP Services Installation' AND sclicer = 'Telephone Room' THEN 'MEP Services Installation TR'\r\n            WHEN Type_of_work = 'Plaster' AND sclicer = 'Telephone Room' THEN 'Plaster TR'\r\n            WHEN Type_of_work = 'Screed' AND sclicer = 'Telephone Room' THEN 'Screed TR'\r\n            WHEN Type_of_work = 'Signage' AND sclicer = 'Telephone Room' THEN 'Signage TR'\r\n            WHEN Type_of_work = 'Skirting' AND sclicer = 'Telephone Room' THEN 'Skirting TR'\r\n            WHEN Type_of_work = 'Threshold' AND sclicer = 'Telephone Room' THEN 'Threshold TR'\r\n            WHEN Type_of_work = 'Wall First Coat Paint' AND sclicer = 'Telephone Room' THEN 'Wall First Coat Paint TR'\r\n            WHEN Type_of_work = 'Wall MEP Services Packing' AND sclicer = 'Telephone Room' THEN 'Wall MEP Services Packing TR'\r\n            WHEN Type_of_work = 'Wall Stucco (1st and 2nd Coat)' AND sclicer = 'Telephone Room' THEN 'Wall Stucco (1st and 2nd Coat) TR'\r\n            WHEN Type_of_work = 'Blockwork' AND sclicer = 'Water Meter Room' THEN 'Blockwork WMR'\r\n            WHEN Type_of_work = 'Blockwork Layout' AND sclicer = 'Water Meter Room' THEN 'Blockwork Layout WMR'\r\n            WHEN Type_of_work = 'Bore Packing' AND sclicer = 'Water Meter Room' THEN 'Bore Packing WMR'\r\n            WHEN Type_of_work = 'Ceiling Primer' AND sclicer = 'Water Meter Room' THEN 'Ceiling Primer WMR'\r\n            WHEN Type_of_work = 'Ceiling Stucco (1st and 2nd Coat)' AND sclicer = 'Water Meter Room' THEN 'Ceiling Stucco (1st and 2nd Coat) WMR'\r\n            WHEN Type_of_work = 'Core Cutting & Chipping' AND sclicer = 'Water Meter Room' THEN 'Core Cutting & Chipping WMR'\r\n            WHEN Type_of_work = 'Cutting & Chasing of Blockwork' AND sclicer = 'Water Meter Room' THEN 'Cutting & Chasing of Blockwork WMR'\r\n            WHEN Type_of_work = 'Door-Architrave Installation' AND sclicer = 'Water Meter Room' THEN 'Door-Architrave Installation WMR'\r\n            WHEN Type_of_work = 'Door-Frame Installation' AND sclicer = 'Water Meter Room' THEN 'Door-Frame Installation WMR'\r\n            WHEN Type_of_work = 'Door-Ironmongery Installation' AND sclicer = 'Water Meter Room' THEN 'Door-Ironmongery Installation WMR'\r\n            WHEN Type_of_work = 'Door-Shutter Installation' AND sclicer = 'Water Meter Room' THEN 'Door-Shutter Installation WMR'\r\n            WHEN Type_of_work = 'Door-Silicone' AND sclicer = 'Water Meter Room' THEN 'Door-Silicone WMR'\r\n            WHEN Type_of_work = 'Epoxy Bug Fill' AND sclicer = 'Water Meter Room' THEN 'Epoxy Bug Fill WMR'\r\n            WHEN Type_of_work = 'Epoxy Final Coat' AND sclicer = 'Water Meter Room' THEN 'Epoxy Final Coat WMR'\r\n            WHEN Type_of_work = 'Epoxy First Coat' AND sclicer = 'Water Meter Room' THEN 'Epoxy First Coat WMR'\r\n            WHEN Type_of_work = 'Epoxy Grinding' AND sclicer = 'Water Meter Room' THEN 'Epoxy Grinding WMR'\r\n            WHEN Type_of_work = 'Epoxy Primer' AND sclicer = 'Water Meter Room' THEN 'Epoxy Primer WMR'\r\n            WHEN Type_of_work = 'False Ceiling Boarding' AND sclicer = 'Water Meter Room' THEN 'False Ceiling Boarding WMR'\r\n            WHEN Type_of_work = 'False Ceiling Framing' AND sclicer = 'Water Meter Room' THEN 'False Ceiling Framing WMR'\r\n            WHEN Type_of_work = 'Fire Sealant Works' AND sclicer = 'Water Meter Room' THEN 'Fire Sealant Works WMR'\r\n            WHEN Type_of_work = 'Floor Tile' AND sclicer = 'Water Meter Room' THEN 'Floor Tile WMR'\r\n            WHEN Type_of_work = 'Grouting' AND sclicer = 'Water Meter Room' THEN 'Grouting WMR'\r\n            WHEN Type_of_work = 'MEP Boarding Clearance' AND sclicer = 'Water Meter Room' THEN 'MEP Boarding Clearance WMR'\r\n            WHEN Type_of_work = 'MEP Framing Clearance' AND sclicer = 'Water Meter Room' THEN 'MEP Framing Clearance WMR'\r\n            WHEN Type_of_work = 'MEP Marking for Builders Work' AND sclicer = 'Water Meter Room' THEN 'MEP Marking for Builders Work WMR'\r\n            WHEN Type_of_work = 'MEP Services Installation' AND sclicer = 'Water Meter Room' THEN 'MEP Services Installation WMR'\r\n            WHEN Type_of_work = 'MEP Sleeve Installation' AND sclicer = 'Water Meter Room' THEN 'MEP Sleeve Installation WMR'\r\n            WHEN Type_of_work = 'Plaster' AND sclicer = 'Water Meter Room' THEN 'Plaster WMR'\r\n            WHEN Type_of_work = 'POP Works' AND sclicer = 'Water Meter Room' THEN 'POP Works WMR'\r\n            WHEN Type_of_work = 'Screed' AND sclicer = 'Water Meter Room' THEN 'Screed WMR'\r\n            WHEN Type_of_work = 'Skirting' AND sclicer = 'Water Meter Room' THEN 'Skirting WMR'\r\n            WHEN Type_of_work = 'Threshold' AND sclicer = 'Water Meter Room' THEN 'Threshold WMR'\r\n            WHEN Type_of_work = 'Wall First Coat Paint' AND sclicer = 'Water Meter Room' THEN 'Wall First Coat Paint WMR'\r\n            WHEN Type_of_work = 'Wall MEP Services Packing' AND sclicer = 'Water Meter Room' THEN 'Wall MEP Services Packing WMR'\r\n            WHEN Type_of_work = 'Wall Primer' AND sclicer = 'Water Meter Room' THEN 'Wall Primer WMR'\r\n            WHEN Type_of_work = 'Wall Stucco (1st and 2nd Coat)' AND sclicer = 'Water Meter Room' THEN 'Wall Stucco (1st and 2nd Coat) WMR'\r\n             ELSE Type_of_work\r\n        END AS Type_of_work,\r\n        O_LEVEL_MAP_ALL.level_map,\r\n        CASE        \r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Blockwork') THEN  1\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Builders Work') THEN  2\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('MEP') THEN  16\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Plaster') THEN  3\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Screed') THEN  5\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Paint') THEN  8\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Gypsum') THEN  6\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Marble') THEN  10\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Tile') THEN  9\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Joinery') THEN  12\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Signage') THEN  7\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('SFD') THEN  15\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Epoxy') THEN  11\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Specialist Services') THEN  13\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Waterproofing')THEN  4\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Specialist System')THEN  14\r\n            ELSE 20\r\n        END AS CATEGORY_MAP\r\n    FROM UNION_ALL \r\n        LEFT JOIN O_LEVEL_MAP_ALL ON UNION_ALL.`Level` = O_LEVEL_MAP_ALL.`level`;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-01T12:15:50Z"
			},
			"dependsOn": []
		}
	]
}