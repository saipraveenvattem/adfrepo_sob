{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-sobha-prod-uaen-001"
		},
		"Attendance_Nexgen_Checkinout_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Attendance_Nexgen_Checkinout'"
		},
		"Attendance_Server_Nex_gen_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Attendance_Server_Nex_gen'"
		},
		"LS_AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AzureDataLakeStorage'"
		},
		"LS_AzureSqlMI_SRC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSqlMI_SRC'"
		},
		"LS_AzureSynapseAnalytics_DW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSynapseAnalytics_DW'"
		},
		"LS_Azure_MySQL_DL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Azure_MySQL_DL'"
		},
		"LS_Azure_MySQL_FL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Azure_MySQL_FL'"
		},
		"NexgenLocalUserinfo_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'NexgenLocalUserinfo'"
		},
		"Nexgen_Local_Premise_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Nexgen_Local_Premise'"
		},
		"Sobha_Azure_Attendance_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Sobha_Azure_Attendance'"
		},
		"Sobha_PG_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Sobha_PG_DB'"
		},
		"LS_AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sobhadatalakestorage01.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BusinessPlan_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_BUSSINESS_PLAN_1_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_BUSSINESS_PLAN_1_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BusinessPlan_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_BUSSINESS_PLAN_1_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_BUSINESS_PLN_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-22T10:47:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_BUSSINESS_PLAN_1_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_BUSINESS_PLN_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Checkinout_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CHECKINOUT_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SA_FACT_CHECKINOUT_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CHECKINOUT_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CHECKINOUT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SA_FACT_CHECKINOUT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-15T04:19:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SA_FACT_CHECKINOUT_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SA_FACT_CHECKINOUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Corridor_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Corridore_Map_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_CORRIDOR_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Corridore_Raw_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Corridore_Map_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_CORRIDOR_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Corridore_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Corridore_Raw_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_CORRIDOR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Project_Progress_summary",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Corridore_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_PROJECT_PROGRESS_SUMMARY_FACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T10:05:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_CORRIDOR_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_CORRIDOR_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_CORRIDOR')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_PROJECT_PROGRESS_SUMMARY_FACT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Critical_Issue_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_CRITICAL_ISSUE_TRACKER_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_CRITICAL_ISSUE_TRACKER_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLN_CRITICAL_ISSUE_TRACKER_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_CRITICAL_ISSUE_TRACKER_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_CRITICAL_ISSUE_TRACKER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T08:37:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_CRITICAL_ISSUE_TRACKER_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_CRITICAL_ISSUE_TRACKER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROJECTSNEWSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PROJECTS_NEW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OLEVELMAPALLSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_Level_Map_all_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PROJECTSSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PROJECTS_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OSBUMAPPINGSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_Sbu_Mapping_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PGPLANGRIDCLUSTERMAPPINGSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_Plangrid_Cluster_Mapping_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PGPLANGRIDMAPPINGSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_Plangrid_Mapping_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PGPLANGRIDPROJECTSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_PLANGRID_PROJECT_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PGPROJECTMASTERSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_Project_Master_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SADIMUSERINFOSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SA_DIM_USERINFO_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SAMANPOWERMASTERSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SA_MANPOWER_MASTER_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PROJECTSNEWDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PROJECTSNEWSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PROJECTS_NEW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNLEVELMAPALLDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OLEVELMAPALLSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_LEVEL_MAP_ALL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNPROJECTSDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PROJECTSSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_PROJECTS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNSBUMAPPINGDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OSBUMAPPINGSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_SBU_MAPPING",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PGPlangridClusterMappingDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PGPLANGRIDCLUSTERMAPPINGSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_Plangrid_Cluster_Mapping",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PGPLANGRIDMAPPINGDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PGPLANGRIDMAPPINGSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_PLANGRID_MAPPING",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PGPLANGRIDPROJECTDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PGPLANGRIDPROJECTSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ PG_Plangrid_Project_DIM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PGPROJECTMASTERDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PGPROJECTMASTERSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_PROJECT_MASTER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SADIMUSERINFODIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SADIMUSERINFOSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SA_DIM_USERINFO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SAMANPOWERMASTERDIM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SAMANPOWERMASTERSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SA_MANPOWER_MASTER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-10T11:13:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_PROJECTS_NEW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_Level_Map_all_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PROJECTS_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_Sbu_Mapping_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PG_Plangrid_Cluster_Mapping_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PG_Plangrid_Mapping_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PG_PLANGRID_PROJECT_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PG_Project_Master_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SA_DIM_USERINFO_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SA_MANPOWER_MASTER_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PROJECTS_NEW')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_LEVEL_MAP_ALL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_PROJECTS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_SBU_MAPPING')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PG_Plangrid_Cluster_Mapping')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PG_PLANGRID_MAPPING')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ PG_Plangrid_Project_DIM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PG_PROJECT_MASTER')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SA_DIM_USERINFO')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SA_MANPOWER_MASTER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DoorDelivery_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Door_deivery_Raw_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_DOOR_DELIVERY_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Door_Delivery_M",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Door_deivery_Raw_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DOOR_DELIVERY_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T05:32:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_DOOR_DELIVERY_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DOOR_DELIVERY_M')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Drawing_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DRAWING_DETAIL_DRAW_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_DRAWING_DETAIL_DRAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLN_ENGINEERING_DRAWING_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_DRAWING_DETAIL_DRAW_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_ENGINEERING_DRAWING",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T12:28:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_DRAWING_DETAIL_DRAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_ENGINEERING_DRAWING')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/F_PLN_PROJECTION_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "F_PLN_PROJECTION",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[F_PLN_PROJECTION_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Upload_Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Upload_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Project Sclicer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Sclicer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Projection for the month",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Projection_for_the_month",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Yesterday",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Yesterday",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Plan_Yesterday",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Plan_Yesterday",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Plan as on date",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Plan_as_on_date",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Actual_Yesterday",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Actual_Yesterday",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Actual as on date",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Actual_as_on_date",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Shortfall Reasons",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shortfall_Reasons",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_Custom_Sort",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBU_Custom_Sort",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Achived",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Achived",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Achived_90",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Achived_90",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_F_PLN_PROJECTION_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_F_PLN_PROJECTION_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T11:02:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_F_PLN_PROJECTION_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_F_PLN_PROJECTION_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Flatfinishes_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dryarea_Raw_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_DRYAREA_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Dryarea_Map_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Dryarea_Raw_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_DRYAREA_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wetarea_Raw _STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_WETAREA_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wetarea_Map_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wetarea_Raw _STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_WETAREA_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Balconyarea_Raw_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_BALCONYAREA_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Kitchenarea_Map_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Kitchenarea_Raw_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_KITCHENAREA_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Balconyarea_Map_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Balconyarea_Raw_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_BALCONYAREA_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Kitchenarea_Raw_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_KITCHENAREA_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DryArea_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Dryarea_Map_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_DRYAREA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "WetArea_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wetarea_Map_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_WETAREA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Balconyarea",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Balconyarea_Map_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_BALCONYAREA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Kitchenarea_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Kitchenarea_Map_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_KITCHENAREA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Flatfinishes_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DryArea_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WetArea_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Balconyarea",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Kitchenarea_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_FLATFINISHES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-10T13:33:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_DRYAREA_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_DRYAREA_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_WETAREA_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_WETAREA_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_BALCONYAREA_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_KITCHENAREA_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_BALCONYAREA_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_KITCHENAREA_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_DRYAREA')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_WETAREA')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_BALCONYAREA')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_KITCHENAREA')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_FLATFINISHES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GaantHurry_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_TOWER_PODIUM_MAP_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_TOWER_PODIUM_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLN_GAANT_HURRY_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_TOWER_PODIUM_MAP_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GAANT_HURRY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T09:02:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_TOWER_PODIUM_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_GAANT_HURRY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeepOut_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Keepout_Map_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_KEEPOUTS_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "KeepOut_Raw",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_KEEPOUT_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Keepout_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "KeepOut_Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Keepout_Map_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_KEEPOUT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T07:52:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_KEEPOUTS_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_KEEPOUT_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_KEEPOUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Manpower_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MANPOWER_MERGE_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MANPOWER_MERGE_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "O_PLN_SUBCONTRACTOR_MANPOWER_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_SUBCONTRACTOR_MANPOWER_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLN_MANPOWER_MERGE_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MANPOWER_MERGE_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_MANPOWER_MERGE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLN_SUBCONTRACTOR_MANPOWER_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_SUBCONTRACTOR_MANPOWER_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_SUBCONTRACTOR_MANPOWER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T09:41:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_MANPOWER_MERGE_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_SUBCONTRACTOR_MANPOWER_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_MANPOWER_MERGE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_SUBCONTRACTOR_MANPOWER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Milestone_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_MILESTONE_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_MILESTONE_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "O_PLN_MILESTONE_MAP_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_MILESTONE_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_MILESTONE_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "O_PLN_MILESTONE_ACTUALS_TEMP_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_MILESTONE_MAP_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "O_PLN_MILESTONE_ACTUALS_TEMP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLN_MILESTONE_ACTUALS_TEMP_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_MILESTONE_ACTUALS_TEMP_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_MILESTONE_ACTUALS_TEMP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T08:27:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_MILESTONE_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_MILESTONE_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/O_PLN_MILESTONE_ACTUALS_TEMP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_MILESTONE_ACTUALS_TEMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NexgenLocal_Azure_Checkinout')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on premise SQL Server to SQL Azure.\n\nYou can also go to \"Copy Data Tool\" to get the pipeline for more connectors and scenarios.",
				"activities": [
					{
						"name": "SQL_to_SQLAzure",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Usp_SCL_Manpower_Department__checkinout_Data]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Nexgen_Local_Checkinout",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZCheckinout",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-02T13:45:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Nexgen_Local_Checkinout')]",
				"[concat(variables('factoryId'), '/datasets/AZCheckinout')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NexgenLocal_Azure_Userinfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on premise SQL Server to SQL Azure.\n\nYou can also go to \"Copy Data Tool\" to get the pipeline for more connectors and scenarios.",
				"activities": [
					{
						"name": "SQL_to_SQLAzure",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Usp_SCL_Manpower_Department_Data]",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Nexgen_Local",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZuserinfo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-02T13:45:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Nexgen_Local')]",
				"[concat(variables('factoryId'), '/datasets/AZuserinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/O_PLN_MILESTONE_ACTUALS_TEMP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_MILESTONE_ACTUALS_TEMP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_MILESTONE_ACTUALS_TEMP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Milestone_Actuals_Temp_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual %",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_Percentage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T10:36:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ PG_Plangrid_Project_DIM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Plangrid_Project_DIM",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PG_PROJECT_MASTER",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T13:19:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PG_PROJECT_MASTER')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DOOR_DELIVERY_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DOOR DELIVERY M",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DOOR_DELIVERY_M",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-10T10:21:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DOOR_DELIVERY_M')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DT_CATEGORY_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DT_CATEGORY_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[DT_CATEGORY_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Category_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "category_name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "category_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DT_CATEGORY_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DT_CATEGORY_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T13:05:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DT_CATEGORY_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_DT_CATEGORY_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DT_DEPARTMENT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DT_DEPARTMENT_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[DT_DEPARTMENT_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "DEPARTMENT_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "department_name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Department_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Created_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DT_DEPARTMENT_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DT_DEPARTMENT_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T13:10:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DT_DEPARTMENT_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_DT_DEPARTMENT_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DT_DRAWING_TRACKER_HEADER_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DRAWING_TRACKER_HEADER",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[DT_DRAWING_TRACKER_HEADER_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "DRAWING_TRACKER_HEADER_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "drawing_number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "drawing_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "drawing_title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "drawing_title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "project_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "subcategory_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "subcategory_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "scheduled_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "scheduled_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "pnca_committed_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "pnca_committed_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "actual_received_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "actual_received_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "last_revision_title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "last_revision_title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "revision_count",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "revision_count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "remarks",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "remarks",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "priority",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "priority",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DT_DRAWING_TRACKER_HEADER_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DT_DRAWING_TRACKER_HEADER_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T13:01:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DT_DRAWING_TRACKER_HEADER_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_DT_DRAWING_TRACKER_HEADER_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DT_PROJECT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DT_PROJECT_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[DT_PROJECT_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "PROJECT_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "project_name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "project_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DT_PROJECT_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DT_PROJECT_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T13:03:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DT_PROJECT_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_DT_PROJECT_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DT_RFIS_SUBMITTALS_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DT_RFIS_SUBMITTALS_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[DT_RFIS_SUBMITTALS_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "RFIS_SUBMITTALS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Project_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "department_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Department_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "submittion_type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Submittion_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "submittal_ref_no",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Submittal_ref_no",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "submittal_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Submittal_desc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "submitted_on",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Submitted_on",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "pnca_commitment_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Pnca_commitment_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "pnca_commitment",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Pnca_commitment",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "response_required_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Response_required_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "delays",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Delays",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "actual_received_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Actual_received_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "plangrid_link",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Plangrid_link",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pending_with",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Pending_with",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "pending_status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Pending_status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "reassigned_to",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Reassigned_to",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "reassigned_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Reassigned_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "reassigned_by",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Reassigned_by",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "closed_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Closed_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "closed_by",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Closed_by",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "remarks",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Remarks",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Created_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DT_RFIS_SUBMITTALS_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DT_RFIS_SUBMITTALS_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T13:12:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DT_RFIS_SUBMITTALS_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_DT_RFIS_SUBMITTALS_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DT_SUBCATEGORY_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DT_SUBCATEGORY_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[DT_SUBCATEGORY_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Subcategory_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "subcategory_name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Subcategory_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Category_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated_at",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "created_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Created_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Updated_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DT_SUBCATEGORY_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DT_SUBCATEGORY_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T13:08:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DT_SUBCATEGORY_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_DT_SUBCATEGORY_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EXECUTIVE_SUMMARY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_EXECUTIVE_SUMMARY",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-20T05:24:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_EXECUTIVE_SUMMARY')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GAANT_HURRY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GAANT HURRY",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Gaant_Hurry",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"MILESTONEMAINTABLE": {},
									"DRYAREAGAANTFINAL": {},
									"WETAREAGAANTFINAL": {},
									"CORRIDORGAANTFINAL": {},
									"KITCHENGAANTFINAL": {},
									"BALCONYGAANTFINAL": {},
									"SLIDINGDOORGAANTFINAL": {},
									"KITCHENCABINETGAANTFINAL": {},
									"KEEPOUTGAANTFINAL": {},
									"BLOCKWORKGAANTFINAL": {},
									"BALUSTRADEWORKSGAANTFINAL": {},
									"STRUCTUREGAANTFINAL": {},
									"PLNPROJECTSDIM": {},
									"MILESTONEMAINTABLEPlan": {},
									"ManualActuals": {},
									"OPLNMILESTONEMAPSTG": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"sourceStagingConcurrency": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-07T06:51:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Gaant_Hurry')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MANPOWER_MERGE_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table [STG].[MANPOWER_MERGE_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SL NO",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SL_NO",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EMP ID NO.",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMP_ID_NO",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TECHNICIAN NAME",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TECHNICIAN_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTUAL DOJ",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTUAL_DOJ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRADE AS PER ADMIN",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRADE_AS_PER_ADMIN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRADE GROUP",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRADE_GROUP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WORK STATUS/COST HEAD",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WORK_STATUS_COST_HEAD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DIVISION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DIVISION",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UNIT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UNIT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WORK STATUS",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WORK_STATUS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SHIFT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SHIFT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COMPANY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "COMPANY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SOURCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SOURCE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Emp_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Emp_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Login_Time",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Login_Time",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_MANPOWER_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MANPOWER_MERGE_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T08:31:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MANPOWER_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_MANPOWER_MERGE_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_Level_Map_all_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_Level_Map_All",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_LEVEL_MAP_ALL_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "level_map",
											"physicalType": "int"
										},
										"sink": {
											"name": "LEVEL_MAP_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LEVEL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_LEVEL_MAP_ALL_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_LEVEL_MAP_ALL_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:55:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_LEVEL_MAP_ALL_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_LEVEL_MAP_ALL_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLAN_BUSINESS_PLN_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BusinessPLn",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_BUSINESS_PLAN_RAW_STG",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"physicalType": "int"
										},
										"sink": {
											"name": "BUSINESS_PLAN_STG_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sl. No",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sl_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total Revenue (BOQ)",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Total_Revenue_BOQ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Achieved Revenue (Till 2021)",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Achieved_Revenue_Till_2021",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balance Revenue to Execute (From 2022)",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balance_Revenue_to_Execute_From_2022",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Jan-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Jan_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Feb-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Feb_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mar-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Mar_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Apr-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Apr_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "May-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "May_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Jun-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Jun_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Jul-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Jul_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Aug-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Aug_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sep-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sep_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Oct-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Oct_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Nov-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nov_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dec-22",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dec_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Total",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_BUSINESS_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_BUSINESS_RAW_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-22T09:15:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BUSINESS_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BUSINESS_RAW_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_BALCONYAREA_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_BALCONYAREA_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_BALCONYAREA_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BALCONYAREA_MAP_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_BALCONYAREA_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_BALCONYAREA_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T10:32:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BALCONYAREA_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BALCONYAREA_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_BALCONYAREA_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_BALCONYAREA_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_BALCONYAREA_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BALCONYAREA_RAW_id_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Flat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Flat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Marking for Rain Water Pipe",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Marking_for_Rain_Water_Pipe",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rain water pipe",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rain_water_pipe",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rain Water Pipe Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rain_Water_Pipe_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "F channel Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F_channel_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Non Shrink Grout",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Non_Shrink_Grout",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Top Rail Bracket Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Top_Rail_Bracket_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EIFS Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EIFS_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony EIFS Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_EIFS_Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grinding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grinding_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Skim Coat & Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Skim_Coat_and_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drain Fixing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drain_Fixing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Balcony Box Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Balcony_Box_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Left Over Screed (If any)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Left_Over_Screed_If_any",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EIFS Wall Texture",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EIFS_Wall_Texture",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balustrade Glass Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balustrade_Glass_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balustrade Top Rail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balustrade_Top_Rail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Under Tile Water Proofing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Under_Tile_Water_Proofing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Floor Tiling",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Floor_Tiling",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balustrade - Internal Flashing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balustrade_Internal_Flashing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Metal Ceiling",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Metal_Ceiling",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Ceiling Texture",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Ceiling_Texture",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Complete Wall Texture",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Complete_Wall_Texture",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Grouting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Grouting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony MEP Final Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_MEP_Final_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balcony Drain Cover Supply",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balcony_Drain_Cover_Supply",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cover fixing for balcony drain",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cover_Fixing_For_Balcony_Drain",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cover plate B/W ACP & EIFS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cover_plate_BW_ACP_and_EIFS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_BALCONYAREA_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_BALCONYAREA_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T12:52:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BALCONYAREA_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BALCONYAREA_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_BUSINESS_PLN_1_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Business_Pln_1_Raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate table STG.O_PLN_BUSINESS_PLAN_1_RAW_STG",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sl. No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sl_No",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total Revenue (BOQ)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Total_Revenue_BOQ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Achieved Revenue (Till 2022)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Achieved_Revenue_Till_2022",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Balance Revenue to Execute (From 2023)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Balance_Revenue_to_Execute_From_2023",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Jan-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Jan_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Feb-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Feb_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mar-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Mar_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Apr-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Apr_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "May-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "May_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Jun-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Jun_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Jul-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Jul_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Aug-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Aug_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sep-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sep_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Oct-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Oct_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Nov-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nov_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dec-23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dec_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Total",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_BUSINESS_PLN_1_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_BUSINESS_PLN_1_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-17T12:32:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BUSINESS_PLN_1_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BUSINESS_PLN_1_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_BUSSINESS_PLAN_1_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BUSINESS Plan",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate table [STG].[O_PLN_BUSINESS_PLAN_1_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Upload_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Upload_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "value",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DENSE_RANK",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "DENSE_RANK",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "sbu_sort",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "sbu_sort",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "month_sort",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "month_sort",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "year_sort",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "year_sort",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Cummulative",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "Cummulative",
											"type": "Single",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_BUSINESS_PLAN_1_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_BUSINESS_PLAN_1_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-20T13:07:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BUSINESS_PLAN_1_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BUSINESS_PLAN_1_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_CORRIDOR_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_CORRIDOR_MAP_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_CORRIDOR_MAP_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Corridor_Map_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Activity_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_CORRIDOR_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_CORRIDOR_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T12:08:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_CORRIDOR_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_CORRIDOR_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_CORRIDOR_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_CORRIDOR_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_CORRIDOR_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Corridor_Raw_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Sd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor MEP Marking for Builders Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_MEP_Marking_for_Builders_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Cutting & Chasing of Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Cutting_and_Chasing_of_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor MEP Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_MEP_Services_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Wall MEP Services Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Wall_MEP_Services_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grinding Clearance for Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grinding_Clearance_for_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tile Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tile_Marking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bull Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bull_Marking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Electrical Conduits",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Electrical_Conduits",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cold water supply",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cold_water_supply",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Fighting Pipe Support",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Fighting_Pipe_Support",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Modular Instalation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Modular_Instalation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Framing Clearance by MEP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Framing_Clearance_by_MEP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Center line marking for Facade Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Center_line_marking_for_Facade_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Curtain Wall Box Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Curtain_Wall_Box_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Curtain Wall Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Curtain_Wall_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Curtain Wall Glass Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Curtain_Wall_Glass_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Curtain Wall Flashing Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Curtain_Wall_Flashing_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Floor Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Floor_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Wall Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Wall_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Hose Reel Cabinet Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Hose_Reel_Cabinet_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grouting for Framing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grouting_for_Framing_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor FC Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_FC_Framing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Access Panel Markings & Inspection",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Access_Panel_Markings_and_Inspection",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Works for Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Works_for_Boarding_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Framing Levelling",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Framing_Levelling",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor FC Boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_FC_Boarding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Joint Taping & Sanding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Joint_Taping_and_Sanding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Ceiling Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Ceiling_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Ceiling Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Ceiling_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Ceiling First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Ceiling_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Grouting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Grouting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Left over Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Left_over_Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Left Over Area Floor Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Left_Over_Area_Floor_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Left Over Area Wall Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Left_Over_Area_Wall_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Remaining Grout and Silicone Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Remaining_Grout_and_Silicone_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor MEP Final Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_MEP_Final_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corridor Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corridor_Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_CORRIDOR_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_CORRIDOR_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T12:52:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_CORRIDOR_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_CORRIDOR_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_CRITICAL_ISSUE_TRACKER_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_CRITICAL_ISSUE_TRACKER_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_CRITICAL_ISSUE_TRACKER_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Critical_Issue_Tracker_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sl No.",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sl_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Reference Number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reference_Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PR / PO / Other Ref No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PR_PO_Other_Ref_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Raised On",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Raised_On",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU (Issue Raised by)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_Issue_Raised_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Issue Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Issue_Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Pending With",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Pending_With",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Current Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Current_Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Impact On",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Impact_On",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Target Closure Date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Target_Closure_Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual Closure Date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_Closure_Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_CRITICAL_ISSUE_TRACKER_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_CRITICAL_ISSUE_TRACKER_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T08:06:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_CRITICAL_ISSUE_TRACKER_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_CRITICAL_ISSUE_TRACKER_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_DOORMANPOWER_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DOORMANPOWER_MAP_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_DOORMANPOWER_MAP_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "O_PLN_DOORMANPOWER_MAP_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC_Short",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_DOORMANPOWER_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_DOORMANPOWER_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T13:09:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOORMANPOWER_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOORMANPOWER_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_DOOR_DELIVERY_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DOOR_DELIVERY_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_DOOR_DELIVERY_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Door_Delivery_Raw_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sr. No.",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sr_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Building",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Building",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Delivery Order No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Delivery_Order_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Delivery Date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Delivery_Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Element",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Element",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Rating",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Rating",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Orientation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Orientation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Quantity (Sets)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quantity_Sets",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Quantity (Nos)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quantity_Nos",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Remarks",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Remarks",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vendor",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vendor",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_DOOR_DELIVERY_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:05:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOOR_DELIVERY_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_DOOR_INSTALLATION_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DOOR_INSTALLATION_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_DOOR_INSTALLATION_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Door_Installation_Raw_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sr. No.",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sr_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Building",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Building",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Flat No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Flat_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Flat No_A",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Flat_No_A",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Jamb Width",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Jamb_Width",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Orientation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Orientation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Rating",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Rating",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Frame",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Frame",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Foam",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Foam",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Architrave",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Architrave",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Shutter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shutter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ironmongery",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ironmongery",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Installer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Installer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vendor",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vendor",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_DOOR_INSTALLATION_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_DOOR_INSTALLATION_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-20T18:22:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOOR_INSTALLATION_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOOR_INSTALLATION_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_DOOR_MANPOWER_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DOOR_MANPOWER_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_DOOR_MANPOWER_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "O_PLN_DOOR_MANPOWER_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC6",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC7",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC8",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC9",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC10",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC11",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC11",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC12",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC12",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC13",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC13",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC14",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC14",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC15",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC15",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC16",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC16",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC17",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC17",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC18",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC18",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC19",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC19",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SC20",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SC20",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Total",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_DOOR_MANPOWER_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_DOOR_MANPOWER_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T13:03:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOOR_MANPOWER_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOOR_MANPOWER_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_DRAWING_DETAIL_DRAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DRAWING_DETAIL_DRAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_DRAWING_DETAIL_DRAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "O_Pln_Drawing_Detail_Draw_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sl.No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sl.No",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Villa Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Villa Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Drawing Number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Drawing Title",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing Title",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Scheduled Date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Scheduled Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PNCA commitment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PNCA commitment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R0",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R0",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R0-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R0-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R1-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R1-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R2-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R2-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R3-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R3-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R4-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R4-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R5",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R5-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R5-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R6",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R6",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R6-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R6-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R7",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R7",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R7-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R7-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R8",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R8",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R8-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R8-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R9",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R9",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R9-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R9-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R10",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R10-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R10-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R11",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R11",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R11-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R11-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R12",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R12",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R12-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R12-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R13",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R13",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R13-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R13-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R14",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R14",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R14-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R14-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R15",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R15",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R15-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R15-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R16",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R16",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R16-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R16-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R17",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R17",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R17-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R17-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R18",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R18",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R18-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R18-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R19",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R19",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R19-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R19-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R20",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R20",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R20-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R20-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R21",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R21",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R21-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R21-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R22",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R22",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R22-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R22-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R23",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R23-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R23-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R24",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R24",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R24-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R24-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R25",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R25",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "R25-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "R25-Trans_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_DRAWING_DETAIL_DRAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_DRAWING_DETAIL_DRAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:06:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DRAWING_DETAIL_DRAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DRAWING_DETAIL_DRAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_DRYAREA_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DRYAREA_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_DRYAREA_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DRYAREA_MAP_id_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_DRYAREA_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_DRYAREA_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-22T06:56:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DRYAREA_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DRYAREA_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_DRYAREA_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DRYAREA_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_DRYAREA_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DryArea_Raw_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Flat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Flat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HSE Clearance for Deshuttering",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HSE_Clearance_for_Deshuttering",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Riser Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Riser_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LPG Pipe",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LPG_Pipe",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork Layout Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork_Layout_Marking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork First Layer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork_First_Layer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork with 1mtr marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork_with_1mtr_marking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GI Lintel",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GI_Lintel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RCC Lintel / Stiffener",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RCC_Lintel_Stiffener",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Above Lintel Block Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Above_Lintel_Block_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Head Restraints Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Head_Restraints_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Sealant Works & PU Foam Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Sealant_Works_and_PU_Foam_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking for HL Builders Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking_for_HL_Builders_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork Cutting for MEP Services",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork_Cutting_for_MEP_Services",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Wall Marking for Cutting & Chasing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Wall_Marking_for_Cutting_and_Chasing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bull Marking for Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bull_Marking_for_Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Frame",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Frame",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Corner Bead Fixing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Corner_Bead_Fixing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cutting & Chasing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cutting_And_Chasing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Plastering Clearance (Box fixing & Pipe setting)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Plastering_Clearance_Box_fixing_and_Pipe_setting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ONU, DB & All MEP works Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ONU_DB_And_All_MEP_works_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ONU, DB & All MEP works Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ONU_DB_And_All_MEP_works_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plastering Clearance with 1 Meter Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plastering_Clearance_with_1_Meter_Marking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Center line marking for Facade Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Center_line_marking_for_Facade_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UCW-Starter Gutter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UCW_Starter_Gutter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UCW-Brackets",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UCW_Brackets",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UCW-Panels",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UCW_Panels",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UCW-Alignment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UCW_Alignment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Tile Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Tile_Marking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Bore Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Bore_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed Curing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed_Curing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Primer,Stucco banding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Primer_Stucco_banding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bulk Head",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bulk_Head",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP H/L Wiring",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_H_L_Wiring",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP H/L Framing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_H_L_Framing_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Sealant works around ducts",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Sealant_works_around_ducts",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area FC Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_FC_Framing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wardrobe Nib wall",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wardrobe_Nib_wall",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP H/L Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_H_L_Boarding_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FC Boarding with Joint Taping",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FC_Boarding_with_Joint_Taping",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Primer Ceiling",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Primer_Ceiling",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stucco 1st Coat Ceiling",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Stucco_1st_Coat_Ceiling",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stucco 2nd Coat Ceiling",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Stucco_2nd_Coat_Ceiling",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "First Coat Paint Ceiling",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "First_Coat_Paint_Ceiling",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Main Door Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Main_Door_Threshold",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Floor Tiling",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Floor_Tiling",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP Above Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP_Above_Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Hinge Door Box Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Hinge_Door_Box_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed near Hinge Door",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed_near_Hinge_Door",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Hinge Door Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Hinge_Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Curtain Wall Box Section",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Curtain_Wall_Box_Section",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Curtain Wall Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Curtain_Wall_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Curtain Wall Glass Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Curtain_Wall_Glass_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UCW-GI Sheet Installation - Wall",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UCW_GI_Sheet_Installation_Wall",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UCW-GI Sheet Installation - Floor",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UCW_GI_Sheet_Installation_Floor",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed near Curtain Wall",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed_near_Curtain_Wall",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sliding Door Box Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sliding_Door_Box_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sliding Door Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sliding_Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed near Sliding Door",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed_near_Sliding_Door",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Left Over Tile Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Left_Over_Tile_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Left Over Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Left_Over_Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tile Grouting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tile_Grouting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tile Silicone Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tile_Silicone_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Curtain Wall Mullion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Curtain_Wall_Mullion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Curtain Wall Flashing Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Curtain_Wall_Flashing_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Curtain Wall Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Curtain_Wall_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UCW-Firestop and Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UCW_Firestop_and_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UCW-GI Flashing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UCW_GI_Flashing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Hinge Door Glass Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Hinge_Door_Glass_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Hinge Door Internal Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Hinge_Door_Internal_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Hinge Door Alignment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Hinge_Door_Alignment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Hinge Door External Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Hinge_Door_External_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sliding Door Glass Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sliding_Door_Glass_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sliding Door Internal Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sliding_Door_Internal_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sliding Door Alignment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sliding_Door_Alignment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sliding Door External Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sliding_Door_External_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Window Jamb,Corner,Pelmet Area, Shadow Angle POP Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Window_Jamb_Corner_Pelmet_Area_Shadow_Angle_POP_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Stucco 1st Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Stucco_1st_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall stucco 2nd coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_stucco_2nd_coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Paint 1st Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Paint_1st_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Architrave_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Silicone Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Silicone_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cut piece Skirting near Door",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cut_piece_Skirting_near_Door",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gas Meter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gas_Meter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Kitchen Appliances",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Kitchen_Appliances",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wardrobe Carcass Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wardrobe_Carcass_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wardrobe Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wardrobe_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wardrobe Silicone Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wardrobe_Silicone_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cut piece Skirting near Wardrobe",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cut_piece_Skirting_near_Wardrobe",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Air Balancing for FCU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Air_Balancing_for_FCU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FCU Closure Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FCU_Closure_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VCD Closure - FCU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "VCD_Closure_FCU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Air Balancing for FAHU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Air_Balancing_for_FAHU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FAHU Closure Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FAHU_Closure_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VCD Closure - FAHU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "VCD_Closure_FAHU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Fixtures Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Fixtures_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Access Panel Final Coat and Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Access_Panel_Final_Coat_and_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Final Coat Preparation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Final_Coat_Preparation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Thermostat Cover Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Thermostat_Cover_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Intercom Cover Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Intercom_Cover_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ONU & DB Panel Door",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ONU_And_DB_Panel_Door",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Switch socket cover Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Switch_socket_Cover_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_DRYAREA_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_DRYAREA_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T08:15:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DRYAREA_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DRYAREA_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_ELECTRICALROOM_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_ELECTRICALROOM_MAP_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_ELECTRICALROOM_MAP_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Electricalroom_Map_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Activity_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_ELECTRICALROOM_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_ELECTRICALROOM_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:13:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_ELECTRICALROOM_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_ELECTRICALROOM_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_ELECTRICALROOM_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_ELECTRICALROOM_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_ELECTRICALROOM_RAW_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Electricalroom_Raw_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork Layout",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork_Layout",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking for Builders Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking_for_Builders_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cutting & Chasing of Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cutting_and_Chasing_of_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Services_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall MEP Services Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_MEP_Services_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall & Ceiling Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_and_Ceiling_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Meter Board Fixing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Meter_Board_Fixing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Meter Board Painting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Meter_Board_Painting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Installation of cable tray and trunking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Installation_of_cable_tray_and_trunking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Installation of Panels",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Installation_of_Panels",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cable laying and glanding works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cable_laying_and_glanding_works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dressing and termination of SMDB & Panels",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dressing_and_termination_of_SMDB_and_Panels",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bus bar with Tap off Box completion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bus_bar_with_Tap_off_Box_completion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Floor Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Floor_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Architrave_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Grinding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Grinding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Bug Fill",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Bug_Fill",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy First Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_First_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Final Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Final_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Electrical Room Top Boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Electrical_Room_Top_Boarding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Sealant Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Sealant_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Angle Fixing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Angle_Fixing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Shaft Boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shaft_Boarding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grouting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grouting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Signage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Signage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Electric Meter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Electric_Meter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_ELECTRICALROOM_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_ELECTRICALROOM_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:26:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_ELECTRICALROOM_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_ELECTRICALROOM_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_FIRELIFTLOBBY_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_FIRELIFTLOBBY_MAP_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_FIRELIFTLOBBY_MAP_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Fireliftlobby_Map_Id_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Activity_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_FIRELIFTLOBBY_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_FIRELIFTLOBBY_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:26:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_FIRELIFTLOBBY_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_FIRELIFTLOBBY_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_FIRELIFTLOBBY_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_FIRELIFTLOBBY_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_FIRELIFTLOBBY_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Fireliftlobby_Raw_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking for Builders Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking_for_Builders_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cutting & Chasing of Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cutting_and_Chasing_of_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Services_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall MEP Services Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_MEP_Services_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Lift Door Installation & Jamb Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Lift_Door_Installation_and_Jamb_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Beside Lift Door Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Beside_Lift_Door_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Beside Lift Door Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Beside_Lift_Door_Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP High Level Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_High_Level_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FC Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FC_Framing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Boarding_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FC Boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FC_Boarding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Joint Taping and Sanding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Joint_Taping_and_Sanding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Stucco 1st and 2nd Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Stucco 1st and 2nd Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Floor Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Floor_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Architrave_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Grinding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Grinding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Bug Fill",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Bug_Fill",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy First Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_First_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Final Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Final_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grout",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grout",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Signage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Signage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_FIRELIFTLOBBY_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_FIRELIFTLOBBY_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:38:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_FIRELIFTLOBBY_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_FIRELIFTLOBBY_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_GARBAGEROOM_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_GARBAGEROOM_MAP_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_GARBAGEROOM_MAP_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Garbageroom_Map_Id_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Activity_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_GARBAGEROOM_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_GARBAGEROOM_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:38:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_GARBAGEROOM_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_GARBAGEROOM_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_GARBAGEROOM_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_GARBAGEROOM_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_GARBAGEROOM_RAW_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Garbageroom_Raw_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outer Wall Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Outer_Wall_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Garbage chute Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Garbage_chute_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Piping Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Piping_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Pressure test & Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Pressure_test_and_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Inner wall Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Inner_wall_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking for Builders Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking_for_Builders_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cutting & Chasing of Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cutting_and_Chasing_of_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Services_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall MEP Services Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_MEP_Services_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Cutting & Chipping",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Cutting_and_Chipping",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Sleeve Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Sleeve_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bore Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bore_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Under Screed Water Proofing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Under_Screed_Water_Proofing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Framing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Framing_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "False Ceiling Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "False_Ceiling_Framing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Boarding_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "False Ceiling Boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "False_Ceiling_Boarding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Under Tile Water Proofing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Under_Tile_Water_Proofing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Floor Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Floor_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grouting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grouting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Hopper Door",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Hopper_Door",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Architrave_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Signage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Signage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_GARBAGEROOM_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_GARBAGEROOM_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:57:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_GARBAGEROOM_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_GARBAGEROOM_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_KEEPOUTS_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_KEEPOUTS_MAP_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_KEEPOUTS_MAP_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Keepouts_Map_Id_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Activity_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PREDECESSOR_DATA",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Predecessor_Data",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ENGINEER_RESPONSIBLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Engineer_Responsible",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PREDECESSOR_DATA_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Predecessor_Data_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PREDECESSOR_DATA_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Predecessor_Data_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Predecessor_Activity_allowed_lag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Predecessor_Activity_Allowed_Lag",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_KEEPOUTS_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_KEEPOUTS_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T06:15:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUTS_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUTS_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_KEEPOUT_DETAILED_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_KEEPOUT_DETAILED_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_KEEPOUT_DETAILED_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Keepout_Detailed_Raw_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Flat No.",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Flat_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Apartment Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Apartment_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WIR - Final Coat Paint Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WIR_Final_Coat_Paint_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WIR - Final Coat Paint Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WIR_Final_Coat_Paint_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "F6 / F7 Final Coat Paint - Stamp Closure Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F6_F7_Final_Coat_Paint_Stamp_Closure_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "F6 / F7 Final Coat Paint - Stamp Closure Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F6_F7_Final_Coat_Paint_Stamp_Closure_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Deep Cleaning Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Deep_Cleaning_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Deep Cleaning Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Deep_Cleaning_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Stamp Closing Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Stamp_Closing_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Stamp Closing Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Stamp_Closing_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP T&C Stamps Closure Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_T_AND_C_Stamps_Closure_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP T&C Stamps Closure Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_T_AND_C_Stamps_Closure_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "F7 Stamp Closure Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F7_Stamp_Closure_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "F7 Stamp Closure Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F7_Stamp_Closure_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP NOC in Draft / Assign to MEP QC Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_NOC_in_Draft_Assign_to_MEP_QC_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP NOC in Draft / Assign to MEP QC Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_NOC_in_Draft_Assign_to_MEP_QC_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil NOC in Draft / Assign to Civil QC Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_NOC_in_Draft_Assign_to_Civil_QC_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil NOC in Draft / Assign to Civil QC Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_NOC_in_Draft_Assign_to_Civil_QC_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP NOC Submission Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_NOC_Submission_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP NOC Submission Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_NOC_Submission_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CIVIL NOC Submission Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CIVIL_NOC_Submission_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CIVIL NOC Submission Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CIVIL_NOC_Submission_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Field report 1st inspection Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Field_report_1st_inspection_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Field report 1st inspection Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Field_report_1st_inspection_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Field Report assign to MEP Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Field_Report_assign_to_MEP_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Field Report assign to MEP Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Field_Report_assign_to_MEP_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Stamp Field report 1st inspection Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Stamp_Field_report_1st_inspection_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Stamp Field report 1st inspection Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Stamp_Field_report_1st_inspection_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Field report submission Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Field_report_submission_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Field report submission Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Field_report_submission_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil Field report 1st inspection Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_Field_report_1st_inspection_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil Field report 1st inspection Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_Field_report_1st_inspection_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil Field Report Submission Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_Field_Report_Submission_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil Field Report Submission Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_Field_Report_Submission_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SCL Keep-out Stamp (N1) -Into Review Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SCL_Keep_out_Stamp_N1_Into_Review_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SCL Keep-out Stamp (N1) -Into Review Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SCL_Keep_out_Stamp_N1_Into_Review_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PNCA Keep-out (N1) Into Pending Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PNCA_Keep_out_N1_Into_Pending_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PNCA Keep-out (N1) Into Pending Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PNCA_Keep_out_N1_Into_Pending_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QT Inspection Keep-out Stamp (N1) Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QT_Inspection_Keep_out_Stamp_N1_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QT Inspection Keep-out Stamp (N1) Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QT_Inspection_Keep_out_Stamp_N1_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T15:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_KEEPOUT_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_KEEPOUT_MAP_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_KEEPOUT_MAP_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Keepout_Map_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Activity_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_KEEPOUT_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_KEEPOUT_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T21:37:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUT_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUT_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_KEEPOUT_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_KEEPOUT_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_KEEPOUT_RAW_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Keepout_Raw_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Flat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Flat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat Paint - Dry Area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat_Paint_Dry_Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat Paint - Wet Area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat_Paint_Wet_Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Stamp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Stamp - MEP (L8)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Stamp_MEP_L8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Stamp - Civil (L9)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Stamp_Civil_L9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Stamp - MEP (I8)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Stamp_MEP_I8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Stamp - Civil (I9)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Stamp_Civil_I9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Stamp - Civil (F7)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Stamp_Civil_F7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dry Area Stamp - MEP (F8)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dry_Area_Stamp_MEP_F8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP NOC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_NOC",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil NOC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_NOC",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Field Report 1ST Insp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Field_Report_1ST_Insp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Field Report 2nd Insp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Field_Report_2nd_Insp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Field Report 1st Insp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Field_Report_1st_Insp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Field Report 2nd Insp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Field_Report_2nd_Insp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil Field Report 1st Insp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_Field_Report_1st_Insp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Civil Field Report 2nd Insp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Civil_Field_Report_2nd_Insp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SCL Signoff",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SCL_Signoff",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PNCA Signoff",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PNCA_Signoff",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Keep Out (QT)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Keep_Out_QT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_KEEPOUT_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_KEEPOUT_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T13:12:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUT_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUT_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_KITCHENAREA_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_KITCHENAREA_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_KITCHENAREA_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Kitchenarea_Map_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Activity_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_KITCHENAREA_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_KITCHENAREA_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T09:57:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KITCHENAREA_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KITCHENAREA_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_KITCHENAREA_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_KITCHENAREA_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_KITCHENAREA_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Kitchenarea_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Flat",
											"type": "String"
										},
										"sink": {
											"name": "Flat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Area Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Area_Plaster",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen / Utility Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Utility_Framing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen / Utility Framing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Utility_Framing_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen / Utility Boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Utility_Boarding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen / Utility Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Utility_Boarding_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Wall Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Wall_Tile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Box Fixing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Box_Fixing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Cabinet",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Cabinet",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Counter Plywood",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Counter_Plywood",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Counter Top",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Counter_Top",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Counter Top Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Counter_Top_Skirting",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Cabinet Grouting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Cabinet_Grouting",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Cabinet Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Cabinet_Silicone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Fixtures for Kitchen Cabinet",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Fixtures_For_Kitchen_Cabinet",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Kitchen Appliances",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Kitchen_Appliances",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_KITCHENAREA_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_KITCHENAREA_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:12:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KITCHENAREA_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KITCHENAREA_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_MILESTONE_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_MILESTONE_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_MILESTONE_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Sort_Group",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Sort_Group",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Sort_Activity",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Sort_Activity",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity_New",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_New",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_MILESTONE_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_MILESTONE_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T07:13:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_MILESTONE_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_MILESTONE_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_MILESTONE_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_MILESTONE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_MILESTONE_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Milestone_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sl. No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sl_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Baseline Start",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Baseline_Start",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual / Forecast Start",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_Forecast_Start",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Baseline Finish",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Baseline_Finish",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual / Forecast Finish",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_Forecast_Finish",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual / Forecast Mitigation Finish",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_Forecast_Mitigation_Finish",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual %",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_Percentage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Critical",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Critical",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_MILESTONE_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_MILESTONE_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T06:36:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_MILESTONE_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_MILESTONE_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_PROJECTION_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_PROJECTION_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_PROJECTION_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PROJECTION_RAW_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sl.No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sl_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Projection for the month",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Projection_for_the_month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan as on date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plan_as_on_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual as on date",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_as_on_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Shortfall Reasons",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shortfall_Reasons",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_PROJECTION_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_PROJECTION_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T12:11:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_PROJECTION_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_PROJECTION_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_STAIRCASE_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_STAIRCASE_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_STAIRCASE_MAP_STG;",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Staircase_Map_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Activity_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity_Sequence",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_STAIRCASE_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_STAIRCASE_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T06:54:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STAIRCASE_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STAIRCASE_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_STAIRCASE_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_STAIRCASE_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_STAIRCASE_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Staircase_Raw_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stair Case No",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Stair_Case_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Conduit Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Conduit_Marking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cutting and Chasing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cutting_and_Chasing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Conduit Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Conduit_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grinding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grinding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Medium Coat Ceiling Spray Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Medium_Coat_Ceiling_Spray_Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Two Coat Fine Ceiling Spray Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Two_Coat_Fine_Ceiling_Spray_Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Texture",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Texture",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Stucco banding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Stucco_banding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Stucco_(1st_and_2nd_Coat)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Clearance for Pressurization Shaft",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Clearance_for_Pressurization_Shaft",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sanding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sanding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Handrail Floor Mounted",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Handrail_Floor_Mounted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Handrail Wall Mounted",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Handrail_Wall_Mounted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Grinding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Grinding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Bug Fill",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Bug_Fill",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Base Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Base_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Final Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Final_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Threshold Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Threshold_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Architrave_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door - Silicone Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Silicone_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Signage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Signage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Nosing Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nosing_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Handrail Painting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Handrail_Painting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Preparation for Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Preparation_for_Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase Pressurization",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_Pressurization",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_STAIRCASE_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_STAIRCASE_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T13:39:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STAIRCASE_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STAIRCASE_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_STRUCTURES_POUR_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_STRUCTURES_POUR_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_STRUCTURES_POUR_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Stracture_Pour_Map_ID_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sequence_of_Appearance",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Sequence_Of_Appearance",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Pour_count",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Pour_Count",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "type_of_pour",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type_Of_Pour",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_STRUCTURES_POUR_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_STRUCTURES_POUR_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T06:39:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STRUCTURES_POUR_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STRUCTURES_POUR_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_STRUCTURE_POURING_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_STRUCTURE_POURING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_STRUCTURE_POURING_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "STRUCTURE_POURING_id_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 6",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 6",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 6",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 7",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 7",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 7",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 8",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 8",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 8",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 9",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 9",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 9",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_10",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_10",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_10",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 11",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_11",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 11",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_11",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 11",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_11",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 12",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_12",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 12",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_12",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 13",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_13",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 13",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_13",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 13",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_13",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 14",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_14",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 14",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_14",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 14",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_14",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 15",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_15",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 15",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_15",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 15",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_15",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 16",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_16",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 16",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_16",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 16",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_16",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 17",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_17",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 17",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_17",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 17",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_17",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 18",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_18",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 18",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_18",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 18",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_18",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 19",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_19",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 19",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_19",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 19",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_19",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 20",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_20",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 20",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_20",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 20",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_20",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 21",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_21",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 21",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_21",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 21",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_21",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 22",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 22",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 22",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_22",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 23",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_23",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 24",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_24",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 24",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_24",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 24",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_24",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 25",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_25",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 25",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_25",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 25",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_25",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 26",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_26",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 26",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_26",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 26",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_26",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 27",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_27",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 27",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_27",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 27",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_27",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 28",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_28",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 28",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_28",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 28",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_28",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 29",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_29",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 29",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_29",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 29",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_29",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Wall 30",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Wall_30",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Slab 30",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Slab_30",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Staircase 12",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Staircase_12",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_STRUCTURE_POURING_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_STRUCTURE_POURING_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-29T09:39:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STRUCTURE_POURING_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STRUCTURE_POURING_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_SUBCONTRACTOR_MANPOWER_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE STG.O_PLN_SUBCONTRACTOR_MANPOWER_STG",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Contractor",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Contractor",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SCL Engineer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SCL_Engineer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PM & Engineers_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PM_And_Engineers_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PM & Engineers_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PM_And_Engineers_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PM & Engineers_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PM_And_Engineers_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Supervisor_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Supervisor_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Supervisor_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Foreman / Staff_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Foreman_Staff_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Foreman / Staff_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Foreman_Staff_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Foreman / Staff_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Foreman_Staff_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Chargehand_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Chargehand_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Chargehand_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Chargehand_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Chargehand_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Chargehand_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Carpenter_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Carpenter_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Carpenter_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Carpenter_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Carpenter_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Carpenter_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mason_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Mason_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mason_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Mason_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mason_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Mason_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Steel Fitter_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Steel_Fitter_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Steel Fitter_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Steel_Fitter_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Steel Fitter_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Steel_Fitter_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Scaffolder_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Scaffolder_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Scaffolder_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Scaffolder_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Scaffolder_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Scaffolder_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operator_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operator_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operator_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Security_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Security_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Security_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Security_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Security_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Security_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Helper_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Helper_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Helper_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Helper_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Helper_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Helper_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Steel Fixers_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Steel_Fixers_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Steel Fixers_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Steel_Fixers_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Steel Fixers_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Steel_Fixers_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Masons_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Masons_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Masons_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Masons_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Masons_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Masons_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Welder_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Welder_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Welder_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Welder_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Welder_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Welder_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rigger_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rigger_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rigger_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rigger_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rigger_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rigger_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Painter_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Painter_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Painter_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Painter_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Painter_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Painter_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tile Mason_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tile_Mason_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tile Mason_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tile_Mason_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tile Mason_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tile_Mason_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gypsum Carpenter_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gypsum_Carpenter_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gypsum Carpenter_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gypsum_Carpenter_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gypsum Carpenter_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gypsum_Carpenter_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Joinery Carpenter_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Joinery_Carpenter_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Joinery Carpenter_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Joinery_Carpenter_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Joinery Carpenter_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Joinery_Carpenter_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed Mason_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed_Mason_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed Mason_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed_Mason_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed Mason_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed_Mason_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Marble / Stone Mason_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Marble_Stone_Mason_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Marble / Stone Mason_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Marble_Stone_Mason_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Marble / Stone Mason_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Marble_Stone_Mason_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Electrician_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Electrician_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Electrician_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Electrician_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Electrician_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Electrician_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plumber_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plumber_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plumber_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plumber_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plumber_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plumber_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HVAC_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HVAC_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HVAC_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HVAC_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HVAC_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HVAC_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Contractor_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Contractor_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Contractor_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Contractor_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Contractor_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Contractor_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Technicians_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Technicians_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Technicians_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Technicians_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facade Technicians_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Facade_Technicians_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP Mason_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP_Mason_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP Mason_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP_Mason_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP Mason_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP_Mason_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Joinery Polisher_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Joinery_Polisher_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Joinery Polisher_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Joinery_Polisher_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Joinery Polisher_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Joinery_Polisher_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fitter_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fitter_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fitter_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fitter_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fitter_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fitter_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Deep Cleaning_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Deep_Cleaning_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Deep Cleaning_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Deep_Cleaning_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Deep Cleaning_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Deep_Cleaning_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OTHERS_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OTHERS_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OTHERS_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OTHERS_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OTHERS_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OTHERS_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Total_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Total_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Total_N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Total_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Total_D/N",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Total_D_N",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sub Total_",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sub_Total",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_SUBCONTRACTOR_MANPOWER_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_SUBCONTRACTOR_MANPOWER_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T09:41:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_SUBCONTRACTOR_MANPOWER_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_SUBCONTRACTOR_MANPOWER_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_TELEPHONEROOM_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_TELEPHONEROOM_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_TELEPHONEROOM_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TELEPHONEROOM_MAP_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_TELEPHONEROOM_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_TELEPHONEROOM_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T12:48:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_TELEPHONEROOM_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_TELEPHONEROOM_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_TELEPHONEROOM_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_TELEPHONEROOM_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_TELEPHONEROOM_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Telephoneroom_Raw_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork Layout",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork_Layout",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking for Builders Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking_for_Builders_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cutting & Chasing of Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cutting_&_Chasing_of_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Services_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall MEP Services Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_MEP_Services_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Stucco_(1st_and_2nd_Coat)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Stucco_(1st_and_2nd_Coat)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Installation of cable tray and trunking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Installation_of_cable_tray_and_trunking",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Installation of Panels",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Installation_of_Panels",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cable laying and glanding works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cable_laying_and_glanding_works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Sealant",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Sealant",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Grinding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Grinding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Bug Fill",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Bug_Fill",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy First Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_First_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Final Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Final_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Floor Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Floor_Tile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grout",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grout",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Architrave_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_TELEPHONEROOM_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_TELEPHONEROOM_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-09T14:55:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_TELEPHONEROOM_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_TELEPHONEROOM_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_TOWER_PODIUM_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_TOWER_PODIUM_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_TOWER_PODIUM_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_TOWER_PODIUM_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_TOWER_PODIUM_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T12:07:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_TOWER_PODIUM_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_TOWER_PODIUM_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_WATERROOM_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_WATERROOM_MAP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_WATERROOM_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "O_PLN_WATERROOM_MAP_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_WATERROOM_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_WATERROOM_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T14:03:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WATERROOM_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WATERROOM_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_WATERROOM_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_WATERROOM_RAW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_WATERROOM_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WATERROOM_RAW_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork Layout",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork_Layout",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking for Builders Work",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking_for_Builders_Work",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cutting & Chasing of Blockwork",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cutting_and_Chasing_of_Blockwork",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Services_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall MEP Services Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_MEP_Services_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plaster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Core Cutting & Chipping",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Core_Cutting_and_Chipping",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Sleeve Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Sleeve_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bore Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bore_Packing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Screed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Wall First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Installation of PPR pipes",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Installation_of_PPR_pipes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manifold & Valve installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Manifold_and_Valve_installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PRV installation & connections",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRV_installation_and_connections",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Testing of Pipes",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Testing_of_Pipes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire Sealant Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fire_Sealant_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Framing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Framing_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "False Ceiling Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "False_Ceiling_Framing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Boarding_Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "False Ceiling Boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "False_Ceiling_Boarding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Stucco (1st and 2nd Coat)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Stucco_1st_and_2nd_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "First_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Threshold",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Frame_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Architrave_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Shutter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Door-Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Grinding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Grinding",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Bug Fill",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Bug_Fill",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Primer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy First Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_First_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Epoxy Final Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Epoxy_Final_Coat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Skirting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POP Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POP_Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Grouting",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grouting",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PSV Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PSV_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Water Meter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Water_Meter_Installation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Final Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Final_Coat_Paint",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_WATERROOM_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_WATERROOM_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T12:47:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WATERROOM_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WATERROOM_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_WETAREA_MAP_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_WETAREA_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_WETAREA_MAP_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WETAREA_MAP_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACTIVITY_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_SHORT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTIVITY_SEQUENCE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_WETAREA_MAP_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_WETAREA_MAP_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T10:28:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WETAREA_MAP_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WETAREA_MAP_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_PLN_WETAREA_RAW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_WetAREA_RAW_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_WETAREA_RAW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WetArea_Raw_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Flat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Flat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plastering Clearance with 1 Mtr Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Plastering_Clearance_with_1_Mtr_Marking",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Tile Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Tile_Marking",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Marking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Marking",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Cutting & Chasing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Cutting_And_Chasing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pex pipe installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Pex_pipe_installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Re packing of MEP Services",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Re_packing_of_MEP_Services",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Pipe installation - Borepacking",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Pipe_installation_Borepacking",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Bore Packing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Bore_Packing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cistern installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cistern_installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Drywall framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drywall_framing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pex Elbow & Connections",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Pex_Elbow_Connections",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bottom Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bottom_Boarding_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bottom boarding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bottom_boarding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Under Screed Waterproofing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Under_Screed_Waterproofing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Screed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Screed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ledge Wall Full Board Closure Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ledge_Wall_Full_Board_Closure_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Water Supply & Drainage",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Water_Supply_Drainage",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Ducting & FCU Works",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Ducting_FCU_Works",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Electrical Services Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Electrical_Services_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Works & Testing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Works_Testing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP HL Packing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_HL_Packing_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Packing for all builders work opening",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Packing_for_all_builders_work_opening",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area MEP H/L Fire Sealent & Framing Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_MEP_H_L_Fire_Sealent_Framing_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet area Wall Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_area_Wall_Tile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area FC Framing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_FC_Framing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area MEP H/L Boarding Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_MEP_H_L_Boarding_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FC Boarding & Joint Taping",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FC_Boarding_Joint_Taping",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Paint Primer",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Paint_Primer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ceiling Paint Stucco 1st Coat & 2nd Coat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ceiling_Paint_Stucco_1st_Coat_2nd_Coat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Ceiling First Coat Paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Ceiling_First_Coat_Paint",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Grill & Diffuser Installtion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Grill_Diffuser_Installtion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shower Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shower_Threshold",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Linear Drain Supply",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Linear_Drain_Supply",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Linear Drain Fixing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Linear_Drain_Fixing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Under Tile Waterproofing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Under_Tile_Waterproofing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door Threshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Threshold",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Floor Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Floor_Tile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wall tile bottom Tile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wall_tile_bottom_Tile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Grouting - Wall & Floor",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Grouting_Wall_Floor",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Silicone - Wall & Floor Corners",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone_Wall_Floor_Corners",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shower Partition - U channel",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shower_Partition_U_channel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Shower Partition - Glass",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Shower_Partition_Glass",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Accessories & Silicon",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Accessories_Silicon",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door - Frame Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Frame_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door - Architrave Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Architrave_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door - Shutter Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Shutter_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bathroom Door - Ironmongery Installation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bathroom_Door_Ironmongery_Installation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Vanity Cabinet",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vanity_Cabinet",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Vanity Cabinet Counter top",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vanity_Cabinet_Counter_top",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Final_Fixtures_Sanitary_CP_fittings_Lights_WB",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MEP Ledge Wall Clearance",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MEP_Ledge_Wall_Clearance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ledge Wall Closing",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ledge_Wall_Closing",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Silicone around MEP Fixtures",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Silicone_around_MEP_Fixtures",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Wet Area Final Coat paint",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Wet_Area_Final_Coat_paint",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_PLN_WETAREA_RAW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_PLN_WETAREA_RAW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T10:03:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WETAREA_RAW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WETAREA_RAW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_O_Sbu_Mapping_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_O_Sbu_Mapping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_SBU_MAPPING_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBU_MAPPING_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "mapping_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Mapping_Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "sbu_identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Identifier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_shorts",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Shorts",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_O_SBU_MAPPING_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_O_SBU_MAPPING_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T08:12:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_SBU_MAPPING_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_O_SBU_MAPPING_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_PLANGRID_MAPPING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PLANGRID_MAPPING",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PG_PLANGRID_MAPPING",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-10T11:13:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PG_PLANGRID_MAPPING')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_PLANGRID_PROJECT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Task_Report_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate Table [STG].[PG_PLANGRID_PROJECT_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project_Short_Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Short_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_PLANGRID_PROJECT_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_PLANGRID_PROJECT_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-09T14:24:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_PLANGRID_PROJECT_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_PLANGRID_PROJECT_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_PROJECT_MASTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Project_Master",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PG_PROJECT_MASTER",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T13:19:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PG_PROJECT_MASTER')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Plangrid_Cluster_Mapping')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Plangrid_Cluster_Mapping",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PG_Plangrid_Cluster_Mapping",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T13:46:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PG_Plangrid_Cluster_Mapping')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Plangrid_Cluster_Mapping_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Plangrid_Cluster_Mapping_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate Table [STG].[PG_PLANGRID_CLUSTER_MAPPING_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Stamp_First",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stamp_First",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cluster_Short",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Cluster_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cluster_Full",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Cluster_Full",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Works",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Works",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Approval",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Approval",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Clearance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_Plangrid_Cluster_Mapping_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_Plangrid_Cluster_Mapping_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-09T13:33:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_Plangrid_Cluster_Mapping_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_Plangrid_Cluster_Mapping_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Plangrid_Mapping_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Plangrid_Mapping_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate table [STG].[PG_Plangrid_Mapping_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Act_Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Act_Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Cluster",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Cluster",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_Plangrid_Mapping_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_Plangrid_Mapping_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-24T13:59:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_Plangrid_Mapping_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_Plangrid_Mapping_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Project_Master_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Project_Master_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate Table  [STG].[PG_Project_Master_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project_id",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Created_ON",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Project_Created_ON",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_Project_Master_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_Project_Master_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-24T14:34:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_Project_Master_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_Project_Master_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_TASK_REPORT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TASK_REPORT_FACT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PG_TASK_REPORT",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-24T15:17:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PG_TASK_REPORT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PG_Task_Report_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PG_Task_Report_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate table [STG].[PG_TASK_REPORT_STG]",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Task_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Task_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sheet",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Sheet",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Root_Cause",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Root_Cause",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Created_By",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Created_By",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Assigned_To",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Assigned_To",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Watchers",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Watchers",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Photos",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Photos",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Archived",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Archived",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Start_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Start_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Due_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Due_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Cost_Impact",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Cost_Impact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cost_Impact_Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										},
										"sink": {
											"name": "Cost_Impact_Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Schedule_Impact",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Schedule_Impact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Schedule_Impact_Amount_Days",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Schedule_Impact_Amount_Days",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Last_Updated_On",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Last_Updated_On",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Closed_on",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Closed_on",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Task_Refresh_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Task_Refresh_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Task_Ref_No",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Task_Ref_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PG_Task_Report_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PG_Task_Report_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-09T13:36:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_Task_Report_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_Task_Report_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_BALCONYAREA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Balcony Area",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_BALCONYAREA",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T12:58:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_BALCONYAREA')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_BUSINESS_PLAN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PLN_BUSINESS_PLAN",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_BUSINESS_PLN",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T04:42:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_BUSINESS_PLN')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_BUSINESS_PLN_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Business_PLN_1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_BUSINESS_PLN_1",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-20T01:33:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_BUSINESS_PLN_1')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_CORRIDOR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Corridor",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_CORRIDOR",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-05T12:23:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_CORRIDOR')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_CRITICAL_ISSUE_TRACKER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Critical Issue Tracker",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_CRITICAL_ISSUE_TRACKER",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T22:13:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_CRITICAL_ISSUE_TRACKER')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_DRYAREA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dry Area",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_DRYAREA",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T08:43:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_DRYAREA')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_ELECTRICROOM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Electric Room",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_ELECTRICROOM",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-05T13:39:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_ELECTRICROOM')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_ENGINEERING_DRAWING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Engineering Drawing",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_ENGINEERING_DRAWING",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T21:48:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_ENGINEERING_DRAWING')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_FIRELIFTLOBBY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fire Lift Lobby",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_FIRELIFTLOBBY",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T10:00:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_FIRELIFTLOBBY')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_FLATFINISHES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Flat Finishes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_FLATFINISHES",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T11:38:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_FLATFINISHES')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_GARBAGEROOM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Garbage Room",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_GARBAGEROOM",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T09:27:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_GARBAGEROOM')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_KEEPOUT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "KEEPOUT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_KEEPOUT",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T13:12:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_KEEPOUT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_KEEPOUT_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Keepout 2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_KEEPOUT2",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T14:39:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_KEEPOUT2')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_KITCHENAREA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Kitchen Area",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_KITCHENAREA",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T08:55:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_KITCHENAREA')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_LEVEL_MAP_ALL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Level Map All",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_LEVEL_MAP_ALL",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T17:45:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_LEVEL_MAP_ALL')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_MANPOWER_MERGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_MANPOWER_MERGE",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T08:31:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_MANPOWER_MERGE')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_MILESTONE_ACTUALS_TEMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PLN_MILESTONE_ACTUALS_TEMP",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_MILESTONE_ACTUALS_TEMP",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T11:31:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_MILESTONE_ACTUALS_TEMP')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_PROCUREMENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Procurement",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_PROCUREMENT",
								"type": "DataFlowReference",
								"parameters": {
									"MAXID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T22:55:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_PROCUREMENT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_PROJECTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PLN_PROJECTION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_PROJECTION",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T11:56:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_PROJECTION')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_PROJECTS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROJECTS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_PROJECTS",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T14:41:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_PROJECTS')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_PROJECT_PROGRESS_SUMMARY_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Project Progresh",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_PROJECT_PROGRESS_SUMMARY",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T04:19:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_PROJECT_PROGRESS_SUMMARY')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_SBU_MAPPING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBU MAPPING",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_SBU_MAPPING",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T17:45:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_SBU_MAPPING')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_SERVICEROOM_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SERVICE ROOM",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_SERVICEROOM",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-10T12:49:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_SERVICEROOM')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_STAIRCASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stair Case",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_STAIRCASE",
								"type": "DataFlowReference",
								"parameters": {
									"MAP_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T13:40:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_STAIRCASE')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_STRUCTURE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STRUCTURE",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_STRUCTURE",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T21:24:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_STRUCTURE')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_SUBCONTRACTOR_MANPOWER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sub Contractor",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_SUBCONTRACT_MANPOWER",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T09:41:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_SUBCONTRACT_MANPOWER')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_TELEPHONEROOM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Telephone Room",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_TELEPHONEROOM",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T12:34:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_TELEPHONEROOM')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_WATERROOM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Water Room",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_WATERROOM",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-05T12:01:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_WATERROOM')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PLN_WETAREA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wet Area",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PLN_WETAREA",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-05T11:15:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PLN_WETAREA')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROCUREMENT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROCUREMENT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[O_PLN_PROCUREMENT_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Procurement_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Classification",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Classification",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Issuance of Drawings_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Issuance_of_Drawings_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Issuance of Drawings_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Issuance_of_Drawings_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PR_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PR_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PR_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PR_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vendor Finalization_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vendor_Finalization_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vendor Finalization_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vendor_Finalization_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prequalification Submission_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Prequalification_Submission_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prequalification Submission_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Prequalification_Submission_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prequalification Approval_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Prequalification_Approval_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Prequalification Approval_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Prequalification_Approval_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Release of contract documents_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Release_of_Contract_documents_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Release of contract documents_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Release_of_Contract_documents_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing/Technical Submission_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing_Technical_Submission_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing/Technical Submission_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing_Technical_Submission_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing/Technical Submission Approval_Plan",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing_Technical_Submission_Approval_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Drawing/Technical Submission Approval_Actual",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Drawing_Technical_Submission_Approval_Actual",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Required at site by",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Required_at_site_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Actual delivery at site",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Actual_Delivery_at_site",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PLN_PROCUREMENT_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PLN_PROCUREMENT_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T10:45:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROCUREMENT_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROCUREMENT_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROJECTS_NEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROJECTS_NEW",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PROJECTS_NEW",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T11:06:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PROJECTS_NEW')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROJECTS_NEW_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROJECTS_NEW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[PROJECTS_NEW_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Sort_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Sort_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Identifier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FLAT_COUNT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FLAT_COUNT",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Short",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total_Floors",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Floors",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Podiums",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Podiums",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Typical_Floor",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Typical_Floor",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Typical_Floor_Slab",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Typical_Floor_Slab",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Podium_Slab",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Podium_Slab",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "1_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ONE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "2_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TWO_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "1_5_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ONE_FIVE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "2_5_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TWO_FIVE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "3_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "THEREE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "4_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FOUR_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "5_BHK",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FIVE_BHK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Actual_Start",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Actual_Start",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "BOQ_Value",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BOQ_Value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bathrooms",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Bathrooms",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Center_Tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Center_Tower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Built_Up_Area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Built_Up_Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Chairman_Lift",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Chairman_Lift",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Delay",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Delay",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Duplex",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Duplex",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fire_Lifts",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Fire_Lifts",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Forecast_Duration",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Forecast_Duration",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Forecast_Finish",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Forecast_Finish",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Lat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Lat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Long",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Long",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Office_Space",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Office_Space",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Office_Use_Lift",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Office_Use_Lift",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Parkings",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Parkings",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Pent_House",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Pent_House",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Passenger_Lift",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Passenger_Lift",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Configuration",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Configuration",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Duration",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Project_Duration",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Finish",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Project_Finish",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Project_Start",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Project_Start",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Residence_Use_Lift",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Residence_Use_Lift",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Retail",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Retail",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Service_Lift",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Service_Lift",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Staircase_GF_L1",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Staircase_GF_L1",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Staircase_GF_Roof",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Staircase_GF_Roof",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Units",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Units",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Tower_A",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower_A",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tower_B",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower_B",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tower_C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower_C",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tower_D",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Towers",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Towers",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Image_Link",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Image_Link",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Render_Image",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Render_Image",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PROJECTS_NEW_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PROJECTS_NEW_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T10:55:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PROJECTS_NEW_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PROJECTS_NEW_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROJECTS_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PROJECTS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[PROJECTS_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Sort_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Project_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Identifier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Short",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_Short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FLAT_COUNT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Flat_Count",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Floors",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Floors",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Podiums",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Podiums",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total_Typical_Floor",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Total_Typical_Floor",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Typical_Floor_Slab",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Typical_Floor_Slab",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Podium_Slab",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Podium_Slab",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PLN_PROJECTS_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PLN_PROJECTS_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T10:19:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROJECTS_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROJECTS_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Common')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Executive",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE for_executive;\r\nINSERT INTO for_executive\r\nWITH AA AS (\r\n SELECT\r\n DATE(OPBSR.upload_time) AS Upload_Date,\r\n OPBSR.Project_id,\r\n CAST(REPLACE(OPBSR.`Achieved Revenue (Till 2021)`,',','') AS DECIMAL) AS `Achieved Revenue (Till 2021)`,\r\n CAST(REPLACE(OPBSR.`Total Revenue (BOQ)`,',','') AS DECIMAL) AS `Total Revenue (BOQ)`,\r\n AA.value AS TILL_DATE_2022,\r\n BB.Projection_Actuals,\r\n(IFNULL(OPBSR.`Achieved Revenue (Till 2021)`,0)+IFNULL(AA.value,0)+IFNULL(BB.Projection_Actuals,0)) AS Total\r\n FROM O_PLN_BUSINESS_PLAN_RAW OPBSR LEFT JOIN (SELECT \r\n Upload_Date,\r\n Project_id,\r\n SUM(value) AS value\r\n FROM F_PLN_BUSINESS_PLAN\r\n WHERE `Type` = 'Actuals' GROUP BY 1,2) AS AA \r\n ON OPBSR.Project_id = AA.Project_id\r\n LEFT JOIN (SELECT \r\n Upload_Date,\r\n `Project Sclicer` AS Project_id,\r\n SUM(`Actual as on date`) AS Projection_Actuals\r\n FROM F_PLN_PROJECTION GROUP BY 1,2) BB\r\n ON OPBSR.Project_id = BB.Project_id\r\n WHERE TRIM(SBU)= 'Overall' \r\n AND `Type` = 'Actuals'),\r\n Stagging AS (\r\n SELECT \r\n Upload_Date,\r\n Project_id,\r\n `Total Revenue (BOQ)` AS Denominator,\r\n `Achieved Revenue (Till 2021)`,\r\n TILL_DATE_2022,\r\n Projection_Actuals,\r\n IFNULL(`Achieved Revenue (Till 2021)`,0)+IFNULL(TILL_DATE_2022,0)+IFNULL(Projection_Actuals,0) AS Numarator\r\n FROM AA) \r\n SELECT *,cast((Numarator/Denominator) as decimal(38,4)) AS Completed,cast((1-(Numarator/Denominator)) as decimal(39,4)) AS Pending FROM Stagging;\r\n\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Paginated Keepout",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE paginated_keepout;\nINSERT INTO paginated_keepout\nWITH Total AS (\nSELECT project_id,Activity,count(`Flat No.`) AS Total\nFROM F_PLN_KEEPOUT_2 GROUP BY 1,2\n),\nCompleted AS (\nSELECT project_id,Activity,count(`Actual`) AS Completed\nFROM F_PLN_KEEPOUT_2 GROUP BY 1,2\n),\nWork_Front AS (\nSELECT project_id,Activity,Predecessor,count(`Predecessor Actual Work Front`) AS `Work Front`\nFROM F_PLN_KEEPOUT_2 GROUP BY 1,2,3\n),\nPlanned AS (\nSELECT project_id,Activity,count(`Flat No.`) AS `Planned`\nFROM F_PLN_KEEPOUT_2  WHERE (Plan <= `Date`)GROUP BY 1,2\n),\nFOR_THE_DAY AS (\nSELECT project_id,Activity,count(`Actual`) AS `FOR THE DAY`\nFROM F_PLN_KEEPOUT_2  WHERE (`Actual` = `Date`) GROUP BY 1,2\n),\nWITHIN_TIME AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `Within Allowable Time`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 0 GROUP BY 1,2),\nDAY_1 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `1 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 1 GROUP BY 1,2),\nDAY_2 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `2 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 2 GROUP BY 1,2),\nDAY_3 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `3 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 3 GROUP BY 1,2),\nDAY_4 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `4 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 4 GROUP BY 1,2),\nDAY_5 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `5 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 5 GROUP BY 1,2),\nDAY_6 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `6 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 6 GROUP BY 1,2),\nDAY_7 AS (\nSELECT  project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `7 DAY`\nFROM F_PLN_KEEPOUT_2  WHERE `SLA Actual`= 7 GROUP BY 1,2),\nDAY_MORETHAN_7 AS (\nSELECT project_id,\n        Activity,\n        COUNT(`SLA Actual`) AS `>7 DAYS`\nFROM F_PLN_KEEPOUT_2 WHERE `SLA Actual` > 7 GROUP BY 1,2),\nTOTAL_DELAYED AS (\nSELECT project_id,\n        Activity,\n        SUM(`SLA Actual`) AS `Total Days Delayed`\nFROM F_PLN_KEEPOUT_2 WHERE `SLA Actual` != 0 GROUP BY 1,2),\n-- Need to Fix this\nSHORT_AGAINST_WORKFRONT AS (\nSELECT  project_id,\n        Activity,\n        COUNT(Actual)-COUNT(`Predecessor Actual`) AS `ShortFall Against WorkFront`\nFROM F_PLN_KEEPOUT_2 WHERE `SLA Actual` != 0 GROUP BY 1,2),\nACTIVITY AS (\nSELECT \n     `Date`,\n     project_id,\n     ACTIVITY,\n    `Engineer Responsible`,\n     Predecessor,\n     ACTIVITY_ID\nFROM F_PLN_KEEPOUT_2 group by 1,2,3,4,5,6),\nJOINING_TABLES AS (\nSELECT\nACT.`Date`,\nACT.project_id AS `Project Id`,\nACT.ACTIVITY_ID AS `Activity Id`,\nACT.ACTIVITY AS Activity,\nACT.`Engineer Responsible`,\nACT.Predecessor,\nTOT.Total,\nPLN.Planned,\nCOM.Completed,\n(PLN.Planned-COM.Completed) AS ShortFall,\nWF.`Work Front`, -- Need to check this\nFTD.`FOR THE DAY` AS `For The Day`,\nWT.`Within Allowable Time`,\nD1.`1 DAY`,\nD2.`2 DAY`,\nD3.`3 DAY`,\nD4.`4 DAY`,\nD5.`5 DAY`,\nD6.`6 DAY`,\nD7.`7 DAY`,\nDS7.`>7 DAYS`,\n(IFNULL(D1.`1 DAY`,0)+IFNULL(D2.`2 DAY`,0)+IFNULL(D3.`3 DAY`,0)+IFNULL(D4.`4 DAY`,0)+IFNULL(D5.`5 DAY`,0)+IFNULL(D6.`6 DAY`,0)+IFNULL(D7.`7 DAY`,0)+IFNULL(DS7.`>7 DAYS`,0)) AS `Total Activities Delayed`,\nTD.`Total Days Delayed`\nFROM ACTIVITY ACT\nLEFT JOIN Total TOT ON ACT.ACTIVITY = TOT.ACTIVITY\nLEFT JOIN Completed COM ON ACT.ACTIVITY = COM.ACTIVITY\nLEFT JOIN Work_Front WF ON ACT.ACTIVITY = WF.ACTIVITY\nLEFT JOIN Planned PLN ON ACT.ACTIVITY = PLN.ACTIVITY\nLEFT JOIN FOR_THE_DAY FTD ON ACT.ACTIVITY = FTD.ACTIVITY\nLEFT JOIN WITHIN_TIME WT ON ACT.ACTIVITY = WT.ACTIVITY\nLEFT JOIN DAY_1 D1 ON ACT.ACTIVITY = D1.ACTIVITY\nLEFT JOIN DAY_2 D2 ON ACT.ACTIVITY = D2.ACTIVITY\nLEFT JOIN DAY_3 D3 ON ACT.ACTIVITY = D3.ACTIVITY\nLEFT JOIN DAY_4 D4 ON ACT.ACTIVITY = D4.ACTIVITY\nLEFT JOIN DAY_5 D5 ON ACT.ACTIVITY = D5.ACTIVITY\nLEFT JOIN DAY_6 D6 ON ACT.ACTIVITY = D6.ACTIVITY\nLEFT JOIN DAY_7 D7 ON ACT.ACTIVITY = D7.ACTIVITY\nLEFT JOIN DAY_MORETHAN_7 DS7 ON ACT.ACTIVITY = DS7.ACTIVITY\nLEFT JOIN TOTAL_DELAYED TD ON ACT.ACTIVITY = TD.ACTIVITY) \nSELECT * FROM JOINING_TABLES ORDER BY `Activity Id`;\n\n/**/\n\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Project Progress Summary",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_project_progress_summary;\r\nINSERT INTO f_pln_project_progress_summary\r\nWITH MAP_MERGE_FWP AS (\r\n        SELECT *, 'Dry Area' AS Area FROM O_PLN_DRYAREA_MAP\r\n        UNION ALL\r\n        SELECT *, 'Wet Area' AS Area FROM O_PLN_WETAREA_MAP\r\n        UNION ALL\r\n        SELECT *, 'Kitchen Area' AS Area FROM O_PLN_KITCHENAREA_MAP\r\n        UNION ALL\r\n        SELECT *, 'Balcony Area' AS Area FROM O_PLN_BALCONYAREA_MAP),\r\n    Total_Activities_FWP AS (\r\n        SELECT \r\n            Flat_count.Project_Identifier AS Project,\r\n            OPD.ACTIVITY_ID,\r\n            OPD.SBU_ID,\r\n            OPD.Area,\r\n            'Flatwise Progress' AS `Progress Type`,\r\n            OPD.CATEGORY,\r\n            OPD.ACTIVITY_SEQUENCE,\r\n            Flat_count.`Flats`,\r\n            Flat_count.`Total Floors`,\r\n            Flat_count.`Scheduled Activities`\r\n        FROM MAP_MERGE_FWP OPD CROSS JOIN (SELECT \r\n                                           Project_Identifier,\r\n                                           FLAT_COUNT AS `Scheduled Activities`,\r\n                                           FLAT_COUNT AS `Flats`,\r\n                                           Total_Floors AS `Total Floors`\r\n                                       FROM PROJECTS WHERE Project_Identifier !='Creek Vista Grande') AS Flat_count),\r\n    PROGRESS_TRACKER_FWP AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            sclicer AS Area, -- For Match \r\n            'Flatwise Progress' AS `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            Type_of_work AS ACTIVITY_SEQUENCE,-- For Match\r\n            value,\r\n            CASE WHEN value = 0 THEN 1 ELSE NULL END AS `Yet To Start`,\r\n            CASE WHEN value = 1 THEN 1 ELSE NULL END AS `Completed`,\r\n            CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END AS `In Progress`\r\n        FROM F_PLN_FLATFINISHES WHERE project_id IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n    PROGRESS_TRACKER_FINAL_FWP AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id AS Project, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            Area, -- For Match \r\n            `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            ACTIVITY_SEQUENCE,-- For Match\r\n            AVG(value) AS `Average Achived`,\r\n            SUM(value) AS `SUM Achived`,\r\n            COUNT(value) AS `Count Achived`,\r\n            SUM(`Yet To Start`) AS `Yet To Start`,\r\n            SUM(Completed) AS Completed,\r\n            SUM(`In Progress`) AS `In Progress`\r\n        FROM PROGRESS_TRACKER_FWP GROUP BY Upload_Date,project_id,ACTIVITY_ID,SBU_ID,tower,Area,Category,ACTIVITY_SEQUENCE),\r\n    _FWP_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n        TA.`Total Floors`,\r\n        TA.`Scheduled Activities`,\r\n        PTF.`SUM Achived`,\r\n        PTF.`Count Achived`,\r\n        PTF.`Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_FWP TA LEFT JOIN PROGRESS_TRACKER_FINAL_FWP PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID),\r\n-- End Of Flatwise Progress -- \r\n-- Start Of Service Rooms Progress -- \r\nMAP_MERGE_SRP AS (\r\n    SELECT *, 'Water Room' AS Area FROM O_PLN_WATERROOM_MAP \r\n    UNION ALL\r\n    SELECT *, 'Electrical Room' AS Area FROM O_PLN_ELECTRICALROOM_MAP\r\n    UNION ALL\r\n    SELECT *, 'Telephone Room' AS Area FROM O_PLN_TELEPHONEROOM_MAP\r\n    UNION ALL\r\n    SELECT *, 'Fire-Lift Lobby' AS Area FROM O_PLN_FIRELIFTLOBBY_MAP\r\n    UNION ALL\r\n    SELECT *, 'Garbage Room' AS Area FROM O_PLN_GARBAGEROOM_MAP),\r\nTotal_Activities_SRP AS (\r\n        SELECT \r\n            Flat_count.Project_Identifier AS Project,\r\n               OPD.ACTIVITY_ID,\r\n            OPD.SBU_ID,\r\n            OPD.Area,\r\n            'Service Room Progress' AS `Progress Type`,\r\n            OPD.CATEGORY,\r\n            OPD.ACTIVITY_SEQUENCE,\r\n            Flat_count.*\r\n           FROM MAP_MERGE_SRP OPD CROSS JOIN (SELECT \r\n                                           Project_Identifier,\r\n                                           Total_Floors AS `Scheduled Activities`, \r\n                                           FLAT_COUNT AS `Flats`,\r\n                                           Total_Floors AS `Total Floors`\r\n                                       FROM PROJECTS) AS Flat_count),\r\n    PROGRESS_TRACKER_SRP AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            sclicer AS Area, -- For Match \r\n            'Flatwise Progress' AS `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            Type_of_work AS ACTIVITY_SEQUENCE,-- For Match\r\n            value,\r\n            CASE WHEN value = 0 THEN 1 ELSE NULL END AS `Yet To Start`,\r\n            CASE WHEN value = 1 THEN 1 ELSE NULL END AS `Completed`,\r\n            CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END AS `In Progress`\r\n        FROM F_PLN_SERVICEROOMS WHERE project_id IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n    PROGRESS_TRACKER_FINAL_SRP AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id AS Project, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            Area, -- For Match \r\n            `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            ACTIVITY_SEQUENCE,-- For Match\r\n            AVG(value) AS `Average Achived`,\r\n            SUM(value) AS `SUM Achived`,\r\n            COUNT(value) AS `Count Achived`,\r\n            SUM(`Yet To Start`) AS `Yet To Start`,\r\n            SUM(Completed) AS Completed,\r\n            SUM(`In Progress`) AS `In Progress`\r\n        FROM PROGRESS_TRACKER_SRP GROUP BY Upload_Date,project_id,ACTIVITY_ID,SBU_ID,tower,Area,Category,ACTIVITY_SEQUENCE),\r\n_SRP_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n           TA.`Total Floors`,\r\n           TA.`Scheduled Activities`,\r\n        PTF.`SUM Achived`,\r\n        PTF.`Count Achived`,\r\n        PTF.`Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_SRP TA LEFT JOIN PROGRESS_TRACKER_FINAL_SRP PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID WHERE TA.Project IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')), \r\n-- End Of Service Rooms Progress -- \r\n-- Start Of Structures Progress -- \r\nTotal_Activities_STP AS\r\n(SELECT \r\n    OPD.project_id AS Project,\r\n    OPD.Sequence_of_Appearance AS ACTIVITY_ID,\r\n    'SBU 3' AS SBU_ID,\r\n    'Slab' AS Area,\r\n    'Structure Progress' AS `Progress Type`,\r\n    OPD.area AS CATEGORY,\r\n    OPD.Pour_count AS ACTIVITY_SEQUENCE,\r\n    Flat_count.`Flats`,\r\n    Flat_count.`Total Floors`,\r\n    Flat_count.`Scheduled Activities`\r\nFROM O_PLN_STRUCTURES_POUR_MAP OPD CROSS JOIN (SELECT \r\n                                   0 AS `Scheduled Activities`,\r\n                                   NULL AS `Flats`,\r\n                                   Total_Floors AS `Total Floors`\r\n                               FROM PROJECTS WHERE Project_Identifier !='Creek Vista Grande') AS Flat_count\r\nWHERE type_of_pour LIKE 'slab%' GROUP BY 1,2,3,4,5,6,7,8,9,10),\r\nPROGRESS_TRACKER_FINAL_STP AS (\r\n    SELECT \r\n    Upload_Date,\r\n    Project_Identifier AS Project,\r\n    'Overall' AS tower,\r\n    Sequence_of_Appearance AS ACTIVITY_ID,\r\n    'SBU 3' AS SBU_ID,\r\n    'Slab' AS Area,\r\n    'Structure Progress' AS `Progress Type`,\r\n    area AS Category,\r\n    Pour_count AS ACTIVITY_SEQUENCE,\r\n    COUNT(`Level`) AS `Completed`,\r\n    NULL AS `In Progress`,\r\n    NULL AS `Yet To Start`\r\nFROM F_PLN_STRUCTURES \r\nWHERE Pour LIKE ('slab%') GROUP BY 1,2,3,4,5,6,7,8,9),\r\n_STP_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n           TA.`Total Floors`,\r\n           TA.`Scheduled Activities`,\r\n        PTF.Completed AS `SUM Achived`,\r\n        PTF.Completed AS `Count Achived`,\r\n         NULL AS `Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_STP TA LEFT JOIN PROGRESS_TRACKER_FINAL_STP PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID WHERE TA.Project IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n-- End Of Structures Progress -- \r\n-- Start Of Corridor Progress -- \r\n    MAP_MERGE_CRA AS (\r\n        SELECT *, 'Corridor' AS Area FROM O_PLN_CORRIDOR_MAP),\r\n    Total_Activities_CRA AS (\r\n        SELECT \r\n            Flat_count.Project_Identifier AS Project,\r\n            OPD.ACTIVITY_ID,\r\n            OPD.SBU_ID,\r\n            OPD.Area,\r\n            'Corridor Progress' AS `Progress Type`,\r\n            OPD.CATEGORY,\r\n            OPD.ACTIVITY_SEQUENCE,\r\n            Flat_count.`Flats`,\r\n            Flat_count.`Total Floors`,\r\n            Flat_count.`Scheduled Activities`\r\n        FROM MAP_MERGE_CRA OPD CROSS JOIN (SELECT \r\n                                           Project_Identifier,\r\n                                           Total_Floors AS `Scheduled Activities`,\r\n                                           FLAT_COUNT AS `Flats`,\r\n                                           Total_Floors AS `Total Floors`\r\n                                       FROM PROJECTS WHERE Project_Identifier !='Creek Vista Grande') AS Flat_count),\r\n    PROGRESS_TRACKER_CRA AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            sclicer AS Area, -- For Match \r\n            'Corridor Progress' AS `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            Type_of_work AS ACTIVITY_SEQUENCE,-- For Match\r\n            value,\r\n            CASE WHEN value = 0 THEN 1 ELSE NULL END AS `Yet To Start`,\r\n            CASE WHEN value = 1 THEN 1 ELSE NULL END AS `Completed`,\r\n            CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END AS `In Progress`\r\n        FROM F_PLN_CORRIDOR WHERE project_id IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n    PROGRESS_TRACKER_FINAL_CRA AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id AS Project, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            Area, -- For Match \r\n            `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            ACTIVITY_SEQUENCE,-- For Match\r\n            AVG(value) AS `Average Achived`,\r\n            SUM(value) AS `SUM Achived`,\r\n            COUNT(value) AS `Count Achived`,\r\n            SUM(`Yet To Start`) AS `Yet To Start`,\r\n            SUM(Completed) AS Completed,\r\n            SUM(`In Progress`) AS `In Progress`\r\n        FROM PROGRESS_TRACKER_CRA GROUP BY Upload_Date,project_id,ACTIVITY_ID,SBU_ID,tower,Area,Category,ACTIVITY_SEQUENCE),\r\n    _CRA_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n           TA.`Total Floors`,\r\n           TA.`Scheduled Activities`,\r\n        PTF.`SUM Achived`,\r\n        PTF.`Count Achived`,\r\n        PTF.`Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_CRA TA LEFT JOIN PROGRESS_TRACKER_FINAL_CRA PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID WHERE TA.Project IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n-- End Of Corridor Progress -- \r\n-- Start Of KeppOut Progress -- \r\n    MAP_MERGE_KOA AS (\r\n        SELECT *, 'KeepOut Area' AS Area FROM O_PLN_KEEPOUT_MAP),\r\n    Total_Activities_KOA AS (\r\n        SELECT \r\n            Flat_count.Project_Identifier AS Project,\r\n            OPD.ACTIVITY_ID,\r\n            OPD.SBU_ID,\r\n            OPD.Area,\r\n            'KeepOut Progress' AS `Progress Type`,\r\n            OPD.CATEGORY,\r\n            OPD.ACTIVITY_SEQUENCE,\r\n            Flat_count.`Flats`,\r\n            Flat_count.`Total Floors`,\r\n            Flat_count.`Scheduled Activities`\r\n        FROM MAP_MERGE_KOA OPD CROSS JOIN (SELECT \r\n                                           Project_Identifier,\r\n                                           FLAT_COUNT AS `Scheduled Activities`,\r\n                                           FLAT_COUNT AS `Flats`,\r\n                                           Total_Floors AS `Total Floors`\r\n                                       FROM PROJECTS WHERE Project_Identifier !='Creek Vista Grande') AS Flat_count)\r\n   ,\r\n    PROGRESS_TRACKER_KOA AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_Filter AS SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            'KeepOut Area' AS Area, -- For Match \r\n            'KeepOut Progress' AS `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            Type_of_work AS ACTIVITY_SEQUENCE,-- For Match\r\n            value,\r\n            CASE WHEN value = 0 THEN 1 ELSE NULL END AS `Yet To Start`,\r\n            CASE WHEN value = 1 THEN 1 ELSE NULL END AS `Completed`,\r\n            CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END AS `In Progress`\r\n        FROM F_PLN_KEEPOUT WHERE project_id IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve')),\r\n    PROGRESS_TRACKER_FINAL_KOA AS (\r\n        SELECT \r\n            Upload_Date, -- For Date\r\n            project_id AS Project, -- Project Match\r\n            ACTIVITY_ID, -- For Match\r\n            SBU_ID, -- For Match\r\n            tower, -- To get the Tower Map\r\n            Area, -- For Match \r\n            `Progress Type`, -- For Map\r\n            Category, -- For Match\r\n            ACTIVITY_SEQUENCE,-- For Match\r\n            AVG(value) AS `Average Achived`,\r\n            SUM(value) AS `SUM Achived`,\r\n            COUNT(value) AS `Count Achived`,\r\n            SUM(`Yet To Start`) AS `Yet To Start`,\r\n            SUM(Completed) AS Completed,\r\n            SUM(`In Progress`) AS `In Progress`\r\n        FROM PROGRESS_TRACKER_KOA GROUP BY Upload_Date,project_id,ACTIVITY_ID,SBU_ID,tower,Area,Category,ACTIVITY_SEQUENCE),\r\n    _KOA_FINAL AS (\r\n    SELECT \r\n        PTF.Upload_Date,\r\n        TA.Project,\r\n        PTF.tower,\r\n        TA.ACTIVITY_ID,\r\n        TA.SBU_ID,\r\n        TA.Area,\r\n        TA.`Progress Type`,\r\n        TA.CATEGORY,\r\n        TA.ACTIVITY_SEQUENCE,\r\n        TA.`Flats`,\r\n           TA.`Total Floors`,\r\n           TA.`Scheduled Activities`,\r\n        PTF.`SUM Achived`,\r\n        PTF.`Count Achived`,\r\n        PTF.`Average Achived`,\r\n        PTF.Completed,\r\n        PTF.`In Progress`,\r\n        PTF.`Yet To Start`,\r\n        (IFNULL(`Scheduled Activities`,0)-(IFNULL(Completed,0)+IFNULL(`In Progress`,0))) AS `Yet To Start Manual`\r\n    FROM Total_Activities_KOA TA LEFT JOIN PROGRESS_TRACKER_FINAL_KOA PTF\r\n        ON TA.Project = PTF.Project\r\n        AND TA.ACTIVITY_SEQUENCE = PTF.ACTIVITY_SEQUENCE\r\n        AND TA.CATEGORY = PTF.CATEGORY\r\n        AND TA.Area = PTF.Area\r\n        AND TA.SBU_ID = PTF.SBU_ID\r\n        AND TA.ACTIVITY_ID = PTF.ACTIVITY_ID WHERE TA.Project IN ('Sobha Waves','Sobha Waves Grande','One Park Avenue','Creek Vista Reserve'))\r\n-- End Of KeppOut Progress -- \r\n-- This is only to Merge all Data -- \r\nSELECT *, 2 AS SORT_MAIN FROM _FWP_FINAL -- Flatwise Progress\r\nUNION ALL\r\nSELECT *, 4 AS SORT_MAIN FROM _SRP_FINAL -- Service Room Progress\r\nUNION ALL\r\nSELECT *, 1 AS SORT_MAIN FROM _STP_FINAL -- Structures Progress\r\nUNION ALL\r\nSELECT *, 5 AS SORT_MAIN FROM _CRA_FINAL -- Corridor Progress\r\nUNION ALL\r\nSELECT *, 6 AS SORT_MAIN FROM _KOA_FINAL -- KeepOut Progress\r\n-- End of Code -- \r\n;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "BathRoom-CapQ - SaiBath",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE Sai_Bath;\r\nINSERT INTO Sai_Bath\r\nSELECT DATE(`upload_time`) AS Upload_Date,`project_id`,`tower`,\r\nCASE WHEN `Level` = 'Level 1' THEN 'Level 01'\r\n     WHEN `Level` = 'Level 2' THEN 'Level 02'\r\n     WHEN `Level` = 'Level 3' THEN 'Level 03'\r\n     WHEN `Level` = 'Level 4' THEN 'Level 04'\r\n     WHEN `Level` = 'Level 5' THEN 'Level 05'\r\n     WHEN `Level` = 'Level 6' THEN 'Level 06'\r\n     WHEN `Level` = 'Level 7' THEN 'Level 07'\r\n     WHEN `Level` = 'Level 8' THEN 'Level 08'\r\n     WHEN `Level` = 'Level 9' THEN 'Level 09'\r\n     ELSE `Level` END AS 'Level'\r\n,`Flat`,`Apartment Type`,`Count of Bathrooms`,Unpivoted.Type_of_work,\r\n#Unpivoted.Type_of_work,STR_TO_DATE(Unpivoted.Value,'%d-%b%') AS Actual_Closure,\r\ncase\r\nwhen Unpivoted.value='' then str_to_date(concat(Unpivoted.value,'1900-01-01') ,'%Y-%m-%d')\r\nwhen length(Unpivoted.value)<=6  then date_format(str_to_date(concat(Unpivoted.value,'-00'),'%d-%b-%y'),'0000-%m-%d')\r\nelse date_format(str_to_date(Unpivoted.value,'%d-%b-%y'),'0000-%m-%d') \r\nend as Actual_Closure,\r\n `Sequence`,`Day`\r\n-- DENSE_RANK() OVER (PARTITION BY `Level` ORDER BY id_)\r\nFROM BATHROOM_CAPQ CROSS JOIN LATERAL \r\n            (SELECT    `Final Coat Stamp Plan (L7)`,    'Final Coat Stamp Plan (L7)'\r\n                UNION ALL    SELECT    `Final Coat Stamp Actual (L7)`,    'Final Coat Stamp Actual (L7)'\r\n                UNION ALL   SELECT    `Deep Cleaning Plan`, 'Deep Cleaning Plan'\r\n                UNION ALL    SELECT    `Deep Cleaning Actual`,    'Deep Cleaning Actual'\r\n                UNION ALL   SELECT  `MEP T & C Plan` , 'MEP T & C Plan'\r\n                UNION ALL    SELECT    `MEP T & C Actual`,    'MEP T & C Actual'\r\n                UNION ALL   SELECT  `MEP Stamp Closure Plan (L8)`, 'MEP Stamp Closure Plan (L8)'\r\n                UNION ALL    SELECT    `MEP Stamp Closure Actual (L8)`,    'MEP Stamp Closure Actual (L8)'\r\n                UNION ALL   SELECT  `Civil Stamp Closure Plan (L9)`, 'Civil Stamp Closure Plan (L9)'\r\n                UNION ALL    SELECT    `Civil Stamp Closure Actual (L9)`,    'Civil Stamp Closure Actual (L9)'\r\n) AS Unpivoted(Value,Type_of_work)\r\nLEFT JOIN BATHROOM_CAPQ_MAP bcm ON bcm.Activity = Unpivoted.Type_of_work;\r\n\r\n/**/\r\nSELECT 1;\r\n\r\n",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Engineering Drawing",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_engineeringdrawing;\r\nINSERT INTO f_pln_engineeringdrawing\r\nWITH AA AS (\r\n    SELECT \r\n        DATE(upload_time) AS Upload_Date,\r\n        project_id,\r\n        `Type`,\r\n        `Villa Type`,\r\n        Category,\r\n        `Drawing Number`,\r\n        `Drawing Title`,\r\n        NULLIF(`Scheduled Date`,'') AS `Scheduled Date`,\r\n        `PNCA commitment`,\r\n        DENSE_RANK () OVER (PARTITION BY  project_id ORDER BY  DATE(upload_time) DESC) Project_Udate_DRANK,\r\n        NULLIF(R0,'') AS R0,\r\n        NULLIF(`R0-Trans_Id`,'') AS `R0-Trans_Id`,\r\n        NULLIF(R1,'') AS R1,\r\n        NULLIF(`R1-Trans_Id`,'') AS `R1-Trans_Id`,\r\n        NULLIF(R2,'') AS R2,\r\n        NULLIF(`R2-Trans_Id`,'') AS `R2-Trans_Id`,\r\n        NULLIF(R3,'') AS R3,\r\n        NULLIF(`R3-Trans_Id`,'') AS `R3-Trans_Id`,\r\n        NULLIF(R4,'') AS R4,\r\n        NULLIF(`R4-Trans_Id`,'') AS `R4-Trans_Id`,\r\n        NULLIF(R5,'') AS R5,\r\n        NULLIF(`R5-Trans_Id`,'') AS `R5-Trans_Id`,\r\n        NULLIF(R6,'') AS R6,\r\n        NULLIF(`R6-Trans_Id`,'') AS `R6-Trans_Id`,\r\n        NULLIF(R7,'') AS R7,\r\n        NULLIF(`R7-Trans_Id`,'') AS `R7-Trans_Id`,\r\n        NULLIF(R8,'') AS R8,\r\n        NULLIF(`R8-Trans_Id`,'') AS `R8-Trans_Id`,\r\n        NULLIF(R9,'') AS R9,\r\n        NULLIF(`R9-Trans_Id`,'') AS `R9-Trans_Id`,\r\n        NULLIF(R10,'') AS R10,\r\n        NULLIF(`R10-Trans_Id`,'') AS `R10-Trans_Id`,\r\n        NULLIF(R11,'') AS R11,\r\n        NULLIF(`R11-Trans_Id`,'') AS `R11-Trans_Id`,\r\n        NULLIF(R12,'') AS R12,\r\n        NULLIF(`R12-Trans_Id`,'') AS `R12-Trans_Id`,\r\n        NULLIF(R11,'') AS R13,\r\n        NULLIF(`R11-Trans_Id`,'') AS `R13-Trans_Id`,\r\n        NULLIF(R12,'') AS R14,\r\n        NULLIF(`R12-Trans_Id`,'') AS `R14-Trans_Id`,\r\n        NULLIF(R13,'') AS R15,\r\n        NULLIF(`R13-Trans_Id`,'') AS `R15-Trans_Id`,\r\n        NULLIF(R14,'') AS R16,\r\n        NULLIF(`R14-Trans_Id`,'') AS `R16-Trans_Id`,\r\n        NULLIF(R15,'') AS R17,\r\n        NULLIF(`R15-Trans_Id`,'') AS `R17-Trans_Id`,\r\n        NULLIF(R16,'') AS R18,\r\n        NULLIF(`R16-Trans_Id`,'') AS `R18-Trans_Id`,\r\n        NULLIF(R17,'') AS R19,\r\n        NULLIF(`R17-Trans_Id`,'') AS `R19-Trans_Id`,\r\n        NULLIF(R18,'') AS R20,\r\n        NULLIF(`R18-Trans_Id`,'') AS `R20-Trans_Id`,\r\n        NULLIF(R19,'') AS R21,\r\n        NULLIF(`R19-Trans_Id`,'') AS `R21-Trans_Id`,\r\n        NULLIF(R20,'') AS R22,\r\n        NULLIF(`R20-Trans_Id`,'') AS `R22-Trans_Id`,\r\n        NULLIF(R21,'') AS R23,\r\n        NULLIF(`R21-Trans_Id`,'') AS `R23-Trans_Id`,\r\n        NULLIF(R22,'') AS R24,\r\n        NULLIF(`R22-Trans_Id`,'') AS `R24-Trans_Id`,\r\n        NULLIF(R23,'') AS R25,\r\n        NULLIF(`R23-Trans_Id`,'') AS `R25-Trans_Id`\r\n    FROM O_PLN_DRAWING_DETAIL_DRAW\r\n    WHERE (`Type` IS NOT NULL AND TRIM(`Type`) NOT IN (''))),\r\nAB AS (\r\nSELECT * FROM AA\r\nWHERE Project_Udate_DRANK = 1) SELECT * FROM  AB;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Corrider",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_corridor;\r\nINSERT INTO f_pln_corridor\r\nWITH PRE_STAGGING AS(\r\n        SELECT DATE(O_PLN_CORRIDOR_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_CORRIDOR_RAW.project_id,\r\n        O_PLN_CORRIDOR_RAW.tower,\r\n        O_PLN_CORRIDOR_RAW.Level,\r\n        'Corridor' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_CORRIDOR_MAP.ACTIVITY_ID,\r\n        O_PLN_CORRIDOR_MAP.SBU_ID,\r\n        O_PLN_CORRIDOR_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    FROM O_PLN_CORRIDOR_RAW\r\n    CROSS JOIN LATERAL (\r\n                        SELECT\t`Corridor MEP Marking for Builders Work`\t,\t'Corridor MEP Marking for Builders Work'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Cutting & Chasing of Blockwork`\t,\t'Corridor Cutting & Chasing of Blockwork'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor MEP Services Installation`\t,\t'Corridor MEP Services Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Wall MEP Services Packing`\t,\t'Corridor Wall MEP Services Packing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Plaster`\t,\t'Corridor Plaster'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Screed`\t,\t'Corridor Screed'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Grinding Clearance for Tile`\t,\t'Grinding Clearance for Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Tile Marking`\t,\t'Tile Marking'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Bull Marking`\t,\t'Bull Marking'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Electrical Conduits`\t,\t'Electrical Conduits'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Cold water supply`\t,\t'Cold water supply'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Fire Fighting Pipe Support`\t,\t'Fire Fighting Pipe Support'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Modular Instalation`\t,\t'Modular Instalation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Framing Clearance by MEP`\t,\t'Framing Clearance by MEP'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Center line marking for Facade Installation`\t,\t'Center line marking for Facade Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Curtain Wall Box Installation`\t,\t'Corridor Curtain Wall Box Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Curtain Wall Frame Installation`\t,\t'Corridor Curtain Wall Frame Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Curtain Wall Glass Installation`\t,\t'Corridor Curtain Wall Glass Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Curtain Wall Flashing Installation`\t,\t'Corridor Curtain Wall Flashing Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Floor Tile`\t,\t'Corridor Floor Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Wall Tile`\t,\t'Corridor Wall Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Fire Hose Reel Cabinet Installation`\t,\t'Fire Hose Reel Cabinet Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Grouting for Framing Clearance`\t,\t'Grouting for Framing Clearance'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor FC Framing`\t,\t'Corridor FC Framing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Access Panel Markings & Inspection`\t,\t'MEP Access Panel Markings & Inspection'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Works for Boarding Clearance `\t,\t'MEP Works for Boarding Clearance '\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Framing Levelling`\t,\t'Framing Levelling'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor FC Boarding`\t,\t'Corridor FC Boarding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Joint Taping & Sanding`\t,\t'Joint Taping & Sanding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Ceiling Primer`\t,\t'Corridor Ceiling Primer'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Ceiling Stucco (1st and 2nd Coat)`\t,\t'Corridor Ceiling Stucco (1st and 2nd Coat)'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Ceiling First Coat Paint`\t,\t'Corridor Ceiling First Coat Paint'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Grouting`\t,\t'Corridor Grouting'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Silicone`\t,\t'Corridor Silicone'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Left over Screed`\t,\t'Left over Screed'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Left Over Area Floor Tile`\t,\t'Left Over Area Floor Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Left Over Area Wall Tile`\t,\t'Left Over Area Wall Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Remaining Grout and Silicone Works`\t,\t'Remaining Grout and Silicone Works'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor MEP Final Fixtures`\t,\t'Corridor MEP Final Fixtures'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Corridor Final Coat Paint`\t,\t'Corridor Final Coat Paint'\r\n                        )as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_CORRIDOR_MAP \r\n    ON TRIM(Column_Name.Type_of_work) = TRIM(O_PLN_CORRIDOR_MAP.ACTIVITY_SEQUENCE)\r\n    WHERE VALUE IS NOT NULL),\r\nOUTPUT_FINAL AS (\r\n    SELECT \r\n        PS.Upload_Date ,\r\n        PS.project_id    ,\r\n        PS.tower    ,\r\n        PS.`Level`    ,\r\n        PS.sclicer    ,\r\n        CASE \r\n            WHEN PS.value IN ('','NA') THEN '0%'\r\n            ELSE PS.value\r\n        END AS value,\r\n        PS.Type_of_work    ,\r\n        PS.ACTIVITY_ID    ,\r\n        PS.SBU_ID    ,\r\n        PS.CATEGORY    ,\r\n        OLMA.level_map,\r\n        CASE \r\n            WHEN TRIM(PS.CATEGORY) IN('Builders Work') THEN  2\r\n            WHEN TRIM(PS.CATEGORY) IN('MEP') THEN  12\r\n            WHEN TRIM(PS.CATEGORY) IN('Plaster') THEN  3\r\n            WHEN TRIM(PS.CATEGORY) IN('Screed') THEN  5\r\n            WHEN TRIM(PS.CATEGORY) IN('Tile') THEN  9\r\n            WHEN TRIM(PS.CATEGORY) IN('Marble') THEN  10\r\n            WHEN TRIM(PS.CATEGORY) IN('Facade') THEN  11\r\n            WHEN TRIM(PS.CATEGORY) IN('Gypsum') THEN  6\r\n            WHEN TRIM(PS.CATEGORY) IN('Paint') THEN  8\r\n            ELSE 20\r\n        END AS CATEGORY_SORT\r\n    FROM PRE_STAGGING PS\r\n        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n            ON PS.`Level` = OLMA.`level`\r\n    WHERE PS.Project_Udate_DRANK = 1)\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        sclicer,\r\n        CAST(REPLACE(value,'%','') AS DECIMAL)/100 AS value,\r\n        Type_of_work,\r\n        ACTIVITY_ID,\r\n        SBU_ID,\r\n        CATEGORY,\r\n        level_map,\r\n        CATEGORY_SORT\r\n    FROM OUTPUT_FINAL;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Keep Out SLA",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_keepout_2;\r\nINSERT INTO f_pln_keepout_2\r\nWITH KEEPOUTS_MAIN AS(\r\n    SELECT\r\n        DATE(OPKDR.upload_time) AS Upload_Date,\r\n        OPKDR.project_id    ,\r\n        OPKDR.tower    ,\r\n        OPKDR.`Level`,\r\n        OPKDR.`Flat No.`,\r\n        OPKDR.`Apartment Type`,\r\n        OPKM.SBU_ID,\r\n        OPKM.ACTIVITY_ID,\r\n        OPKM.ENGINEER_RESPONSIBLE,\r\n        OPKM.PREDECESSOR_DATA,\r\n        Column_Name.Types_of_Activities,\r\n        Column_Name.value_plan,\r\n        Column_Name.value_act,\r\n        DENSE_RANK() OVER(PARTITION BY OPKDR.project_id ORDER BY DATE(OPKDR.upload_time) DESC) AS Dense_Ranker\r\n    FROM O_PLN_KEEPOUT_DETAILED_RAW OPKDR\r\n    CROSS JOIN LATERAL (\r\n                        SELECT         `WIR - Final Coat Paint Plan`                    ,`WIR - Final Coat Paint Actual` ,'WIR - Final Coat Paint'\r\n                UNION ALL SELECT      `F6 / F7 Final Coat Paint - Stamp Closure Plan`     ,`F6 / F7 Final Coat Paint - Stamp Closure Actual`,'F6 / F7 Final Coat Paint - Stamp Closure'\r\n                UNION ALL SELECT      `Deep Cleaning Plan`                                 ,`Deep Cleaning Actual`,'Deep Cleaning'\r\n                UNION ALL SELECT      `Facade Stamp Closing Plan`                         ,`Facade Stamp Closing Actual`,'Facade Stamp Closing'\r\n                UNION ALL SELECT      `MEP Final Fixtures Plan`                         ,`MEP Final Fixtures Actual`,'MEP Final Fixtures'\r\n                UNION ALL SELECT      `MEP T&C Stamps Closure Plan`                     ,`MEP T&C Stamps Closure Actual` ,'MEP T&C Stamps Closure'\r\n                UNION ALL SELECT      `F7 Stamp Closure Plan`                             ,`F7 Stamp Closure Actual` ,'F7 Stamp Closure'\r\n                UNION ALL SELECT      `MEP NOC in Draft / Assign to MEP QC Plan`         ,`MEP NOC in Draft / Assign to MEP QC Actual`,'MEP NOC in Draft / Assign to MEP QC'\r\n                UNION ALL SELECT      `Civil NOC in Draft / Assign to Civil QC Plan`     ,`Civil NOC in Draft / Assign to Civil QC Actual` ,'Civil NOC in Draft / Assign to Civil QC'\r\n                UNION ALL SELECT      `MEP NOC Submission Plan`                         ,`MEP NOC Submission Actual`,'MEP NOC Submission' ##\r\n                UNION ALL SELECT      `CIVIL NOC Submission Plan`                         ,`CIVIL NOC Submission Actual`,'CIVIL NOC Submission' ##\r\n                UNION ALL SELECT      `Facade Field report 1st inspection Plan`         ,`Facade Field report 1st inspection Actual`,'Facade Field report 1st inspection'\r\n                UNION ALL SELECT      `Facade Field Report assign to MEP Plan`             ,`Facade Field Report assign to MEP Actual` ,'Facade Field Report assign to MEP'\r\n                UNION ALL SELECT      `MEP Stamp Field report 1st inspection Plan`         ,`MEP Stamp Field report 1st inspection Actual`,'MEP Stamp Field report 1st inspection'\r\n                UNION ALL SELECT      `MEP Field report submission Plan`                 ,`MEP Field report submission Actual` ,'MEP Field report submission'\r\n                UNION ALL SELECT      `Civil Field report 1st inspection Plan`             ,`Civil Field report 1st inspection Actual` ,'Civil Field report 1st inspection'\r\n                UNION ALL SELECT      `Civil Field Report Submission Plan`                 ,`Civil Field Report Submission Actual` ,'Civil Field Report Submission'\r\n                UNION ALL SELECT      `SCL Keep-out Stamp (N1) -Into Review Plan`         ,`SCL Keep-out Stamp (N1) -Into Review Actual` ,'SCL Keep-out Stamp (N1) -Into Review'\r\n                UNION ALL SELECT      `PNCA Keep-out (N1) Into Pending Plan`             ,`PNCA Keep-out (N1) Into Pending Actual` ,'PNCA Keep-out (N1) Into Pending'\r\n                UNION ALL SELECT      `QT Inspection Keep-out Stamp (N1) Plan`             ,`QT Inspection Keep-out Stamp (N1) Actual` ,'QT Inspection Keep-out Stamp (N1)'\r\n    ) AS Column_Name(value_plan,value_act,Types_of_Activities)\r\n    JOIN O_PLN_KEEPOUTS_MAP OPKM\r\n    ON Column_Name.Types_of_Activities = OPKM.ACTIVITY_SEQUENCE\r\n    WHERE Column_Name.value_act !='0-Jan-00'),\r\nPRE_VALIDATION_DATA AS(\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        `Flat No.`,\r\n        `Apartment Type`,\r\n        SBU_ID,\r\n        ACTIVITY_ID,\r\n        ENGINEER_RESPONSIBLE,\r\n        PREDECESSOR_DATA,\r\n        Types_of_Activities,\r\n        value_plan,\r\n        value_act\r\n    FROM KEEPOUTS_MAIN \r\n    WHERE Dense_Ranker=1),\r\nOUTPUT_1 AS (\r\n    SELECT \r\n        PVD1.Upload_Date,\r\n        PVD1.project_id,\r\n        PVD1.tower,\r\n        PVD1.`Level`,\r\n        PVD1.`Flat No.`,\r\n        PVD1.`Apartment Type`,\r\n        PVD1.SBU_ID,\r\n        PVD1.ACTIVITY_ID,\r\n        PVD1.ENGINEER_RESPONSIBLE,\r\n        PVD1.Types_of_Activities,\r\n        PVD1.PREDECESSOR_DATA,\r\n        CASE\r\n            WHEN TRIM(PVD1.value_act) IN ('','-') THEN NULL\r\n            ELSE STR_TO_DATE(PVD1.value_act,'%d-%b-%y')\r\n        END AS value_act,\r\n        CASE\r\n            WHEN TRIM(PVD2.value_act) IN ('','-') THEN NULL\r\n            ELSE STR_TO_DATE(PVD2.value_act,'%d-%b-%y')\r\n        END AS Predes_value_act,\r\n        CASE\r\n            WHEN TRIM(PVD1.value_plan) IN ('','-') THEN NULL\r\n            ELSE STR_TO_DATE(PVD1.value_plan,'%d-%b-%y')\r\n        END AS value_plan,\r\n        CASE\r\n            WHEN TRIM(PVD2.value_plan) IN ('','-') THEN NULL\r\n            ELSE STR_TO_DATE(PVD2.value_plan,'%d-%b-%y')\r\n        END AS Predes_value_plan\r\n    FROM PRE_VALIDATION_DATA PVD1 \r\n    LEFT JOIN PRE_VALIDATION_DATA PVD2\r\n         ON PVD1.project_id = PVD2.project_id\r\n        AND PVD1.tower = PVD2.tower\r\n        AND PVD1.`Level` = PVD2.`Level`\r\n        AND PVD1.`Flat No.` = PVD2.`Flat No.`\r\n        AND PVD1.PREDECESSOR_DATA = PVD2.Types_of_Activities),\r\nPRE_VALIDATION_DATA2 AS (\r\n    SELECT \r\n            PVD1.project_id,\r\n            PVD1.tower,\r\n            PVD1.`Level`,\r\n            PVD1.`Flat No.`,\r\n            PVD1.`Apartment Type`,\r\n            PVD1.Types_of_Activities,\r\n            CASE \r\n                WHEN TRIM(PVD1.value_act) IN ('','-') THEN NULL\r\n                ELSE STR_TO_DATE(PVD1.value_act,'%d-%b-%y')\r\n            END AS value_act,\r\n            CASE \r\n                WHEN TRIM(PVD1.value_plan) IN ('','-') THEN NULL\r\n                ELSE STR_TO_DATE(PVD1.value_plan,'%d-%b-%y')\r\n            END AS value_plan,\r\n            CASE \r\n                WHEN TRIM(PVD1.Types_of_Activities) IN ('MEP T&C Stamps Closure'\r\n                                            ,'Facade Field Report assign to MEP'\r\n                                            ,'MEP NOC Submission') THEN 'FROM CTE 1'\r\n                ELSE 'FROM CTE 2'\r\n            END AS Types_of_Activities_group\r\n    FROM PRE_VALIDATION_DATA PVD1\r\n    WHERE TRIM(PVD1.Types_of_Activities) IN ('MEP T&C Stamps Closure'\r\n                                    ,'Facade Field Report assign to MEP'\r\n                                    ,'MEP NOC Submission'\r\n                                    ,'MEP Field report submission'\r\n                                    ,'CIVIL NOC Submission')),\r\nAggeregate_Prdes_act AS (\r\n    SELECT \r\n        *,\r\n        DENSE_RANK() OVER(PARTITION BY project_id,tower,`Level`,`Flat No.`,`Apartment Type`,Types_of_Activities_group ORDER BY value_act DESC) AS Date_Ranker_act,\r\n    COUNT(value_act) AS Count_Act\r\n    FROM PRE_VALIDATION_DATA2 PVD1\r\n    GROUP BY project_id,tower,`Level`,`Flat No.`,`Apartment Type`,Types_of_Activities,value_act,value_plan,Types_of_Activities_group),\r\nAggeregate_Prdes_Pln AS (\r\n    SELECT \r\n        *,\r\n        DENSE_RANK() OVER(PARTITION BY project_id,tower,`Level`,`Flat No.`,`Apartment Type`,Types_of_Activities_group ORDER BY value_plan DESC) AS Date_Ranker_pln,\r\n        COUNT(value_plan) AS Count_Pln\r\n    FROM PRE_VALIDATION_DATA2 PVD1\r\n    GROUP BY project_id,tower,`Level`,`Flat No.`,`Apartment Type`,Types_of_Activities,value_act,value_plan,Types_of_Activities_group),\r\n-- Need to rework this part\r\nAggeregate_Prdes_Pln_Final AS (\r\n    SELECT \r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        `Flat No.`,\r\n        `Apartment Type`,\r\n        Types_of_Activities,\r\n        value_plan,\r\n        Types_of_Activities_group,\r\n        Date_Ranker_pln,\r\n        SUM(Count_Pln) AS Count_Pln\r\n    FROM Aggeregate_Prdes_Pln   GROUP BY 1,2,3,4,5,6,7,8 ORDER BY Date_Ranker_pln),\r\nAggeregate_Prdes_Act_Final AS (\r\n    SELECT \r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        `Flat No.`,\r\n        `Apartment Type`,\r\n        Types_of_Activities,\r\n        value_act,\r\n        Types_of_Activities_group,\r\n        Date_Ranker_act,\r\n        SUM(Count_act) AS Count_act\r\n    FROM Aggeregate_Prdes_act  GROUP BY 1,2,3,4,5,6,7,8 ORDER BY Date_Ranker_act),\r\nAggeregate_Prdes AS (\r\n    SELECT \r\n        APP.project_id,\r\n        APP.tower,\r\n        APP.`Level`,\r\n        APP.`Flat No.`,\r\n        APP.`Apartment Type`,\r\n        APP.Types_of_Activities_group,\r\n        APP.value_plan,\r\n        APA.value_act,\r\n        APA.Date_Ranker_act,\r\n        APP.Date_Ranker_Pln,\r\n--         APA.Count_Act,\r\n--         APP.Count_Pln,\r\n--         Chnaged this based on sai's Requirement\r\n        CASE \r\n            WHEN APP.Types_of_Activities_group = 'FROM CTE 1' AND APA.Count_Act = 3 THEN 1\r\n            WHEN APP.Types_of_Activities_group = 'FROM CTE 2' AND APA.Count_Act = 2 THEN 1\r\n            ELSE NULL\r\n        END AS Count_Act,\r\n        CASE \r\n            WHEN APP.Types_of_Activities_group = 'FROM CTE 1' AND APP.Count_Pln = 3 THEN 1\r\n            WHEN APP.Types_of_Activities_group = 'FROM CTE 2' AND APP.Count_Pln = 2 THEN 1\r\n            ELSE NULL\r\n        END AS Count_Pln\r\n    FROM Aggeregate_Prdes_Pln_Final APP\r\n    LEFT JOIN Aggeregate_Prdes_Act_Final APA\r\n        ON APP.project_id = APA.project_id\r\n        AND APP.tower = APA.tower\r\n        AND APP.`Level` = APA.`Level`\r\n        AND APP.`Flat No.` = APA.`Flat No.`\r\n        AND APP.`Apartment Type` = APA.`Apartment Type`\r\n        AND APP.Types_of_Activities_group = APA.Types_of_Activities_group\r\n        AND APP.Date_Ranker_Pln = APA.Date_Ranker_act\r\n),\r\n-- Till Here\r\n-- Aggeregate_Prdes_Dranker AS (\r\n--     SELECT \r\n--         APP.project_id,\r\n--         APP.tower,\r\n--         APP.`Level`,\r\n--         APP.`Flat No.`,\r\n--         APP.`Apartment Type`,\r\n--         APP.Types_of_Activities_group,\r\n--         APP.value_plan,\r\n--         APA.value_act,\r\n--         APA.Date_Ranker_act,\r\n--         APP.Date_Ranker_Pln\r\n--     FROM Aggeregate_Prdes_Pln APP\r\n--     LEFT JOIN Aggeregate_Prdes_act APA\r\n--         ON APP.project_id = APA.project_id\r\n--         AND APP.tower = APA.tower\r\n--         AND APP.`Level` = APA.`Level`\r\n--         AND APP.`Flat No.` = APA.`Flat No.`\r\n--         AND APP.`Apartment Type` = APA.`Apartment Type`\r\n--         AND APP.Types_of_Activities = APA.Types_of_Activities\r\n--         AND APP.Types_of_Activities_group = APA.Types_of_Activities_group),\r\nOUTPUT_Final_A as (\r\n    SELECT \r\n        PVD1.Upload_Date,\r\n        PVD1.project_id,\r\n        PVD1.tower,\r\n        PVD1.`Level`,\r\n        PVD1.`Flat No.`,\r\n        PVD1.`Apartment Type`,\r\n        PVD1.SBU_ID,\r\n        PVD1.ACTIVITY_ID,\r\n        PVD1.ENGINEER_RESPONSIBLE,\r\n        PVD1.Types_of_Activities,\r\n        PVD1.PREDECESSOR_DATA,\r\n        PVD1.value_plan,\r\n        PVD2.Count_Pln,\r\n        CASE\r\n            WHEN TRIM(PVD1.PREDECESSOR_DATA) IN ('FROM CTE 1','FROM CTE 2') THEN PVD2.value_plan\r\n            ELSE Predes_value_plan\r\n        END AS Predes_value_plan,\r\n        PVD1.value_act,\r\n        PVD2.Count_Act,\r\n        CASE\r\n            WHEN TRIM(PVD1.PREDECESSOR_DATA) IN ('FROM CTE 1','FROM CTE 2') THEN PVD2.value_act\r\n            ELSE Predes_value_act\r\n        END AS Predes_value_act\r\n    FROM OUTPUT_1 PVD1 LEFT JOIN Aggeregate_Prdes PVD2\r\n        ON PVD1.project_id = PVD2.project_id\r\n        AND PVD1.tower = PVD2.tower\r\n        AND PVD1.`Level` = PVD2.`Level`\r\n        AND PVD1.`Flat No.` = PVD2.`Flat No.`\r\n        AND PVD1.PREDECESSOR_DATA = PVD2.Types_of_Activities_group),\r\nADD_DATE_FORMAT AS (\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        tower,\r\n        `Level`,\r\n        `Flat No.`,\r\n        SBU_ID,\r\n        `Apartment Type`,\r\n        ACTIVITY_ID,\r\n        ENGINEER_RESPONSIBLE,\r\n        Types_of_Activities,\r\n        CASE \r\n            WHEN (value_plan IS NULL OR TRIM(value_plan) = ('')) \r\n                AND  (Predes_value_plan IS NOT NULL OR TRIM(Predes_value_plan) != ('')) THEN Upload_Date\r\n            ELSE value_plan\r\n        END AS delay_pln,\r\n        value_plan,\r\n        Count_Pln,\r\n        Predes_value_plan,\r\n        PREDECESSOR_DATA AS Predecessor_Activities,\r\n        CASE \r\n            WHEN (value_act IS NULL OR TRIM(value_act) = ('')) \r\n                AND (Predes_value_act IS NOT NULL OR TRIM(Predes_value_act) != ('')) THEN Upload_Date\r\n            ELSE value_act \r\n        END AS delay_act,\r\n        value_act,\r\n        Count_act,\r\n        Predes_value_act\r\n    FROM OUTPUT_Final_A\r\n) ,\r\nOUTPUT_Final_B AS (\r\n    SELECT \r\n        ADF.*,\r\n        DATEDIFF(ADF.delay_pln,ADF.Predes_value_plan) AS Planned_SLA,\r\n        DATEDIFF(ADF.delay_act,ADF.Predes_value_act) AS Actual_SLA,\r\n        OPKM.Predecessor_Activity_allowed_lag AS Given_SLA\r\n    FROM ADD_DATE_FORMAT ADF\r\n        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n            ON ADF.`Level` = OLMA.`level`\r\n        LEFT JOIN O_PLN_KEEPOUTS_MAP OPKM \r\n            ON ADF.Types_of_Activities = OPKM.ACTIVITY_SEQUENCE),\r\nOUTPUT_ AS (\r\n    SELECT \r\n        ADF.*,\r\n        CASE \r\n            WHEN ADF.Actual_SLA <= 0 THEN     '<= 0'\r\n            WHEN ADF.Actual_SLA = 1 THEN     '= 1'\r\n            WHEN ADF.Actual_SLA = 2 THEN     '= 2'\r\n            WHEN ADF.Actual_SLA = 3 THEN     '= 3'\r\n            WHEN ADF.Actual_SLA = 4 THEN     '= 4'\r\n            WHEN ADF.Actual_SLA = 5 THEN     '= 5'\r\n            WHEN ADF.Actual_SLA = 6 THEN     '= 6'\r\n            WHEN ADF.Actual_SLA = 7 THEN     '= 7'\r\n            WHEN ADF.Actual_SLA > 7 THEN     '> 7'\r\n            ELSE NULL\r\n        END AS Actual_SLA_Title \r\n    FROM OUTPUT_Final_B ADF) \r\nSELECT \r\n    Upload_Date AS `Date`,\r\n    project_id,\r\n    tower AS `Tower`,\r\n    `Level`,\r\n    `Flat No.`,\r\n    SBU_ID,\r\n    `Apartment Type`,\r\n    ACTIVITY_ID,\r\n    ENGINEER_RESPONSIBLE AS `Engineer Responsible`,\r\n    Types_of_Activities AS `Activity`,\r\n    delay_pln,\r\n    value_plan AS `Plan`,\r\n    Count_Pln,\r\n    Predes_value_plan AS `Predecessor Plan`,\r\n    CASE \r\n        WHEN TRIM(Predecessor_Activities) IN ('FROM CTE 1','FROM CTE 2') AND Count_Pln = 1 THEN value_plan \r\n        WHEN TRIM(Predecessor_Activities) IN ('FROM CTE 1','FROM CTE 2') AND Count_Pln != 1 THEN NULL\r\n        ELSE Predes_value_plan\r\n    END AS `Predecessor Plan Work Front`,\r\n    Predecessor_Activities AS Predecessor,\r\n    delay_act,\r\n    value_act AS `Actual`,\r\n    Count_act,\r\n    Predes_value_act AS `Predecessor Actual`,\r\n    CASE\r\n        WHEN TRIM(Predecessor_Activities) IN ('FROM CTE 1','FROM CTE 2') AND Count_Act = 1 THEN value_act\r\n        WHEN TRIM(Predecessor_Activities) IN ('FROM CTE 1','FROM CTE 2') AND Count_Act != 1 THEN NULL\r\n        ELSE Predes_value_act\r\n    END AS `Predecessor Actual Work Front`,\r\n    CASE WHEN Planned_SLA <= 0 THEN 0 ELSE Planned_SLA END AS `SLA Planned`,\r\n    CASE WHEN Actual_SLA <= 0 THEN 0 ELSE Actual_SLA END AS `SLA Actual`,\r\n    Given_SLA AS SLA,\r\n    Actual_SLA_Title  AS `Actual SLA Title`\r\nFROM OUTPUT_ ;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T23:08:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Structures",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_structures;\r\nINSERT INTO f_pln_structures\r\n     WITH POUR_RAW AS (\r\n        SELECT\r\n            DATE(upload_time) as Upload_Date,\r\n            project_id,\r\n            `Level`,\r\n            Column_Name.*,\r\n            DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(upload_time) DESC) as `DENSE_RANK` \r\n        FROM O_PLN_STRUCTURE_POURING\r\n        cross join lateral (\r\n                            SELECT `Core Wall 1` , 'Core Wall 1'\r\n                            UNION ALL SELECT `Core Wall 2` , 'Core Wall 2'\r\n                            UNION ALL SELECT `Core Wall 3` , 'Core Wall 3'\r\n                            UNION ALL SELECT `Core Wall 4` , 'Core Wall 4'\r\n                            UNION ALL SELECT `Core Wall 5` , 'Core Wall 5'\r\n                            UNION ALL SELECT `Core Wall 6` , 'Core Wall 6'\r\n                            UNION ALL SELECT `Core Wall 7` , 'Core Wall 7'\r\n                            UNION ALL SELECT `Core Wall 8` , 'Core Wall 8'\r\n                            UNION ALL SELECT `Core Wall 9` , 'Core Wall 9'\r\n                            UNION ALL SELECT `Core Wall 10` , 'Core Wall 10'\r\n                            UNION ALL SELECT `Core Wall 11` , 'Core Wall 11'\r\n                            UNION ALL SELECT `Core Wall 12` , 'Core Wall 12'\r\n                            UNION ALL SELECT `Core Wall 13` , 'Core Wall 13'\r\n                            UNION ALL SELECT `Core Wall 14` , 'Core Wall 14'\r\n                            UNION ALL SELECT `Core Wall 15` , 'Core Wall 15'\r\n                            UNION ALL SELECT `Core Wall 16` , 'Core Wall 16'\r\n                            UNION ALL SELECT `Core Wall 17` , 'Core Wall 17'\r\n                            UNION ALL SELECT `Core Wall 18` , 'Core Wall 18'\r\n                            UNION ALL SELECT `Core Wall 19` , 'Core Wall 19'\r\n                            UNION ALL SELECT `Core Wall 20` , 'Core Wall 20'\r\n                            UNION ALL SELECT `Slab 1` , 'Slab 1'\r\n                            UNION ALL SELECT `Slab 2` , 'Slab 2'\r\n                            UNION ALL SELECT `Slab 3` , 'Slab 3'\r\n                            UNION ALL SELECT `Slab 4` , 'Slab 4'\r\n                            UNION ALL SELECT `Slab 5` , 'Slab 5'\r\n                            UNION ALL SELECT `Slab 6` , 'Slab 6'\r\n                            UNION ALL SELECT `Slab 7` , 'Slab 7'\r\n                            UNION ALL SELECT `Slab 8` , 'Slab 8'\r\n                            UNION ALL SELECT `Slab 9` , 'Slab 9'\r\n                            UNION ALL SELECT `Slab 10` , 'Slab 10'\r\n                            UNION ALL SELECT `Slab 11` , 'Slab 11'\r\n                            UNION ALL SELECT `Slab 12` , 'Slab 12'\r\n                            UNION ALL SELECT `Slab 13` , 'Slab 13'\r\n                            UNION ALL SELECT `Slab 14` , 'Slab 14'\r\n                            UNION ALL SELECT `Slab 15` , 'Slab 15'\r\n                            UNION ALL SELECT `Slab 16` , 'Slab 16'\r\n                            UNION ALL SELECT `Slab 17` , 'Slab 17'\r\n                            UNION ALL SELECT `Slab 18` , 'Slab 18'\r\n                            UNION ALL SELECT `Slab 19` , 'Slab 19'\r\n                            UNION ALL SELECT `Slab 20` , 'Slab 20'\r\n                            UNION ALL SELECT `Staircase 1` , 'Staircase 1'\r\n                            UNION ALL SELECT `Staircase 2` , 'Staircase 2'\r\n                            UNION ALL SELECT `Staircase 3` , 'Staircase 3'\r\n                            UNION ALL SELECT `Staircase 4` , 'Staircase 4'\r\n                            UNION ALL SELECT `Staircase 5` , 'Staircase 5'\r\n                            UNION ALL SELECT `Staircase 6` , 'Staircase 6'\r\n                            UNION ALL SELECT `Staircase 7` , 'Staircase 7'\r\n                            UNION ALL SELECT `Staircase 8` , 'Staircase 8'\r\n                            UNION ALL SELECT `Staircase 9` , 'Staircase 9'\r\n                            UNION ALL SELECT `Staircase 10` , 'Staircase 10'\r\n                            UNION ALL SELECT `Staircase 11` , 'Staircase 11'\r\n                            UNION ALL SELECT `Staircase 13` , 'Staircase 13'\r\n                            UNION ALL SELECT `Staircase 14` , 'Staircase 14'\r\n                            UNION ALL SELECT `Staircase 15` , 'Staircase 15'\r\n                            UNION ALL SELECT `Staircase 16` , 'Staircase 16'\r\n                            UNION ALL SELECT `Staircase 17` , 'Staircase 17'\r\n                            UNION ALL SELECT `Staircase 18` , 'Staircase 18'\r\n                            UNION ALL SELECT `Staircase 19` , 'Staircase 19'\r\n                            UNION ALL SELECT `Staircase 20` , 'Staircase 20'\r\n                        )as Column_Name(value,\r\n                        `Pour`) WHERE value IS NOT NULL AND TRIM(value) not in ('')),\r\n    PRE_STAGGING_POUR AS (\r\n                            SELECT\r\n                                PR.Upload_Date,\r\n                                PR.project_id,\r\n                                OPSPM.Project_Identifier,\r\n                                PR.`Level`,\r\n                                STR_TO_DATE(PR.value,'%d-%b-%y') AS value,\r\n                                PR.Pour,\r\n                                OPSPM.Pour_count,\r\n                                OPSPM.area,\r\n                                OPSPM.Sequence_of_Appearance,\r\n                                OPSPM.type_of_pour,\r\n                                OPSPM.Sort_ID\r\n                            FROM POUR_RAW PR \r\n                                LEFT JOIN (SELECT \r\n                                                * \r\n                                            FROM O_PLN_STRUCTURES_POUR_MAP OPSPM \r\n                                                LEFT JOIN PROJECTS P \r\n                                                    ON OPSPM.project_id = P.Project_Identifier) AS OPSPM\r\n                                ON PR.POUR = OPSPM.type_of_pour \r\n                                    AND PR.project_id = OPSPM.Project_Identifier\r\n                                WHERE `DENSE_RANK` = 1 ORDER BY 1,2),\r\n    PRE_STAGGING_DATEDIFF AS (\r\n                            SELECT \r\n                                PS.Project_Identifier, \r\n                                PS.area,\r\n                                PS.`LEVEL`, \r\n                                PS.Pour,\r\n                                PS.value,\r\n                                LAG(PS.VALUE) over(partition by PS.Project_Identifier,PS.Pour order by PS.Pour,value) as Next_Date,\r\n                                DATEDIFF(PS.value,LAG(PS.VALUE) over(partition by PS.Project_Identifier,PS.Pour order by PS.Pour,PS.value)) as sa\r\n                            FROM PRE_STAGGING_POUR PS \r\n                                WHERE LOWER(PS.Pour) like 'slab%' \r\n--                                     AND LOWER(PS.`level`) NOT LIKE 'grade%' \r\n                                        ORDER BY PS.Pour,PS.value)\r\n    SELECT\r\n        PSP.Upload_Date,\r\n        PSP.Project_id as Project_Identifier,\r\n        PSP.area,\r\n        OLMA.level_map,\r\n        PSP.`Level`,\r\n        PSP.Pour_count,\r\n        PSP.Pour,\r\n        PSP.Sequence_of_Appearance,\r\n        PSP.value,\r\n        PSD.Next_Date,\r\n        PSD.sa as Avg_days,\r\n        CASE \r\n            WHEN PSP.area = 'Tower' THEN     1\r\n            WHEN PSP.area = 'Podium' THEN     2\r\n            WHEN PSP.area = 'Podium-TA' THEN 3\r\n            WHEN PSP.area = 'Tower A' THEN     4\r\n            WHEN PSP.area = 'Podium-TB' THEN 5\r\n            WHEN PSP.area = 'Tower B' THEN     6\r\n            WHEN PSP.area = 'Tower C' THEN     7\r\n            WHEN PSP.area = 'Tower D' THEN     8\r\n        ELSE NULL\r\n        END AS View_Map,\r\n        CASE \r\n            WHEN PSP.value < CURRENT_DATE() THEN 1\r\n            ELSE 0\r\n        END AS value_Average\r\n    FROM PRE_STAGGING_POUR PSP\r\n    LEFT JOIN PRE_STAGGING_DATEDIFF PSD \r\n        ON PSP.Project_Identifier = PSD.Project_Identifier\r\n        AND PSP.Pour = PSD.Pour\r\n        AND PSP.value = PSD.value\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA ON \r\n    PSP.`Level` = OLMA.`level` order by 1,2,3,4,5,6,8;\r\n\r\n    /**/\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wooden Door Delivery",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE door_delivery_m;\r\n\r\nINSERT INTO door_delivery_m\r\nWITH AA AS (\r\nSELECT \r\n    DATE(upload_time) AS Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    `Sr. No.`,\r\n    Building,\r\n    NULLIF(`Delivery Order No`,'') AS `Delivery Order No`,\r\n    NULLIF(`Delivery Date`,'') AS `Delivery Date`,\r\n    TRIM(`Door Type`) AS `Door Type`,\r\n    `Element`,\r\n    `Fire Rating`,\r\n    Orientation,\r\n--     `Quantity (Sets)`,\r\n--     `Quantity (Nos)`,\r\n    CASE \r\n        WHEN TRIM(`Element`) = 'Architrave' AND `Quantity (Nos)` NOT IN ('') THEN `Quantity (Nos)`/2\r\n        WHEN TRIM(`Element`) = 'Architrave' AND `Quantity (Nos)` IN ('') THEN `Quantity (Sets)`\r\n        WHEN TRIM(`Element`) != 'Architrave' THEN `Quantity (Nos)`\r\n    END AS ASA,    \r\n    Remarks,\r\n    Vendor,\r\n    DENSE_RANK () OVER(PARTITION BY project_id ORDER BY DATE(upload_time) DESC) AS AASD\r\nFROM O_PLN_DOOR_DELIVERY_RAW),\r\n    DATA_1 AS(\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        `Delivery Order No`,\r\n        `Delivery Date`,\r\n        `Door Type`,\r\n        `Element`,\r\n        Vendor,\r\n        sum(ASA),\r\n        MIN(ASA),\r\n       'Dates_Used' AS Used_Data\r\n    FROM AA WHERE AASD = 1 AND `Delivery Order No` IS NOT NULL\r\n    GROUP BY 1,2,3,4,5,6,7 ORDER BY 1,2,3,4,5,6),\r\n    Delivery AS (\r\n    SELECT \r\n        DATE(DD.Upload_time) AS Upload_Date,\r\n        DD.project_id,\r\n        TRIM(DD.`Door Type`) AS `Door Type`,\r\n        DD.`Element`,\r\n        DD.Vendor,\r\n        DD.`Delivery Order No`,\r\n        DD.`Delivery Date`,\r\n        DD.`Quantity (Sets)`,\r\n        DD.`Quantity (Nos)`, DENSE_RANK () OVER(PARTITION BY DD.project_id ORDER BY DATE(DD.Upload_time) desc) AS KASD\r\n    FROM O_PLN_DOOR_DELIVERY_RAW DD\r\n        WHERE `Door Type` NOT IN ('','-')),\r\n    Set_Count AS(\r\n            SELECT\r\n                D.Upload_Date,\r\n                D.project_id,\r\n                D.`Door Type`,\r\n                D.`Element`,\r\n                D.Vendor,\r\n                D.`Delivery Order No`,\r\n                D.`Delivery Date`,\r\n                SUM(D.`Quantity (Sets)`) AS Set_C,\r\n                SUM(D.`Quantity (Nos)`) AS Qty_C\r\n            FROM Delivery D WHERE KASD = 1 Group by 1,2,3,4,5,6,7),\r\n    FOR_Architrave AS(\r\n            SELECT \r\n                SC.Upload_Date,\r\n                SC.project_id,\r\n                SC.`Door Type`,\r\n                SC.`Element`,\r\n                SC.Vendor,\r\n                SC.`Delivery Order No`,\r\n                SC.`Delivery Date`,\r\n                SC.Set_C,\r\n                SC.Qty_C,\r\n                CASE WHEN `Element` = ('Architrave') THEN Qty_C/2 ELSE Qty_C END AS Qty_S\r\n            FROM Set_Count SC GROUP BY 1,2,3,4,5,6,7,8,9,10 order by 2),\r\n    Pre_Min_C AS(\r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Door Type`,\r\n                `Element`,\r\n                 Vendor,\r\n                 `Delivery Order No`,\r\n                `Delivery Date`,\r\n                Set_C + Qty_S AS Qty_Delivered\r\n            FROM FOR_Architrave GROUP BY 1,2,3,4,5,6,7 order by 2),\r\n    Min_Count AS(\r\n            SELECT \r\n                project_id,\r\n                `Door Type`,\r\n                MIN(Qty_Delivered) AS Total_Delivered\r\n            FROM Pre_Min_C\r\n            Group by 1,2 ORDER BY 2),\r\n    Pre_Final_Count AS (        \r\n            SELECT\r\n                PFC.Upload_Date,\r\n                PFC.project_id,\r\n                PFC.`Door Type`,\r\n                CASE WHEN PFC.`Door Type`= 'TD1' THEN '1'\r\n                     WHEN PFC.`Door Type`= 'TD2' THEN '2'\r\n                     WHEN  PFC.`Door Type`= 'TD3' THEN '3'\r\n                     WHEN  PFC.`Door Type`= 'TD4' THEN '4'\r\n                     WHEN  PFC.`Door Type`= 'TD5' THEN '5'\r\n                     WHEN  PFC.`Door Type`= 'TD6' THEN '6'\r\n                     WHEN   PFC.`Door Type`= 'TD7' THEN '7'\r\n                ELSE '0' End AS Sort_Data,      \r\n                PFC.`Element`,\r\n                PFC.Vendor,\r\n                PFC.`Delivery Order No`,\r\n                PFC.`Delivery Date`,\r\n                PFC.Qty_Delivered,\r\n                MC.Total_Delivered AS Total_Delivery\r\n            FROM Pre_Min_C PFC \r\n            LEFT JOIN Min_Count MC ON PFC.`Door Type` = MC.`Door Type`  and PFC.project_id = MC.project_id order by 2,3,4,5),\r\n    Final_ AS (        \r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Door Type`,\r\n                `Element`,\r\n                Vendor,\r\n                `Delivery Order No`,\r\n                `Delivery Date`,\r\n                Qty_Delivered,\r\n                LAG(Total_Delivery,2) OVER (PARTITION BY Sort_Data ORDER BY Total_Delivery,`Element`) Final_Delivery\r\n            FROM Pre_Final_Count),\r\n    DATA_2 AS (        \r\n        SELECT\r\n            Upload_Date,\r\n            project_id,\r\n            `Delivery Order No`,\r\n            `Delivery Date`,\r\n            `Door Type`,\r\n            `Element`,\r\n             Vendor,\r\n            Qty_Delivered AS `sum(ASA)`,\r\n            Final_Delivery AS `MIN(ASA)`,\r\n            'Total_Used'   AS Used_Data\r\n        FROM Final_),\r\n    FINAL_UNION\r\n    AS (\r\n    SELECT * FROM DATA_1\r\n    UNION ALL\r\n    SELECT * FROM DATA_2\r\n    ) SELECT * FROM FINAL_UNION;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wooden Doors",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_wooden_door;\r\nINSERT INTO f_wooden_door\r\nWITH MANPOWER_DATA AS(\r\n            SELECT DATE(ddm.upload_time) AS Upload_Date,\r\n            ddm.project_id,\r\n            ddm.tower,\r\n            ddm.sbu_id,\r\n            ddm.`Date`,\r\n            OPDM.SC_NAME,\r\n            OPDM.SC_Short,\r\n            Column_Name.SCC,\r\n            CASE \r\n                WHEN TRIM(Column_Name.value) IN ('-','') THEN NULL\r\n                ELSE Column_Name.value\r\n            END AS value,\r\n            DENSE_RANK () OVER (PARTITION BY ddm.project_id ORDER BY  DATE(ddm.upload_time) DESC) _DRANK\r\n        FROM O_PLN_DOOR_MANPOWER ddm\r\n        CROSS JOIN LATERAL (\r\n                            SELECT `SC1` , 'SC1'\r\n                            UNION ALL SELECT  `SC2`,'SC2'\r\n                            UNION ALL SELECT  `SC3`,'SC3'\r\n                            UNION ALL SELECT  `SC4`,'SC4'\r\n                            UNION ALL SELECT  `SC5`,'SC5'\r\n                            UNION ALL SELECT  `SC6`,'SC6'\r\n                            UNION ALL SELECT  `SC7`,'SC7'\r\n                            UNION ALL SELECT  `SC8`,'SC8'\r\n                            UNION ALL SELECT  `SC9`,'SC9'\r\n                            UNION ALL SELECT  `SC10`,'SC10'\r\n                            UNION ALL SELECT  `SC11`,'SC11'\r\n                            UNION ALL SELECT  `SC12`,'SC12'\r\n                            UNION ALL SELECT  `SC13`,'SC13'\r\n                            UNION ALL SELECT  `SC14`,'SC14'\r\n                            UNION ALL SELECT  `SC15`,'SC15'\r\n                            UNION ALL SELECT  `SC16`,'SC16'\r\n                            UNION ALL SELECT  `SC17`,'SC17'\r\n                            UNION ALL SELECT  `SC18`,'SC18'\r\n                            UNION ALL SELECT  `SC19`,'SC19'\r\n                            UNION ALL SELECT  `SC20`,'SC20'\r\n                            )AS Column_Name(value,SCC)\r\n    JOIN O_PLN_DOORMANPOWER_MAP OPDM\r\n    ON Column_Name.SCC = OPDM.SC\r\n    AND ddm.project_id = OPDM.project_id\r\n    WHERE OPDM.SC_Short != ('')),\r\n    GROUPIN AS(\r\n        SELECT\r\n            MD.SC_NAME,\r\n            MD.SC_Short,\r\n            MD.project_id,\r\n            SUM(MD.value) AS Value_Total\r\n        FROM MANPOWER_DATA MD\r\n        WHERE _DRANK = 1 GROUP BY 1,2,3),\r\n        DOOR_ AS (    \r\n            SELECT\r\n                DATE (DI.upload_time) AS Upload_Date,\r\n                DI.project_id,\r\n                DI.tower,\r\n                DI.Building,\r\n                DI.`Type`,\r\n                DI.`Level`,\r\n                DI.`Flat No`,\r\n                DENSE_RANK () OVER(PARTITION BY  DI.project_id ORDER BY  DATE(DI.upload_time) DESC)D_RANK,\r\n                NULLIF (TRIM(DI.`Flat No_A`),'') AS `Flat No_A`,\r\n                NULLIF (TRIM(DI.`Door Type`),'') AS `Door Type`,\r\n                NULLIF (TRIM(DI.`Jamb Width`),'') AS `Jamb Width`,\r\n                NULLIF (TRIM(DI.Orientation),'') AS Orientation,\r\n                NULLIF (TRIM(DI.`Door Id`),'') AS `Door Id`,\r\n                NULLIF (TRIM(DI.`Fire Rating`),'') AS `Fire Rating`,\r\n                NULLIF (TRIM(DI.Frame),'') AS Frame,\r\n                NULLIF (TRIM(DI.Foam),'') AS Foam,\r\n                NULLIF (TRIM(DI.Architrave),'') AS Architrave,\r\n                NULLIF (TRIM(DI.Shutter),'') AS Shutter,\r\n                NULLIF (TRIM(DI.Ironmongery),'') AS Ironmongery,\r\n                NULLIF (TRIM(DI.Installer),'') AS Installer\r\n            FROM  O_PLN_DOOR_INSTALLATION_RAW DI),\r\n        SORTING AS (\r\n            SELECT\r\n                DR.Upload_Date,\r\n                DR.project_id,\r\n                DR.tower,\r\n                DR.Building,\r\n                DR.`Type`,\r\n                DR.`Level`,\r\n                DR.`Flat No`,\r\n                DR.`Flat No_A`,\r\n                DR.`Door Type`,\r\n                DR.`Jamb Width`,\r\n                DR.Orientation,\r\n                DR.`Door Id`,\r\n                DR.`Fire Rating`,\r\n                Frame,\r\n                Foam,\r\n                Architrave,\r\n                Shutter,\r\n                Ironmongery,\r\n                DR.Installer,\r\n                DR.D_RANK\r\n                FROM DOOR_ DR\r\n                WHERE D_RANK = 1),\r\n        DATA_DATE AS(\r\n                SELECT \r\n                Sort.Upload_Date,\r\n                Sort.project_id,\r\n                Sort.tower,\r\n                Sort.Building,\r\n                Sort.`Type`,\r\n                Sort.`Level`,\r\n                Sort.`Flat No`,\r\n                Sort.`Door Type`,\r\n                Sort.`Jamb Width`,\r\n                Sort.Orientation,\r\n                Sort.`Door Id`,\r\n                Sort.`Fire Rating`,\r\n                Sort.Frame,\r\n                Sort.Foam,\r\n                Sort.Architrave,\r\n                Sort.Shutter,\r\n                (REPLACE(Sort.Ironmongery,'-008','')),\r\n                Sort.Installer,\r\n                OLMA.level_map,\r\n                (REPLACE(MGR.Value_Total,'-','')) AS Total,\r\n                MGR.SC_Short,\r\n                MGR.SC_NAME,\r\n                CASE WHEN Frame = NULL AND Architrave != NULL THEN Architrave \r\n                     WHEN Architrave = NULL AND Shutter != NULL THEN Shutter\r\n                     WHEN Shutter = NULL AND Architrave != NULL THEN Architrave ELSE Frame END AS DATE_WISE_SPLIT \r\n                FROM SORTING Sort\r\n                        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n                             ON Sort.`Level` = OLMA.`level`\r\n                        LEFT JOIN GROUPIN MGR\r\n                             ON Sort.Installer = MGR.SC_Short\r\n                             AND Sort.project_id = MGR.project_id)\r\n    SELECT \r\n         * \r\n    FROM DATA_DATE \r\n    WHERE `Door Id` NOT IN ('','NULL') \r\n    AND `Flat No` NOT IN ('','NULL');\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-27T08:28:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Daily_Except_Sunday')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FlatWise",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Pln_Flatwise_Template",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Service Room",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Pln_Service_Room",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Projection and Daily Revenue Template",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_projection;\r\nINSERT INTO  f_pln_projection\r\nWITH PROJECTION_RAW AS (\r\n    SELECT\r\n        DATE(OPP.upload_time) AS Upload_Date,\r\n        OPP.project_id AS `Project Sclicer`,\r\n        OPP.tower,\r\n        OPP.sbu_id AS `SBU Sclicer`,\r\n        OPP.SBU,\r\n        OPP.Area,\r\n        CASE\r\n            WHEN TRIM(OPP.Category) = '' THEN 'Not Available'\r\n            ELSE OPP.Category\r\n        END AS Category,\r\n        OPP.`Activity Description`,\r\n        CASE\r\n            WHEN TRIM(OPP.`Projection for the month`) IN ('-','') THEN '0'\r\n            ELSE REPLACE(OPP.`Projection for the month`, ',', '')\r\n        END AS `Projection for the month`,\r\n        CASE\r\n            WHEN TRIM(OPP.`Plan as on date`) IN ('-','') THEN '0'\r\n            ELSE REPLACE(OPP.`Plan as on date`, ',', '')\r\n        END AS `Plan as on date`,\r\n        CASE    \r\n            WHEN TRIM(OPP.`Actual as on date`) IN ('-','') THEN '0'\r\n            ELSE REPLACE(OPP.`Actual as on date`, ',', '')\r\n        END AS `Actual as on date`,\r\n        CASE\r\n            WHEN TRIM(OPP.`Shortfall Reasons`) IN ('-','') THEN NULL\r\n            ELSE `Shortfall Reasons`\r\n        END AS `Shortfall Reasons`,\r\n        CASE\r\n            WHEN OPP.SBU = 'SBU 1' THEN 1\r\n            WHEN OPP.SBU = 'SBU 2' THEN 2\r\n            WHEN OPP.SBU = 'SBU 3' THEN 3\r\n            WHEN OPP.SBU = 'SBU 4' THEN 4\r\n            WHEN OPP.SBU = 'SBU 5' THEN 5\r\n            ELSE 6\r\n        END AS SBU_Custom_Sort,\r\n    DENSE_RANK() OVER(PARTITION BY OPP.project_id ORDER BY DATE(OPP.upload_time) DESC) AS Dense_Ranker\r\n    FROM O_PLN_PROJECTION_RAW OPP\r\n        WHERE TRIM(`Activity Description`) NOT IN ('',' ','Total')\r\n        ),\r\nPROJECTION_STAGGING AS (\r\n    SELECT\r\n        PR.Upload_Date,\r\n        PR.`Project Sclicer`,\r\n        PR.tower,\r\n        PR.`SBU Sclicer`,\r\n        PR.SBU,\r\n        PR.Area,\r\n        PR.Category,\r\n        PR.`Activity Description`,\r\n        CAST(PR.`Projection for the month` AS DECIMAL) AS `Projection for the month`,\r\n        CAST(PR.`Plan as on date` AS DECIMAL) AS `Plan as on date`,\r\n        CAST(PR.`Actual as on date` AS DECIMAL) AS `Actual as on date`,\r\n        PR.`Shortfall Reasons`,\r\n        PR.SBU_Custom_Sort,\r\n        PR.Dense_Ranker\r\n    FROM PROJECTION_RAW PR WHERE Dense_Ranker = 1),\r\nPROJECTION_STAGGING2 AS (\r\n    SELECT\r\n        PR.Upload_Date,\r\n        PR.`Project Sclicer`,\r\n        PR.tower,\r\n        PR.`SBU Sclicer`,\r\n        PR.SBU,\r\n        PR.Area,\r\n        PR.Category,\r\n        PR.`Activity Description`,\r\n        CAST(PR.`Projection for the month` AS DECIMAL) AS `Projection for the month`,\r\n        CAST(PR.`Plan as on date` AS DECIMAL) AS `Plan as on date`,\r\n        CAST(PR.`Actual as on date` AS DECIMAL) AS `Actual as on date`,\r\n        PR.`Shortfall Reasons`,\r\n        PR.SBU_Custom_Sort,\r\n        PR.Dense_Ranker\r\n    FROM PROJECTION_RAW PR WHERE Dense_Ranker = 2 AND PR.`Activity Description` IN (SELECT DISTINCT(`Activity Description`) FROM PROJECTION_STAGGING))\r\n    SELECT \r\n        PS.Upload_Date,\r\n        PS.`Project Sclicer`,\r\n        CASE \r\n            WHEN TRIM(PS.SBU) = 'SBU4' THEN 'SBU 4'\r\n            WHEN TRIM(PS.SBU) = 'SBU5' THEN 'SBU 5'\r\n            WHEN TRIM(PS.SBU) = 'SBU 6' THEN 'SBU 5'\r\n            WHEN TRIM(PS.SBU) = '' THEN 'OH,M & C'\r\n            ELSE TRIM(PS.SBU)\r\n        END AS SBU,\r\n        PS.Area,\r\n        PS.Category,\r\n        PS.`Activity Description`,\r\n        PS.`Projection for the month`,\r\n        PS2.Upload_Date AS Yesterday,\r\n        PS2.`Plan as on date` AS Plan_Yesterday,\r\n        PS.`Plan as on date`,\r\n        PS2.`Actual as on date` AS Actual_Yesterday,\r\n        PS.`Actual as on date`,\r\n        PS.`Shortfall Reasons`,\r\n        PS.SBU_Custom_Sort,\r\n\t\tCASE WHEN PS.`Plan as on date`= 0 #and PS.`Actual as on date`!=0\r\n        THEN NULL ELSE PS.`Actual as on date`DIV PS.`Plan as on date` END\r\n          AS Achived,\r\n        CASE WHEN PS.`Plan as on date`=0 THEN NULL\r\n           WHEN nullif((PS.`Actual as on date` DIV PS.`Plan as on date`),0) >= 1.0 THEN (PS.`Actual as on date`DIV PS.`Plan as on date`)\r\n            ELSE NULL\r\n        END \r\n         AS Achived_90\r\n    FROM PROJECTION_STAGGING PS LEFT JOIN PROJECTION_STAGGING2 PS2\r\n        ON PS.`Project Sclicer` = PS2.`Project Sclicer`\r\n         AND PS.SBU = PS2.SBU\r\n         AND PS.Category = PS2.Category\r\n         AND PS.`Activity Description` = PS2.`Activity Description`;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Staircase Template",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_staircase;\r\nINSERT INTO f_pln_staircase\r\nWITH CLEANING_DATA AS (\r\n    SELECT\r\n        DATE(OPSR.upload_time) AS Upload_Date, \r\n        OPSR.project_id,\r\n        OPSR.tower,\r\n        OPSR.`Level`,\r\n        OPSR.`Stair Case No`,\r\n        'Staircase Area' AS sclicer,\r\n        Column_Name.*,\r\n        OPSM.ACTIVITY_ID,\r\n        OPSM.SBU_ID,\r\n        OPSM.Category,\r\n        DENSE_RANK () OVER (PARTITION BY  OPSR.project_id ORDER BY  DATE(OPSR.upload_time) DESC) Project_Udate_DRANK\r\n    from O_PLN_STAIRCASE_RAW OPSR\r\n    CROSS JOIN LATERAL (\r\n                SELECT\t`MEP Conduit Marking`\t,\t'MEP Conduit Marking'\r\n\t\t\t\tUNION ALL SELECT\t`Cutting and Chasing`\t,\t'Cutting and Chasing'\r\n\t\t\t\tUNION ALL SELECT\t`MEP Conduit Fixtures`\t,\t'MEP Conduit Fixtures'\r\n\t\t\t\tUNION ALL SELECT\t`Wall Packing`\t,\t'Wall Packing'\r\n\t\t\t\tUNION ALL SELECT\t`Plaster`\t,\t'Plaster'\r\n\t\t\t\tUNION ALL SELECT\t`Grinding`\t,\t'Grinding'\r\n\t\t\t\tUNION ALL SELECT\t`POP`\t,\t'POP'\r\n\t\t\t\tUNION ALL SELECT\t`Medium Coat Ceiling Spray Plaster`\t,\t'Medium Coat Ceiling Spray Plaster'\r\n\t\t\t\tUNION ALL SELECT\t`Two Coat Fine Ceiling Spray Plaster`\t,\t'Two Coat Fine Ceiling Spray Plaster'\r\n\t\t\t\tUNION ALL SELECT\t`Ceiling Primer`\t,\t'Ceiling Primer'\r\n\t\t\t\tUNION ALL SELECT\t`Ceiling Texture`\t,\t'Ceiling Texture'\r\n\t\t\t\tUNION ALL SELECT\t`Wall Primer`\t,\t'Wall Primer'\r\n\t\t\t\tUNION ALL SELECT\t`Wall Stucco banding`\t,\t'Wall Stucco banding'\r\n\t\t\t\tUNION ALL SELECT\t`Wall Stucco (1st and 2nd Coat)`\t,\t'Wall Stucco (1st and 2nd Coat)'\r\n\t\t\t\tUNION ALL SELECT\t`MEP Clearance for Pressurization Shaft`\t,\t'MEP Clearance for Pressurization Shaft'\r\n\t\t\t\tUNION ALL SELECT\t`Sanding`\t,\t'Sanding'\r\n\t\t\t\tUNION ALL SELECT\t`Wall First Coat Paint`\t,\t'Wall First Coat Paint'\r\n\t\t\t\tUNION ALL SELECT\t`Ceiling First Coat Paint`\t,\t'Ceiling First Coat Paint'\r\n\t\t\t\tUNION ALL SELECT\t`Handrail Floor Mounted`\t,\t'Handrail Floor Mounted'\r\n\t\t\t\tUNION ALL SELECT\t`Handrail Wall Mounted`\t,\t'Handrail Wall Mounted'\r\n\t\t\t\tUNION ALL SELECT\t`Epoxy Grinding`\t,\t'Epoxy Grinding'\r\n\t\t\t\tUNION ALL SELECT\t`Epoxy Bug Fill`\t,\t'Epoxy Bug Fill'\r\n\t\t\t\tUNION ALL SELECT\t`Epoxy Primer`\t,\t'Epoxy Primer'\r\n\t\t\t\tUNION ALL SELECT\t`Epoxy Base Coat`\t,\t'Epoxy Base Coat'\r\n\t\t\t\tUNION ALL SELECT\t`Epoxy Final Coat`\t,\t'Epoxy Final Coat'\r\n\t\t\t\tUNION ALL SELECT\t`Threshold Installation`\t,\t'Threshold Installation'\r\n\t\t\t\tUNION ALL SELECT\t`Door - Frame Installation`\t,\t'Door - Frame Installation'\r\n\t\t\t\tUNION ALL SELECT\t`Door - Architrave Installation`\t,\t'Door - Architrave Installation'\r\n\t\t\t\tUNION ALL SELECT\t`Door - Shutter Installation`\t,\t'Door - Shutter Installation'\r\n\t\t\t\tUNION ALL SELECT\t`Door - Ironmongery Installation`\t,\t'Door - Ironmongery Installation'\r\n\t\t\t\tUNION ALL SELECT\t`Door - Silicone Works`\t,\t'Door - Silicone Works'\r\n\t\t\t\tUNION ALL SELECT\t`Signage`\t,\t'Signage'\r\n\t\t\t\tUNION ALL SELECT\t`Nosing Installation`\t,\t'Nosing Installation'\r\n\t\t\t\tUNION ALL SELECT\t`Handrail Painting`\t,\t'Handrail Painting'\r\n\t\t\t\tUNION ALL SELECT\t`Preparation for Final Coat Paint`\t,\t'Preparation for Final Coat Paint'\r\n\t\t\t\tUNION ALL SELECT\t`MEP Final Fixtures Installation`\t,\t'MEP Final Fixtures Installation'\r\n\t\t\t\tUNION ALL SELECT\t`Final Coat Paint`\t,\t'Final Coat Paint'\r\n\t\t\t\tUNION ALL SELECT\t`Staircase Pressurization`\t,\t'Staircase Pressurization'\r\n        )\r\n        as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_STAIRCASE_MAP OPSM\r\n    ON Column_Name.Type_of_work = OPSM.ACTIVITY_SEQUENCE\r\n    WHERE Column_Name.value IS NOT NULL AND (TRIM(OPSR.`Level`) NOT IN ('') AND OPSR.`Level` IS NOT NULL)\r\n        ),\r\nSTAGGING AS (\r\n    SELECT \r\n        CD.Upload_Date,\r\n        CD.project_id,\r\n        CD.tower,\r\n        CD.`Level`,\r\n        CD.`Stair Case No`,\r\n        CD.sclicer,\r\n        CASE \r\n            WHEN TRIM(CD.value) IN ('','NA') THEN '0%'\r\n            ELSE CD.value\r\n        END AS value,\r\n        CD.Type_of_work,\r\n        CD.ACTIVITY_ID,\r\n        CD.SBU_ID,\r\n        CD.Category,\r\n        OLMA.level_map\r\n    FROM CLEANING_DATA CD \r\n        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n            ON CD.`Level` = OLMA.`level`\r\n    WHERE CD.Project_Udate_DRANK = 1\r\n)\r\nSELECT \r\n    CD.Upload_Date,\r\n    CD.project_id,\r\n    CD.tower,\r\n    CD.`Level`,\r\n    CD.`Stair Case No`,\r\n    CD.sclicer,\r\n    CAST(REPLACE(CD.value,'%','') AS DECIMAL(4,0))/100 AS value,\r\n    CD.Type_of_work,\r\n    CD.ACTIVITY_ID,\r\n    CD.SBU_ID,\r\n    CD.Category,\r\n    CD.level_map,\r\n    CASE \r\n        WHEN TRIM(CD.CATEGORY) IN('MEP') THEN  8\r\n        WHEN TRIM(CD.CATEGORY) IN('Builders Work') THEN  2\r\n        WHEN TRIM(CD.CATEGORY) IN('Plaster') THEN  3\r\n        WHEN TRIM(CD.CATEGORY) IN('Paint') THEN  9\r\n        WHEN TRIM(CD.CATEGORY) IN('Handrail') THEN  4\r\n        WHEN TRIM(CD.CATEGORY) IN('Marble') THEN  5\r\n        WHEN TRIM(CD.CATEGORY) IN('Joinery') THEN  6\r\n        WHEN TRIM(CD.CATEGORY) IN('Signage') THEN  7\r\n        WHEN TRIM(CD.CATEGORY) IN('PMT') THEN  1\r\n        ELSE 10\r\n    END AS CATEGORY_SORT\r\nFROM STAGGING CD ;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Keep Out",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_keepout;\r\nINSERT INTO f_pln_keepout\r\nWITH KEEPOUT_RAW AS (\r\n    SELECT\r\n        DATE(OPKOR.upload_time) AS Upload_date,\r\n        OPKOR.project_id,\r\n        OPKOR.tower,\r\n        OPKOR.sbu_id ,\r\n        OPKOR.`Level`,\r\n        OPKOR.Flat,\r\n        Column_Name.*,\r\n        OPKOM.ACTIVITY_ID,\r\n        OPKOM.SBU_ID AS SBU_Filter,\r\n        OPKOM.Category,\r\n        DENSE_RANK() OVER(PARTITION BY OPKOR.project_id ORDER BY DATE(OPKOR.upload_time) DESC) AS Dense_Ranker\r\n    FROM O_PLN_KEEPOUT_RAW OPKOR\r\n    CROSS JOIN LATERAL (\r\n                        SELECT `Final Coat Paint - Dry Area` , 'Final Coat Paint - Dry Area'\r\n                    UNION ALL SELECT `Final Coat Paint - Wet Area` , 'Final Coat Paint - Wet Area'\r\n                    UNION ALL SELECT `Facade Stamp` , 'Facade Stamp'\r\n                    UNION ALL SELECT `Bathroom Stamp - MEP (L8)` , 'Bathroom Stamp - MEP (L8)'\r\n                    UNION ALL SELECT `Bathroom Stamp - Civil (L9)` , 'Bathroom Stamp - Civil (L9)'\r\n                    UNION ALL SELECT `Kitchen Stamp - MEP (I8)` , 'Kitchen Stamp - MEP (I8)'\r\n                    UNION ALL SELECT `Kitchen Stamp - Civil (I9)` , 'Kitchen Stamp - Civil (I9)'\r\n                    UNION ALL SELECT `Dry Area Stamp - Civil (F7)` , 'Dry Area Stamp - Civil (F7)'\r\n                    UNION ALL SELECT `Dry Area Stamp - MEP (F8)` , 'Dry Area Stamp - MEP (F8)'\r\n                    UNION ALL SELECT `MEP NOC` , 'MEP NOC'\r\n                    UNION ALL SELECT `Civil NOC` , 'Civil NOC'\r\n                    UNION ALL SELECT `MEP Field Report 1ST Insp` , 'MEP Field Report 1ST Insp'\r\n                    UNION ALL SELECT `MEP Field Report 2nd Insp` , 'MEP Field Report 2nd Insp'\r\n                    UNION ALL SELECT `Facade Field Report 1st Insp` , 'Facade Field Report 1st Insp'\r\n                    UNION ALL SELECT `Facade Field Report 2nd Insp` , 'Facade Field Report 2nd Insp'\r\n                    UNION ALL SELECT `Civil Field Report 1st Insp` , 'Civil Field Report 1st Insp'\r\n                    UNION ALL SELECT `Civil Field Report 2nd Insp` , 'Civil Field Report 2nd Insp'\r\n                    UNION ALL SELECT `SCL Signoff` , 'SCL Signoff'\r\n                    UNION ALL SELECT `PNCA Signoff` , 'PNCA Signoff'\r\n                    UNION ALL SELECT `Keep Out (QT)` , 'Keep Out (QT)'\r\n                        ) AS Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_KEEPOUT_MAP OPKOM\r\n    ON Column_Name.Type_of_work = OPKOM.ACTIVITY_SEQUENCE\r\n        WHERE value IS NOT NULL),\r\nFinal_Raw AS (\r\n    SELECT\r\n        KOR.Upload_date,\r\n        KOR.project_id,\r\n        KOR.tower,\r\n        KOR.sbu_id,\r\n        KOR.SBU_Filter,\r\n        KOR.`Level`,\r\n        KOR.Flat,\r\n        KOR.Type_of_work,\r\n        KOR.ACTIVITY_ID,\r\n        KOR.Category,\r\n        REPLACE(KOR.value,'/','-') AS Real_Value,\r\n        CASE\r\n            WHEN TRIM(KOR.value) IN ('','-','0%','00%') THEN 0\r\n            WHEN KOR.value IS NOT NULL AND TRIM(KOR.value) NOT IN ('','-','0%','00%') THEN 1\r\n            ELSE 0\r\n        END AS value,\r\n        OLMA.level_map\r\n    FROM KEEPOUT_RAW KOR\r\n        LEFT JOIN O_LEVEL_MAP_ALL OLMA ON KOR.`Level` = OLMA.`level`\r\n            WHERE KOR.Dense_Ranker = 1)\r\n    SELECT \r\n        Upload_date,\r\n        project_id,\r\n        tower,\r\n        SBU_Filter,\r\n        `Level`,\r\n        Flat,\r\n        Type_of_work,\r\n        Category,\r\n        ACTIVITY_ID,\r\n        STR_TO_DATE(NULLIF(Real_Value,'') ,'%d-%b-%y')AS \r\n        Real_Value,\r\n        value,\r\n        level_map,\r\n        CASE \r\n            WHEN TRIM(Category) IN('Paint') THEN  1\r\n            WHEN TRIM(Category) IN('Facade') THEN  2\r\n            WHEN TRIM(Category) IN('MEP') THEN  3\r\n            WHEN TRIM(Category) IN('PMT') THEN  4\r\n            WHEN TRIM(Category) IN('Consultant') THEN  5\r\n            WHEN TRIM(Category) IN('Client') THEN  6\r\n            ELSE 20\r\n        END AS CATEGORY_SORT\r\n    FROM Final_Raw ORDER BY 2,3,4,5,6,7,9;\r\n\r\n    /**/\r\n\r\n    SELECT 1;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T23:05:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Pln_Flatwise_Template')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Pln_Service_Room')]",
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Flatwise_Template')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dry Area Template",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_dryarea;\r\nINSERT INTO f_pln_dryarea\r\nWITH PRE_STAGGING AS(\r\n\r\n    select\r\n\r\n        DATE(O_PLN_DRYAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_DRYAREA_RAW.project_id,\r\n\r\n        O_PLN_DRYAREA_RAW.tower,\r\n\r\n        O_PLN_DRYAREA_RAW.`Level`,\r\n\r\n        O_PLN_DRYAREA_RAW.Flat,\r\n\r\n        'Dry Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_DRYAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_DRYAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_DRYAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                            ORDER BY  DATE(upload_time) DESC\r\n\r\n                            )    AS Project_Udate_DRANK\r\n\r\n    from O_PLN_DRYAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n            SELECT     `HSE Clearance for Deshuttering`              ,               'HSE Clearance for Deshuttering'\r\n\r\n                                                                UNION ALL SELECT           `MEP Riser Works`           ,               'MEP Riser Works'\r\n\r\n                                                                UNION ALL SELECT           `LPG Pipe`           ,               'LPG Pipe'\r\n\r\n                                                                UNION ALL SELECT           `Blockwork Layout Marking`        ,               'Blockwork Layout Marking'\r\n\r\n                                                                UNION ALL SELECT           `Blockwork First Layer`   ,               'Blockwork First Layer'\r\n\r\n                                                                UNION ALL SELECT           `Blockwork with 1mtr marking`  ,               'Blockwork with 1mtr marking'\r\n\r\n                                                                UNION ALL SELECT           `GI Lintel`             ,               'GI Lintel'\r\n\r\n                                                                UNION ALL SELECT           `RCC Lintel / Stiffener`   ,               'RCC Lintel / Stiffener'\r\n\r\n                                                                UNION ALL SELECT           `Above Lintel Block Work`             ,               'Above Lintel Block Work'\r\n\r\n                                                                UNION ALL SELECT           `Head Restraints Installation`      ,               'Head Restraints Installation'\r\n\r\n                                                                UNION ALL SELECT           `Fire Sealant Works & PU Foam Works`  ,               'Fire Sealant Works & PU Foam Works'\r\n\r\n                                                                UNION ALL SELECT           `MEP Marking for HL Builders Work`        ,               'MEP Marking for HL Builders Work'\r\n\r\n                                                                UNION ALL SELECT           `Blockwork Cutting for MEP Services`      ,               'Blockwork Cutting for MEP Services'\r\n\r\n                                                                UNION ALL SELECT           `MEP Wall Marking for Cutting & Chasing`             ,               'MEP Wall Marking for Cutting & Chasing'\r\n\r\n                                                                UNION ALL SELECT           `Bull Marking for Plaster`              ,               'Bull Marking for Plaster'\r\n\r\n                                                                UNION ALL SELECT           `Sub Frame`        ,               'Sub Frame'\r\n\r\n                                                                UNION ALL SELECT           `Corner Bead Fixing`        ,               'Corner Bead Fixing'\r\n\r\n                                                                UNION ALL SELECT           `Cutting & Chasing`          ,               'Cutting & Chasing'\r\n\r\n                                                                UNION ALL SELECT           `MEP Plastering Clearance (Box fixing & Pipe setting)`      ,                'MEP Plastering Clearance (Box fixing & Pipe setting)'\r\n\r\n                                                                UNION ALL SELECT           `ONU, DB & All MEP works Installation`  ,               'ONU, DB & All MEP works Installation'\r\n\r\n                                                                UNION ALL SELECT           `ONU, DB & All MEP works Packing`         ,               'ONU, DB & All MEP works Packing'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Plaster`             ,               'Dry Area Plaster'\r\n\r\n                                                                UNION ALL SELECT           `Plastering Clearance with 1 Meter Marking`        ,                'Plastering Clearance with 1 Meter Marking'\r\n\r\n                                                                UNION ALL SELECT           `Center line marking for Facade Installation`         ,                'Center line marking for Facade Installation'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Starter Gutter`     ,               'UCW-Starter Gutter'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Brackets` ,               'UCW-Brackets'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Panels`    ,               'UCW-Panels'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Alignment`            ,               'UCW-Alignment'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Tile Marking`  ,               'Dry Area Tile Marking'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Bore Packing` ,               'Dry Area Bore Packing'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Screed`             ,               'Dry Area Screed'\r\n\r\n                                                                UNION ALL SELECT           `Screed Curing`  ,               'Screed Curing'\r\n\r\n                                                                UNION ALL SELECT           `Primer,Stucco banding` ,               'Primer,Stucco banding'\r\n\r\n                                                                UNION ALL SELECT           `Bulk Head`         ,               'Bulk Head'\r\n\r\n                                                                UNION ALL SELECT           `MEP H/L Wiring`              ,               'MEP H/L Wiring'\r\n\r\n                                                                UNION ALL SELECT           `MEP H/L Framing Clearance`      ,               'MEP H/L Framing Clearance'\r\n\r\n                                                                UNION ALL SELECT           `Fire Sealant works around ducts`             ,               'Fire Sealant works around ducts'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area FC Framing`    ,               'Dry Area FC Framing'\r\n\r\n                                                                UNION ALL SELECT           `Wardrobe Nib wall`        ,               'Wardrobe Nib wall'\r\n\r\n                                                                UNION ALL SELECT           `MEP H/L Boarding Clearance`    ,               'MEP H/L Boarding Clearance'\r\n\r\n                                                                UNION ALL SELECT           `FC Boarding with Joint Taping`  ,               'FC Boarding with Joint Taping'\r\n\r\n                                                                UNION ALL SELECT           `Primer Ceiling` ,               'Primer Ceiling'\r\n\r\n                                                                UNION ALL SELECT           `Stucco 1st Coat Ceiling` ,               'Stucco 1st Coat Ceiling'\r\n\r\n                                                                UNION ALL SELECT           `Stucco 2nd Coat Ceiling`               ,               'Stucco 2nd Coat Ceiling'\r\n\r\n                                                                UNION ALL SELECT           `First Coat Paint Ceiling` ,               'First Coat Paint Ceiling'\r\n\r\n                                                                UNION ALL SELECT           `Main Door Threshold`   ,               'Main Door Threshold'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Floor Tiling`     ,               'Dry Area Floor Tiling'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Skirting`            ,               'Dry Area Skirting'\r\n\r\n                                                                UNION ALL SELECT           `POP Above Skirting`       ,               'POP Above Skirting'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Box Installation`       ,               'Hinge Door Box Installation'\r\n\r\n                                                                UNION ALL SELECT           `Screed near Hinge Door`              ,               'Screed near Hinge Door'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Frame Installation`  ,               'Hinge Door Frame Installation'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Box Section`            ,               'Curtain Wall Box Section'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Frame Installation`               ,               'Curtain Wall Frame Installation'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Glass Installation`  ,               'Curtain Wall Glass Installation'\r\n\r\n                                                                UNION ALL SELECT           `UCW-GI Sheet Installation - Wall`             ,               'UCW-GI Sheet Installation - Wall'\r\n\r\n                                                                UNION ALL SELECT           `UCW-GI Sheet Installation - Floor`            ,               'UCW-GI Sheet Installation - Floor'\r\n\r\n                                                                UNION ALL SELECT           `Screed near Curtain Wall`            ,               'Screed near Curtain Wall'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Box Installation`     ,               'Sliding Door Box Installation'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Frame Installation`                ,               'Sliding Door Frame Installation'\r\n\r\n                                                                UNION ALL SELECT           `Screed near Sliding Door`            ,               'Screed near Sliding Door'\r\n\r\n                                                                UNION ALL SELECT           `Left Over Tile Installation`           ,               'Left Over Tile Installation'\r\n\r\n                                                                UNION ALL SELECT           `Left Over Skirting`           ,               'Left Over Skirting'\r\n\r\n                                                                UNION ALL SELECT           `Tile Grouting`   ,               'Tile Grouting'\r\n\r\n                                                                UNION ALL SELECT           `Tile Silicone Works`        ,               'Tile Silicone Works'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Mullion`    ,               'Curtain Wall Mullion'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Flashing Installation`            ,               'Curtain Wall Flashing Installation'\r\n\r\n                                                                UNION ALL SELECT           `Curtain Wall Silicone`    ,               'Curtain Wall Silicone'\r\n\r\n                                                                UNION ALL SELECT           `UCW-Firestop and Silicone`        ,               'UCW-Firestop and Silicone'\r\n\r\n                                                                UNION ALL SELECT           `UCW-GI Flashing`            ,               'UCW-GI Flashing'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Glass Installation`    ,               'Hinge Door Glass Installation'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Internal Silicone`      ,               'Hinge Door Internal Silicone'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door Alignment` ,               'Hinge Door Alignment'\r\n\r\n                                                                UNION ALL SELECT           `Hinge Door External Silicone`     ,               'Hinge Door External Silicone'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Glass Installation`  ,               'Sliding Door Glass Installation'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Internal Silicone`    ,               'Sliding Door Internal Silicone'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door Alignment`               ,               'Sliding Door Alignment'\r\n\r\n                                                                UNION ALL SELECT           `Sliding Door External Silicone`   ,               'Sliding Door External Silicone'\r\n\r\n                                                                UNION ALL SELECT           `Window Jamb,Corner,Pelmet Area, Shadow Angle POP Works`  ,               'Window Jamb,Corner,Pelmet Area, Shadow Angle POP Works'\r\n\r\n                                                                UNION ALL SELECT           `Wall Stucco 1st Coat`    ,               'Wall Stucco 1st Coat'\r\n\r\n                                                                UNION ALL SELECT           `Wall stucco 2nd coat`    ,               'Wall stucco 2nd coat'\r\n\r\n                                                                UNION ALL SELECT           `Wall Paint 1st Coat`       ,               'Wall Paint 1st Coat'\r\n\r\n                                                                UNION ALL SELECT           `Door - Frame Installation`            ,               'Door - Frame Installation'\r\n\r\n                                                                UNION ALL SELECT           `Door - Architrave Installation`    ,               'Door - Architrave Installation'\r\n\r\n                                                                UNION ALL SELECT           `Door - Shutter Installation`         ,               'Door - Shutter Installation'\r\n\r\n                                                                UNION ALL SELECT           `Door - Ironmongery Installation`              ,               'Door - Ironmongery Installation'\r\n\r\n                                                                UNION ALL SELECT           `Door - Silicone Works`  ,               'Door - Silicone Works'\r\n\r\n                                                                UNION ALL SELECT           `Cut piece Skirting near Door`     ,               'Cut piece Skirting near Door'\r\n\r\n                                                                UNION ALL SELECT           `Gas Meter Installation` ,               'Gas Meter Installation'\r\n\r\n                                                                UNION ALL SELECT           `MEP Kitchen Appliances`             ,               'MEP Kitchen Appliances'\r\n\r\n                                                                UNION ALL SELECT           `Wardrobe Carcass Installation`  ,               'Wardrobe Carcass Installation'\r\n\r\n                                                                UNION ALL SELECT           `Wardrobe Shutter Installation`  ,               'Wardrobe Shutter Installation'\r\n\r\n                                                                UNION ALL SELECT           `Wardrobe Silicone Works`          ,               'Wardrobe Silicone Works'\r\n\r\n                                                                UNION ALL SELECT           `Cut piece Skirting near Wardrobe`           ,               'Cut piece Skirting near Wardrobe'\r\n\r\n                                                                UNION ALL SELECT           `Air Balancing for FCU`   ,               'Air Balancing for FCU'\r\n\r\n                                                                UNION ALL SELECT           `FCU Closure Clearance` ,               'FCU Closure Clearance'\r\n\r\n                                                                UNION ALL SELECT           `VCD Closure - FCU`         ,               'VCD Closure - FCU'\r\n\r\n                                                                UNION ALL SELECT           `Air Balancing for FAHU`                ,               'Air Balancing for FAHU'\r\n\r\n                                                                UNION ALL SELECT           `FAHU Closure Clearance`             ,               'FAHU Closure Clearance'\r\n\r\n                                                                UNION ALL SELECT           `VCD Closure - FAHU`     ,               'VCD Closure - FAHU'\r\n\r\n                                                                UNION ALL SELECT           `Final Fixtures Installation`           ,               'Final Fixtures Installation'\r\n\r\n                                                                UNION ALL SELECT           `Access Panel Final Coat and Installation`               ,                'Access Panel Final Coat and Installation'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Final Coat Preparation`              ,               'Dry Area Final Coat Preparation'\r\n\r\n                                                                UNION ALL SELECT           `Dry Area Final Coat Paint`            ,               'Dry Area Final Coat Paint'\r\n\r\n                                                                UNION ALL SELECT           `Thermostat Cover Installation`  ,               'Thermostat Cover Installation'\r\n\r\n                                                                UNION ALL SELECT           `Intercom Cover Installation`       ,               'Intercom Cover Installation'\r\n\r\n                                                                UNION ALL SELECT           `ONU & DB Panel Door` ,               'ONU & DB Panel Door'\r\n\r\n                                                                UNION ALL SELECT           `Switch socket cover Installation`               ,               'Switch socket cover Installation'\r\n\r\n                                                                )\r\n\r\n        as Column_Name(value,Type_of_work)\r\n\r\n    JOIN O_PLN_DRYAREA_MAP\r\n\r\n    ON Column_Name.Type_of_work = O_PLN_DRYAREA_MAP.ACTIVITY_SEQUENCE\r\n\r\n    WHERE value IS NOT NULL )\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date   ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n   PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA','-') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level` WHERE Project_Udate_DRANK = 1;\r\n\r\n        /**/\r\n\r\n        SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Kitchen Area Template",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Dry Area Template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_kitchenarea;\r\nINSERT INTO f_pln_kitchenarea\r\nWITH PRE_STAGGING AS(\r\n\r\n    SELECT\r\n\r\n        DATE(O_PLN_KITCHENAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_KITCHENAREA_RAW.project_id,\r\n\r\n        O_PLN_KITCHENAREA_RAW.tower,\r\n\r\n        O_PLN_KITCHENAREA_RAW.`Level`,\r\n\r\n        O_PLN_KITCHENAREA_RAW.Flat,\r\n\r\n        'Kitchen Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_KITCHENAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_KITCHENAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_KITCHENAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                            ORDER BY  DATE(upload_time) DESC\r\n\r\n                            )   AS  Project_Udate_DRANK\r\n\r\n    from O_PLN_KITCHENAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n            SELECT     `Kitchen Area Plaster`     ,               'Kitchen Area Plaster'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen / Utility Framing Clearance`        ,                'Kitchen / Utility Framing Clearance'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen / Utility Framing`             ,               'Kitchen / Utility Framing'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen / Utility Boarding Clearance`      ,                'Kitchen / Utility Boarding Clearance'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen / Utility Boarding`           ,               'Kitchen / Utility Boarding'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Wall Tile`            ,               'Kitchen Wall Tile'\r\n\r\n                                                                                UNION ALL SELECT           `MEP Box Fixing`               ,               'MEP Box Fixing'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Cabinet`             ,               'Kitchen Cabinet'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Counter Plywood`          ,               'Kitchen Counter Plywood'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Counter Top`    ,               'Kitchen Counter Top'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Counter Top Skirting`    ,               'Kitchen Counter Top Skirting'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Cabinet Grouting`           ,               'Kitchen Cabinet Grouting'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Cabinet Silicone`             ,               'Kitchen Cabinet Silicone'\r\n\r\n                                                                                UNION ALL SELECT           `MEP Fixtures for Kitchen Cabinet`            ,               'MEP Fixtures for Kitchen Cabinet'\r\n\r\n                                                                                UNION ALL SELECT           `Kitchen Appliances`       ,               'Kitchen Appliances'\r\n\r\n                                                                                )\r\n\r\n        as Column_Name(value,Type_of_work)\r\n\r\n    JOIN O_PLN_KITCHENAREA_MAP\r\n\r\n    ON Column_Name.Type_of_work = O_PLN_KITCHENAREA_MAP.ACTIVITY_SEQUENCE\r\n\r\n    WHERE value IS NOT NULL)\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date    ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n    PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level`\r\n\r\nWHERE Project_Udate_DRANK = 1;\r\n\r\n /**/\r\n Select 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wet Area Template",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Kitchen Area Template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_wetarea;\r\nINSERT INTO f_pln_wetarea\r\nWITH PRE_STAGGING AS (\r\n\r\n    SELECT\r\n\r\n        DATE(O_PLN_WETAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_WETAREA_RAW.project_id,\r\n\r\n        O_PLN_WETAREA_RAW.tower,\r\n\r\n        O_PLN_WETAREA_RAW.`Level`,\r\n\r\n        O_PLN_WETAREA_RAW.Flat,\r\n\r\n        'Wet Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_WETAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_WETAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_WETAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                                ORDER BY  DATE(upload_time) DESC\r\n\r\n                                )   AS  Project_Udate_DRANK\r\n\r\n    from O_PLN_WETAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n                SELECT `Plastering Clearance with 1 Mtr Marking`             ,               'Plastering Clearance with 1 Mtr Marking'\r\n\r\nUNION ALL SELECT           `Wet Area Tile Marking` ,               'Wet Area Tile Marking'\r\n\r\nUNION ALL SELECT           `MEP Marking`  ,               'MEP Marking'\r\n\r\nUNION ALL SELECT           `Wet Area Cutting & Chasing`      ,               'Wet Area Cutting & Chasing'\r\n\r\nUNION ALL SELECT           `Pex pipe installation`     ,               'Pex pipe installation'\r\n\r\nUNION ALL SELECT           `Re packing of MEP Services`       ,               'Re packing of MEP Services'\r\n\r\nUNION ALL SELECT           `MEP Pipe installation - Borepacking`      ,               'MEP Pipe installation - Borepacking'\r\n\r\nUNION ALL SELECT           `Wet Area Bore Packing`               ,               'Wet Area Bore Packing'\r\n\r\nUNION ALL SELECT           `Cistern installation`        ,               'Cistern installation'\r\n\r\nUNION ALL SELECT           `Drywall framing`             ,               'Drywall framing'\r\n\r\nUNION ALL SELECT           `Pex Elbow & Connections`          ,               'Pex Elbow & Connections'\r\n\r\nUNION ALL SELECT           `Bottom Boarding Clearance`      ,               'Bottom Boarding Clearance'\r\n\r\nUNION ALL SELECT           `Bottom boarding`           ,               'Bottom boarding'\r\n\r\nUNION ALL SELECT           `Under Screed Waterproofing`   ,               'Under Screed Waterproofing'\r\n\r\nUNION ALL SELECT           `Wet Area Screed`           ,               'Wet Area Screed'\r\n\r\nUNION ALL SELECT           `Ledge Wall Full Board Closure Clearance`             ,               'Ledge Wall Full Board Closure Clearance'\r\n\r\nUNION ALL SELECT           `MEP HL Water Supply & Drainage`          ,               'MEP HL Water Supply & Drainage '\r\n\r\nUNION ALL SELECT           `MEP HL Ducting & FCU Works`  ,               'MEP HL Ducting & FCU Works '\r\n\r\nUNION ALL SELECT           `MEP HL Electrical Services Installation`  ,               'MEP HL Electrical Services Installation'\r\n\r\nUNION ALL SELECT           `MEP HL Works & Testing`            ,               'MEP HL Works & Testing'\r\n\r\nUNION ALL SELECT           `MEP HL Packing Clearance`         ,               'MEP HL Packing Clearance'\r\n\r\nUNION ALL SELECT           `Packing for all builders work opening`   ,               'Packing for all builders work opening '\r\n\r\nUNION ALL SELECT           `Wet Area MEP H/L Fire Sealent & Framing Clearance`     ,               'Wet Area MEP H/L Fire Sealent & Framing Clearance '\r\n\r\nUNION ALL SELECT           `Wet area Wall Tile`         ,               'Wet area Wall Tile'\r\n\r\nUNION ALL SELECT           `Wet Area FC Framing`   ,               'Wet Area FC Framing'\r\n\r\nUNION ALL SELECT           `Wet Area MEP H/L Boarding Clearance` ,               'Wet Area MEP H/L Boarding Clearance'\r\n\r\nUNION ALL SELECT           `FC Boarding & Joint Taping`        ,               'FC Boarding & Joint Taping'\r\n\r\nUNION ALL SELECT           `Ceiling Paint Primer`      ,               'Ceiling Paint Primer'\r\n\r\nUNION ALL SELECT           `Ceiling Paint Stucco 1st Coat & 2nd Coat`             ,               'Ceiling Paint Stucco 1st Coat & 2nd Coat'\r\n\r\nUNION ALL SELECT           `Wet Area Ceiling First Coat Paint`            ,               'Wet Area Ceiling First Coat Paint'\r\n\r\nUNION ALL SELECT           `MEP Grill & Diffuser Installtion` ,               'MEP Grill & Diffuser Installtion '\r\n\r\nUNION ALL SELECT           `Shower Threshold`         ,               'Shower Threshold'\r\n\r\nUNION ALL SELECT           `Linear Drain Supply`      ,               'Linear Drain Supply'\r\n\r\nUNION ALL SELECT           `Linear Drain Fixing`        ,               'Linear Drain Fixing '\r\n\r\nUNION ALL SELECT           `Under Tile Waterproofing`         ,               'Under Tile Waterproofing'\r\n\r\nUNION ALL SELECT           `Bathroom Door Threshold`         ,               'Bathroom Door Threshold'\r\n\r\nUNION ALL SELECT           `Wet Area Floor Tile`       ,               'Wet Area Floor Tile'\r\n\r\nUNION ALL SELECT           `Wall tile bottom Tile`     ,               'Wall tile bottom Tile'\r\n\r\nUNION ALL SELECT           `Grouting - Wall & Floor`               ,               'Grouting - Wall & Floor'\r\n\r\nUNION ALL SELECT           `Silicone - Wall & Floor Corners` ,               'Silicone - Wall & Floor Corners'\r\n\r\nUNION ALL SELECT           `Shower Partition - U channel`    ,               'Shower Partition - U channel'\r\n\r\nUNION ALL SELECT           `Shower Partition - Glass`             ,               'Shower Partition - Glass'\r\n\r\nUNION ALL SELECT           `Accessories & Silicon`    ,               'Accessories & Silicon'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Frame Installation`      ,               'Bathroom Door - Frame Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Architrave Installation`              ,               'Bathroom Door - Architrave Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Shutter Installation`    ,               'Bathroom Door - Shutter Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Ironmongery Installation`         ,               'Bathroom Door - Ironmongery Installation'\r\n\r\nUNION ALL SELECT           `Vanity Cabinet` ,               'Vanity Cabinet'\r\n\r\nUNION ALL SELECT           `Vanity Cabinet Counter top`       ,               'Vanity Cabinet Counter top'\r\n\r\nUNION ALL SELECT           `MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)`    ,               'MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)'\r\n\r\nUNION ALL SELECT           `MEP Ledge Wall Clearance`        ,               'MEP Ledge Wall Clearance '\r\n\r\nUNION ALL SELECT           `Ledge Wall Closing`        ,               'Ledge Wall Closing'\r\n\r\nUNION ALL SELECT           `Silicone around MEP Fixtures`   ,               'Silicone around MEP Fixtures'\r\n\r\nUNION ALL SELECT           `Wet Area Final Coat paint`          ,               'Wet Area Final Coat paint'\r\n\r\n \r\n\r\n            )\r\n\r\n              as Column_Name(value,Type_of_work)\r\n\r\n        JOIN O_PLN_WETAREA_MAP\r\n\r\n        ON TRIM(Column_Name.Type_of_work) = TRIm(O_PLN_WETAREA_MAP.ACTIVITY_SEQUENCE)\r\n\r\n        WHERE value IS NOT NULL)\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date    ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n    PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA','-') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level`\r\n\r\nWHERE Project_Udate_DRANK = 1;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Balcony Area Template",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wet Area Template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_balconyarea;\r\nINSERT INTO f_pln_balconyarea\r\nWITH PRE_STAGGING AS (\r\n\r\n    SELECT DATE(O_PLN_BALCONYAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_BALCONYAREA_RAW.project_id,\r\n\r\n        O_PLN_BALCONYAREA_RAW.tower,\r\n\r\n        O_PLN_BALCONYAREA_RAW.`Level`,\r\n\r\n        O_PLN_BALCONYAREA_RAW.Flat,\r\n\r\n        'Balcony Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_BALCONYAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_BALCONYAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_BALCONYAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                            ORDER BY  DATE(upload_time) DESC\r\n\r\n                            ) AS Project_Udate_DRANK\r\n\r\n    from O_PLN_BALCONYAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n                SELECT `Marking for Rain Water Pipe`    ,               'Marking for Rain Water Pipe'\r\n\r\nUNION ALL SELECT           `Rain water pipe`              ,               'Rain water pipe'\r\n\r\nUNION ALL SELECT           `Rain Water Pipe Packing`             ,               'Rain Water Pipe Packing'\r\n\r\nUNION ALL SELECT           `Balcony Blockwork`        ,               'Balcony Blockwork'\r\n\r\nUNION ALL SELECT           `Balcony Plaster`               ,               'Balcony Plaster'\r\n\r\nUNION ALL SELECT           `F channel Installation`   ,               'F channel Installation'\r\n\r\nUNION ALL SELECT           `Non Shrink Grout`          ,               'Non Shrink Grout'\r\n\r\nUNION ALL SELECT           `Top Rail Bracket Installation`      ,               'Top Rail Bracket Installation'\r\n\r\nUNION ALL SELECT           `EIFS Installation`              ,               'EIFS Installation'\r\n\r\nUNION ALL SELECT           `Balcony EIFS Plaster`     ,               'Balcony EIFS Plaster'\r\n\r\nUNION ALL SELECT           `Grinding Clearance`       ,               'Grinding Clearance'\r\n\r\nUNION ALL SELECT           `Ceiling Skim Coat & Primer`        ,               'Ceiling Skim Coat & Primer'\r\n\r\nUNION ALL SELECT           `Balcony Screed`               ,               'Balcony Screed'\r\n\r\nUNION ALL SELECT           `Drain Fixing`      ,               'Drain Fixing'\r\n\r\nUNION ALL SELECT           `Ceiling Balcony Box Installation`               ,               'Ceiling Balcony Box Installation'\r\n\r\nUNION ALL SELECT           `Left Over Screed (If any)`             ,               'Left Over Screed (If any)'\r\n\r\nUNION ALL SELECT           `EIFS Wall Texture`          ,               'EIFS Wall Texture'\r\n\r\nUNION ALL SELECT           `Balustrade Glass Installation`     ,               'Balustrade Glass Installation'\r\n\r\nUNION ALL SELECT           `Balustrade Top Rail`       ,               'Balustrade Top Rail'\r\n\r\nUNION ALL SELECT           `Balcony Under Tile Water Proofing`        ,               'Balcony Under Tile Water Proofing'\r\n\r\nUNION ALL SELECT           `Balcony Floor Tiling`       ,               'Balcony Floor Tiling'\r\n\r\nUNION ALL SELECT           `Balustrade - Internal Flashing`   ,               'Balustrade - Internal Flashing'\r\n\r\nUNION ALL SELECT           `Balcony Skirting`              ,               'Balcony Skirting'\r\n\r\nUNION ALL SELECT           `Metal Ceiling`   ,               'Metal Ceiling'\r\n\r\nUNION ALL SELECT           `Balcony Ceiling Texture`              ,               'Balcony Ceiling Texture'\r\n\r\nUNION ALL SELECT           `Complete Wall Texture`               ,               'Complete Wall Texture'\r\n\r\nUNION ALL SELECT           `Balcony Grouting`           ,               'Balcony Grouting'\r\n\r\nUNION ALL SELECT           `Balcony Silicone`             ,               'Balcony Silicone'\r\n\r\nUNION ALL SELECT           `Balcony MEP Final Fixtures`       ,               'Balcony MEP Final Fixtures'\r\n\r\nUNION ALL SELECT           `Balcony Final Coat Paint`             ,               'Balcony Final Coat Paint'\r\n\r\nUNION ALL SELECT           `Balcony Drain Cover Supply`      ,               'Balcony Drain Cover Supply'\r\n\r\nUNION ALL SELECT           `Cover fixing for balcony drain`   ,               'Cover fixing for balcony drain'\r\n\r\nUNION ALL SELECT           `Cover plate B/W ACP & EIFS`     ,               'Cover plate B/W ACP & EIFS'\r\n\r\n \r\n\r\n        )\r\n\r\n        as Column_Name(value,Type_of_work)\r\n\r\n    JOIN O_PLN_BALCONYAREA_MAP\r\n\r\n    ON Column_Name.Type_of_work = O_PLN_BALCONYAREA_MAP.ACTIVITY_SEQUENCE\r\n\r\n    WHERE value IS NOT NULL\r\n\r\n    AND value !='')\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date    ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n    PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA','-') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level`\r\n\r\nWHERE Project_Udate_DRANK = 1;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "FlatWise",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Balcony Area Template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_flatfinishes;\r\nINSERT INTO f_pln_flatfinishes\r\nWITH UNION_ALL AS (\r\n        SELECT * FROM F_PLN_DRYAREA\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_WETAREA\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_BALCONYAREA\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_KITCHENAREA\r\n                ),\r\n    UNION_CLEAN AS (\r\n        SELECT \r\n        UA.Upload_Date,\r\n            UA.project_id,\r\n            UA.tower,\r\n            UA.`Level`,\r\n            UA.Flat,\r\n            UA.sclicer,\r\n            CASE \r\n                WHEN UA.value IN ('','NA','TBC','-','#N/A') THEN '0%'\r\n                ELSE UA.value\r\n            END AS value,\r\n            UA.Type_of_work,\r\n            UA.ACTIVITY_ID,\r\n            UA.SBU_ID,\r\n            UA.Category,\r\n            CONCAT(UA.ACTIVITY_ID,' ', UA.Type_of_work) AS sort_type_of_work \r\n        FROM \r\n        UNION_ALL UA),\r\n    STAGGING AS (\r\n        SELECT\r\n            UA.Upload_Date,\r\n            UA.project_id,\r\n            UA.tower,\r\n            UA.`Level`,\r\n            UA.Flat,\r\n            UA.sclicer,\r\n            CAST(REPLACE(UA.value,'%','') AS DECIMAL)/100 AS value,\r\n            UA.Type_of_work,\r\n            UA.ACTIVITY_ID,\r\n            UA.SBU_ID,\r\n            UA.Category,\r\n            OLMA.level_map,\r\n            CONCAT(UA.ACTIVITY_ID,' ', UA.Type_of_work) AS sort_type_of_work\r\n        FROM UNION_CLEAN UA\r\n            LEFT JOIN O_LEVEL_MAP_ALL OLMA ON UA.`Level` = OLMA.`level`\r\n        WHERE LENGTH(value) <= 4)\r\n    SELECT\r\n        *,\r\n        CASE WHEN sclicer = 'Dry Area' THEN 1\r\n            WHEN sclicer = 'Wet Area' THEN 2\r\n            WHEN sclicer = 'Kitchen Area' THEN 3\r\n           WHEN sclicer = 'Balcony Area' THEN 4\r\n        END AS Sort_Slicer,\r\n        CASE \r\n            WHEN    TRIM(Category) =     ('MEP')    THEN    1\r\n            WHEN    TRIM(Category) =     ('Blockwork')    THEN    2\r\n            WHEN    TRIM(Category) =     ('Plaster')    THEN    3\r\n            WHEN    TRIM(Category) =     ('Builders Work')    THEN    4\r\n            WHEN    TRIM(Category) =     ('Facade')    THEN    5\r\n            WHEN    TRIM(Category) =     ('Tile')    THEN    6\r\n            WHEN    TRIM(Category) =     ('Screed')    THEN    7\r\n            WHEN    TRIM(Category) =     ('Paint')    THEN    8\r\n            WHEN    TRIM(Category) =     ('Gypsum')    THEN    9\r\n            WHEN    TRIM(Category) =     ('Marble')    THEN    10\r\n            WHEN    TRIM(Category) =     ('Silicone')    THEN    11\r\n            WHEN    TRIM(Category) =     ('Joinery')    THEN    12\r\n            WHEN    TRIM(Category) =     ('SBU1')    THEN    13\r\n            WHEN    TRIM(Category) =     ('Waterproofing')    THEN    14\r\n            WHEN    TRIM(Category) =     ('Fa�ade')    THEN    15\r\n            WHEN    TRIM(Category) =     ('EIFS')    THEN    16\r\n            WHEN    TRIM(Category) =     ('SFD')    THEN    17\r\n            WHEN    TRIM(Category) =     ('Water Proofing')    THEN    18\r\n            WHEN    TRIM(Category) =     ('Appliances')    THEN    19\r\n        END AS Category_Sort        \r\n    FROM STAGGING\r\n    ORDER BY value;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-01T12:06:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Flatwise_Template_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wet Area Template",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_wetarea;\r\nINSERT INTO f_pln_wetarea\r\nWITH PRE_STAGGING AS (\r\n\r\n    SELECT\r\n\r\n        DATE(O_PLN_WETAREA_RAW.upload_time) AS Upload_Date,\r\n\r\n        O_PLN_WETAREA_RAW.project_id,\r\n\r\n        O_PLN_WETAREA_RAW.tower,\r\n\r\n        O_PLN_WETAREA_RAW.`Level`,\r\n\r\n        O_PLN_WETAREA_RAW.Flat,\r\n\r\n        'Wet Area' AS sclicer,\r\n\r\n        Column_Name.*,\r\n\r\n        O_PLN_WETAREA_MAP.ACTIVITY_ID,\r\n\r\n        O_PLN_WETAREA_MAP.SBU_ID,\r\n\r\n        O_PLN_WETAREA_MAP.Category,\r\n\r\n        DENSE_RANK () OVER (PARTITION BY  project_id\r\n\r\n                                ORDER BY  DATE(upload_time) DESC\r\n\r\n                                )   AS  Project_Udate_DRANK\r\n\r\n    from O_PLN_WETAREA_RAW\r\n\r\n    cross join lateral (\r\n\r\n                SELECT `Plastering Clearance with 1 Mtr Marking`             ,               'Plastering Clearance with 1 Mtr Marking'\r\n\r\nUNION ALL SELECT           `Wet Area Tile Marking` ,               'Wet Area Tile Marking'\r\n\r\nUNION ALL SELECT           `MEP Marking`  ,               'MEP Marking'\r\n\r\nUNION ALL SELECT           `Wet Area Cutting & Chasing`      ,               'Wet Area Cutting & Chasing'\r\n\r\nUNION ALL SELECT           `Pex pipe installation`     ,               'Pex pipe installation'\r\n\r\nUNION ALL SELECT           `Re packing of MEP Services`       ,               'Re packing of MEP Services'\r\n\r\nUNION ALL SELECT           `MEP Pipe installation - Borepacking`      ,               'MEP Pipe installation - Borepacking'\r\n\r\nUNION ALL SELECT           `Wet Area Bore Packing`               ,               'Wet Area Bore Packing'\r\n\r\nUNION ALL SELECT           `Cistern installation`        ,               'Cistern installation'\r\n\r\nUNION ALL SELECT           `Drywall framing`             ,               'Drywall framing'\r\n\r\nUNION ALL SELECT           `Pex Elbow & Connections`          ,               'Pex Elbow & Connections'\r\n\r\nUNION ALL SELECT           `Bottom Boarding Clearance`      ,               'Bottom Boarding Clearance'\r\n\r\nUNION ALL SELECT           `Bottom boarding`           ,               'Bottom boarding'\r\n\r\nUNION ALL SELECT           `Under Screed Waterproofing`   ,               'Under Screed Waterproofing'\r\n\r\nUNION ALL SELECT           `Wet Area Screed`           ,               'Wet Area Screed'\r\n\r\nUNION ALL SELECT           `Ledge Wall Full Board Closure Clearance`             ,               'Ledge Wall Full Board Closure Clearance'\r\n\r\nUNION ALL SELECT           `MEP HL Water Supply & Drainage`          ,               'MEP HL Water Supply & Drainage '\r\n\r\nUNION ALL SELECT           `MEP HL Ducting & FCU Works`  ,               'MEP HL Ducting & FCU Works '\r\n\r\nUNION ALL SELECT           `MEP HL Electrical Services Installation`  ,               'MEP HL Electrical Services Installation'\r\n\r\nUNION ALL SELECT           `MEP HL Works & Testing`            ,               'MEP HL Works & Testing'\r\n\r\nUNION ALL SELECT           `MEP HL Packing Clearance`         ,               'MEP HL Packing Clearance'\r\n\r\nUNION ALL SELECT           `Packing for all builders work opening`   ,               'Packing for all builders work opening '\r\n\r\nUNION ALL SELECT           `Wet Area MEP H/L Fire Sealent & Framing Clearance`     ,               'Wet Area MEP H/L Fire Sealent & Framing Clearance '\r\n\r\nUNION ALL SELECT           `Wet area Wall Tile`         ,               'Wet area Wall Tile'\r\n\r\nUNION ALL SELECT           `Wet Area FC Framing`   ,               'Wet Area FC Framing'\r\n\r\nUNION ALL SELECT           `Wet Area MEP H/L Boarding Clearance` ,               'Wet Area MEP H/L Boarding Clearance'\r\n\r\nUNION ALL SELECT           `FC Boarding & Joint Taping`        ,               'FC Boarding & Joint Taping'\r\n\r\nUNION ALL SELECT           `Ceiling Paint Primer`      ,               'Ceiling Paint Primer'\r\n\r\nUNION ALL SELECT           `Ceiling Paint Stucco 1st Coat & 2nd Coat`             ,               'Ceiling Paint Stucco 1st Coat & 2nd Coat'\r\n\r\nUNION ALL SELECT           `Wet Area Ceiling First Coat Paint`            ,               'Wet Area Ceiling First Coat Paint'\r\n\r\nUNION ALL SELECT           `MEP Grill & Diffuser Installtion` ,               'MEP Grill & Diffuser Installtion '\r\n\r\nUNION ALL SELECT           `Shower Threshold`         ,               'Shower Threshold'\r\n\r\nUNION ALL SELECT           `Linear Drain Supply`      ,               'Linear Drain Supply'\r\n\r\nUNION ALL SELECT           `Linear Drain Fixing`        ,               'Linear Drain Fixing '\r\n\r\nUNION ALL SELECT           `Under Tile Waterproofing`         ,               'Under Tile Waterproofing'\r\n\r\nUNION ALL SELECT           `Bathroom Door Threshold`         ,               'Bathroom Door Threshold'\r\n\r\nUNION ALL SELECT           `Wet Area Floor Tile`       ,               'Wet Area Floor Tile'\r\n\r\nUNION ALL SELECT           `Wall tile bottom Tile`     ,               'Wall tile bottom Tile'\r\n\r\nUNION ALL SELECT           `Grouting - Wall & Floor`               ,               'Grouting - Wall & Floor'\r\n\r\nUNION ALL SELECT           `Silicone - Wall & Floor Corners` ,               'Silicone - Wall & Floor Corners'\r\n\r\nUNION ALL SELECT           `Shower Partition - U channel`    ,               'Shower Partition - U channel'\r\n\r\nUNION ALL SELECT           `Shower Partition - Glass`             ,               'Shower Partition - Glass'\r\n\r\nUNION ALL SELECT           `Accessories & Silicon`    ,               'Accessories & Silicon'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Frame Installation`      ,               'Bathroom Door - Frame Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Architrave Installation`              ,               'Bathroom Door - Architrave Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Shutter Installation`    ,               'Bathroom Door - Shutter Installation'\r\n\r\nUNION ALL SELECT           `Bathroom Door - Ironmongery Installation`         ,               'Bathroom Door - Ironmongery Installation'\r\n\r\nUNION ALL SELECT           `Vanity Cabinet` ,               'Vanity Cabinet'\r\n\r\nUNION ALL SELECT           `Vanity Cabinet Counter top`       ,               'Vanity Cabinet Counter top'\r\n\r\nUNION ALL SELECT           `MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)`    ,               'MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)'\r\n\r\nUNION ALL SELECT           `MEP Ledge Wall Clearance`        ,               'MEP Ledge Wall Clearance '\r\n\r\nUNION ALL SELECT           `Ledge Wall Closing`        ,               'Ledge Wall Closing'\r\n\r\nUNION ALL SELECT           `Silicone around MEP Fixtures`   ,               'Silicone around MEP Fixtures'\r\n\r\nUNION ALL SELECT           `Wet Area Final Coat paint`          ,               'Wet Area Final Coat paint'\r\n\r\n \r\n\r\n            )\r\n\r\n              as Column_Name(value,Type_of_work)\r\n\r\n        JOIN O_PLN_WETAREA_MAP\r\n\r\n        ON TRIM(Column_Name.Type_of_work) = TRIm(O_PLN_WETAREA_MAP.ACTIVITY_SEQUENCE)\r\n\r\n        WHERE value IS NOT NULL)\r\n\r\nSELECT\r\n\r\n    PS.Upload_Date    ,\r\n\r\n    PS.project_id    ,\r\n\r\n    PS.tower    ,\r\n\r\n    PS.`Level`    ,\r\n\r\n    PS.Flat    ,\r\n\r\n    PS.sclicer    ,\r\n\r\n    CASE\r\n\r\n        WHEN PS.value IN ('','NA','-') THEN '0%'\r\n\r\n        ELSE PS.value\r\n\r\n    END AS value,\r\n\r\n    PS.Type_of_work    ,\r\n\r\n    PS.ACTIVITY_ID    ,\r\n\r\n    PS.SBU_ID    ,\r\n\r\n    PS.Category    ,\r\n\r\n    OLMA.level_map\r\n\r\nFROM PRE_STAGGING PS\r\n\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n\r\n        ON PS.`Level` = OLMA.`level`\r\n\r\nWHERE Project_Udate_DRANK = 1;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-01T12:06:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Monthly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Business Plan Template 2022",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_business_plan_1;\r\nINSERT IGNORE INTO f_pln_business_plan_1 (Upload_date,project_id,`Type`,SBU,`Month`,`value`,`DENSE_RANK`,sbu_sort,month_sort,year_sort,Cummulative)\r\nWITH DATA_FORMATTER AS (\r\n    SELECT\r\n        DATE(upload_time) AS Upload_date,\r\n        project_id,\r\n        tower,\r\n        sbu_id,\r\n        `Type`,\r\n        SBU,\r\n        Column_Name.`Month`,\r\n        CASE \r\n            WHEN TRIM(Column_Name.VALUE) IN ('',' ','-')  AND `Type` = 'Plan'  THEN '0'\r\n            ELSE Column_Name.VALUE\r\n        END AS Value\r\n        FROM o_pln_business_plan_raw\r\n        cross join lateral (\r\n                        SELECT `Jan-22` ,  'Jan-22'\r\n                    UNION ALL SELECT `Feb-22` ,  'Feb-22'\r\n                    UNION ALL SELECT `Mar-22` ,  'Mar-22'\r\n                    UNION ALL SELECT `Apr-22` ,  'Apr-22'\r\n                    UNION ALL SELECT `May-22` ,  'May-22'\r\n                    UNION ALL SELECT `Jun-22` ,  'Jun-22'\r\n                    UNION ALL SELECT `Jul-22` ,  'Jul-22'\r\n                    UNION ALL SELECT `Aug-22` ,  'Aug-22'\r\n                    UNION ALL SELECT `Sep-22` ,  'Sep-22'\r\n                    UNION ALL SELECT `Oct-22` ,  'Oct-22'\r\n                    UNION ALL SELECT `Nov-22` ,  'Nov-22'\r\n                    UNION ALL SELECT `Dec-22` ,  'Dec-22'\r\n        )as Column_Name(value,`Month`)\r\n        WHERE\r\n    --     TRIM(SBU) NOT IN ('',' ', 'Overall','Cumulative','%') AND\r\n--         TRIM(value) NOT IN ('',' ', '-','Jan-22','Feb-22','Mar-22','Apr-22','May-22','Jun-22','Jul-22','Aug-22','Sep-22','Oct-22','Nov-22','Dec-22')\r\n        TRIM(value) NOT IN ('Jan-22','Feb-22','Mar-22','Apr-22','May-22','Jun-22','Jul-22','Aug-22','Sep-22','Oct-22','Nov-22','Dec-22')\r\n        AND TRIM(SBU) NOT IN ('',' ','Cumulative','%','Total Revenue (BOQ)','Achieved Revenue (Till 2021)','Overall')\r\n    ),\r\nSTAGGING AS (\r\n        SELECT\r\n            Upload_Date,\r\n            project_id,\r\n            `Type`,\r\n            SBU,\r\n            `Month`,\r\n            IFNULL(REPLACE(value,',',''),0.00) AS value,    \r\n            DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(Upload_Date) DESC) AS `DENSE_RANK`\r\n        FROM DATA_FORMATTER opbp\r\n        /*WHERE TRIM(value) NOT IN ('','-',' ')*/\r\n        GROUP BY 1,2,3,4,5,6 ORDER BY 1,2,3,4,5 DESC),\r\n    PRILIM_OUTPUT AS (\r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Type`,\r\n                SBU,\r\n                CASE\r\n                    WHEN SBU = 'SBU 1' THEN 1\r\n                    WHEN SBU = 'SBU 2' THEN 2\r\n                    WHEN SBU = 'SBU 3' THEN 3\r\n                    WHEN SBU = 'SBU 4' THEN 4\r\n                    WHEN SBU = 'SBU 5' THEN 5\r\n                    ELSE 6\r\n                END AS SBU_Custom_Sort,\r\n                `Month`,\r\n                value                \r\n            FROM STAGGING WHERE `DENSE_RANK` = 1 AND TRIM(SBU) NOT IN ('',' ','Cumulative','%','Total Revenue (BOQ)','Achieved Revenue (Till 2021)','Overall')),\r\nPRE_FINAL AS (\r\nSELECT\r\n    FPBP.Upload_Date,\r\n    FPBP.project_id,\r\n    FPBP.`Type`,\r\n    FPBP.SBU,\r\n    FPBP.SBU_Custom_Sort,\r\n    FPBP.`Month`,\r\n        CASE\r\n        WHEN TRIM(FPBP.`Month`) IN ('Total Revenue (BOQ)','Achieved Revenue (Till 2021)') THEN null\r\n        ELSE replace(date_format(str_to_date(concat('01-',FPBP.`Month`),'%d-%b-%y'),'%Y-%m'),'-','')\r\nEND AS ORDER_Month,\r\n        /*concat(\r\n        substring(date_format(str_to_date(concat('01-',FPBP.`Month`,'01-01-1900'),'%d-%b-%y'),'%d-%m-%Y'), 7,4),\r\n        substring(date_format(str_to_date(concat('01-',FPBP.`Month`,'01-01-1900'),'%d-%b-%y'),'%d-%m-%Y'), 4,2)\r\n        ) A,*/\r\n    \r\n    FPBP.value\r\nFROM PRILIM_OUTPUT FPBP ORDER BY 2,3,5,7),\r\nCummulative_Sum AS (\r\n    SELECT\r\n        *,\r\n        SUM(CAST(value AS DECIMAL) ) OVER(PARTITION BY project_id,`Type`,SBU_Custom_Sort ORDER BY ORDER_Month) AS Cummulative\r\n    FROM PRE_FINAL\r\n        )\r\nSelect Upload_date\r\n\t\t,project_id\r\n        ,`Type`\r\n        ,SBU\r\n        ,`Month`\r\n        ,Case when TRIM(`value`) = '0' Then '' else TRIM(`value`) end `value`\r\n        ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(Upload_Date) DESC) AS `DENSE_RANK`\r\n        ,SBU_Custom_Sort `sbu_sort`\r\n        ,ROW_NUMBER() OVER(PARTITION BY project_id, SBU, `Type` ORDER BY ORDER_month ASC) AS `month_sort`\r\n        ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY YEAR(DATE(ORDER_month)) DESC) AS `year_sort`\r\n        ,Cummulative\r\n\t\t\t\r\nFrom (         \r\nSELECT     PF.*,\r\n        CUM.Cummulative        \r\n  \r\nFROM PRE_FINAL PF LEFT JOIN Cummulative_Sum CUM\r\n    on PF.project_id = CUM.project_id\r\n    and PF.`Type` = CUM.`Type`\r\n    and PF.SBU = CUM.SBU\r\n    and PF.SBU_Custom_Sort = CUM.SBU_Custom_Sort\r\n    and PF.ORDER_Month = CUM.ORDER_Month\r\n    and PF.value = CUM.value  \r\n) A;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Business Plan Template 2023",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Business Plan Template 2022",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "INSERT IGNORE INTO f_pln_business_plan_1\r\nWITH DATA_FORMATTER AS (\r\n SELECT\r\n        DATE(upload_time) AS Upload_date,\r\n        project_id,\r\n        tower,\r\n        sbu_id,\r\n        `Type`,\r\n        SBU,\r\n        Column_Name.`Month`,\r\n        CASE \r\n            WHEN TRIM(Column_Name.VALUE) IN ('',' ','-')  AND `Type` = 'Plan'  THEN '0'\r\n            ELSE Column_Name.VALUE\r\n        END AS Value\r\n        FROM o_pln_business_plan_1\r\n        cross join lateral (\r\n                        SELECT `Jan-23` ,  'Jan-23'\r\n                    UNION ALL SELECT `Feb-23` ,  'Feb-23'\r\n                    UNION ALL SELECT `Mar-23` ,  'Mar-23'\r\n                    UNION ALL SELECT `Apr-23` ,  'Apr-23'\r\n                    UNION ALL SELECT `May-23` ,  'May-23'\r\n                    UNION ALL SELECT `Jun-23` ,  'Jun-23'\r\n                    UNION ALL SELECT `Jul-23` ,  'Jul-23'\r\n                    UNION ALL SELECT `Aug-23` ,  'Aug-23'\r\n                    UNION ALL SELECT `Sep-23` ,  'Sep-23'\r\n                    UNION ALL SELECT `Oct-23` ,  'Oct-23'\r\n                    UNION ALL SELECT `Nov-23` ,  'Nov-23'\r\n                    UNION ALL SELECT `Dec-23` ,  'Dec-23'\r\n        )as Column_Name(value,`Month`)\r\n        WHERE\r\n    --     TRIM(SBU) NOT IN ('',' ', 'Overall','Cumulative','%') AND\r\n--         TRIM(value) NOT IN ('',' ', '-','Jan-23','Feb-23','Mar-23','Apr-23','May-23','Jun-23','Jul-23','Aug-23','Sep-23','Oct-23','Nov-23','Dec-23')\r\n        TRIM(value) NOT IN ('Jan-23','Feb-23','Mar-23','Apr-23','May-23','Jun-23','Jul-23','Aug-23','Sep-23','Oct-23','Nov-23','Dec-23')\r\n        AND TRIM(SBU) NOT IN ('',' ','Cumulative','%','Total Revenue (BOQ)','Achieved Revenue (Till 2021)','Overall')\r\n    ),\r\nSTAGGING AS (\r\n        SELECT\r\n            Upload_Date,\r\n            project_id,\r\n            `Type`,\r\n            SBU,\r\n            `Month`,\r\n            IFNULL(REPLACE(value,',',''),0.00) AS value,    \r\n            DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(Upload_Date) DESC) AS `DENSE_RANK`\r\n        FROM DATA_FORMATTER opbp\r\n        /*WHERE TRIM(value) NOT IN ('','-',' ')*/\r\n        GROUP BY 1,2,3,4,5,6 ORDER BY 1,2,3,4,5 DESC),\r\n    PRILIM_OUTPUT AS (\r\n            SELECT\r\n                Upload_Date,\r\n                project_id,\r\n                `Type`,\r\n                SBU,\r\n                CASE\r\n                    WHEN SBU = 'SBU 1' THEN 1\r\n                    WHEN SBU = 'SBU 2' THEN 2\r\n                    WHEN SBU = 'SBU 3' THEN 3\r\n                    WHEN SBU = 'SBU 4' THEN 4\r\n                    WHEN SBU = 'SBU 5' THEN 5\r\n                    ELSE 6\r\n                END AS SBU_Custom_Sort,\r\n                `Month`,\r\n                value                \r\n            FROM STAGGING WHERE `DENSE_RANK` = 1 AND TRIM(SBU) NOT IN ('',' ','Cumulative','%','Total Revenue (BOQ)','Achieved Revenue (Till 2021)','Overall')),\r\nPRE_FINAL AS (\r\nSELECT\r\n    FPBP.Upload_Date,\r\n    FPBP.project_id,\r\n    FPBP.`Type`,\r\n    FPBP.SBU,\r\n    FPBP.SBU_Custom_Sort,\r\n    FPBP.`Month`,\r\n        CASE\r\n        WHEN TRIM(FPBP.`Month`) IN ('Total Revenue (BOQ)','Achieved Revenue (Till 2021)') THEN null\r\n        ELSE replace(date_format(str_to_date(concat('01-',FPBP.`Month`),'%d-%b-%y'),'%Y-%m'),'-','')\r\nEND AS ORDER_Month,\r\n        /*concat(\r\n        substring(date_format(str_to_date(concat('01-',FPBP.`Month`,'01-01-1900'),'%d-%b-%y'),'%d-%m-%Y'), 7,4),\r\n        substring(date_format(str_to_date(concat('01-',FPBP.`Month`,'01-01-1900'),'%d-%b-%y'),'%d-%m-%Y'), 4,2)\r\n        ) A,*/\r\n    \r\n    FPBP.value\r\nFROM PRILIM_OUTPUT FPBP ORDER BY 2,3,5,7),\r\nCummulative_Sum AS (\r\n    SELECT\r\n        *,\r\n        SUM(CAST(value AS DECIMAL) ) OVER(PARTITION BY project_id,`Type`,SBU_Custom_Sort ORDER BY ORDER_Month) AS Cummulative\r\n    FROM PRE_FINAL\r\n        )\r\nSelect Upload_date\r\n\t\t,project_id\r\n        ,`Type`\r\n        ,SBU\r\n        ,`Month`\r\n        ,Case when TRIM(`value`) = '0' Then '' else TRIM(`value`) end `value`\r\n        ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY DATE(Upload_Date) DESC) AS `DENSE_RANK`\r\n        ,SBU_Custom_Sort `sbu_sort`\r\n        ,ROW_NUMBER() OVER(PARTITION BY project_id, SBU, `Type` ORDER BY ORDER_month ASC) AS `month_sort`\r\n        ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY YEAR(DATE(ORDER_month)) DESC)+1 AS `year_sort`\r\n        ,Cummulative\r\nFrom (         \r\nSELECT     PF.*,\r\n        CUM.Cummulative\r\n  \r\nFROM PRE_FINAL PF LEFT JOIN Cummulative_Sum CUM\r\n    on PF.project_id = CUM.project_id\r\n    and PF.`Type` = CUM.`Type`\r\n    and PF.SBU = CUM.SBU\r\n    and PF.SBU_Custom_Sort = CUM.SBU_Custom_Sort\r\n    and PF.ORDER_Month = CUM.ORDER_Month\r\n    and PF.value = CUM.value  \r\n) A;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Service_Room')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Electrical Room",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_electricalroom;\r\nINSERT INTO f_pln_electricalroom\r\nWITH PRE_STAGGING AS(    \r\n        SELECT DATE(O_PLN_ELECTRICALROOM_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_ELECTRICALROOM_RAW.project_id,\r\n        O_PLN_ELECTRICALROOM_RAW.tower,\r\n        O_PLN_ELECTRICALROOM_RAW.Level,\r\n        'Electrical Room' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_ELECTRICALROOM_MAP.ACTIVITY_ID,\r\n        O_PLN_ELECTRICALROOM_MAP.SBU_ID,\r\n        O_PLN_ELECTRICALROOM_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    FROM O_PLN_ELECTRICALROOM_RAW\r\n    CROSS JOIN LATERAL (\r\n                        SELECT\t`Blockwork Layout`\t,\t'Blockwork Layout'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Blockwork`\t,\t'Blockwork'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Marking for Builders Work`\t,\t'MEP Marking for Builders Work'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Cutting & Chasing of Blockwork`\t,\t'Cutting & Chasing of Blockwork'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Services Installation`\t,\t'MEP Services Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall MEP Services Packing`\t,\t'Wall MEP Services Packing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Plaster`\t,\t'Plaster'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Screed`\t,\t'Screed'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall & Ceiling Primer`\t,\t'Wall & Ceiling Primer'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Ceiling Stucco (1st and 2nd Coat)`\t,\t'Ceiling Stucco (1st and 2nd Coat)'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall Stucco (1st and 2nd Coat)`\t,\t'Wall Stucco (1st and 2nd Coat)'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Ceiling First Coat Paint`\t,\t'Ceiling First Coat Paint'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall First Coat Paint`\t,\t'Wall First Coat Paint'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Meter Board Fixing`\t,\t'Meter Board Fixing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Meter Board Painting`\t,\t'Meter Board Painting'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Installation of cable tray and trunking`\t,\t'Installation of cable tray and trunking'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Installation of Panels`\t,\t'Installation of Panels'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Cable laying and glanding works`\t,\t'Cable laying and glanding works'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Dressing and termination of SMDB & Panels`\t,\t'Dressing and termination of SMDB & Panels'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Bus bar with Tap off Box completion`\t,\t'Bus bar with Tap off Box completion'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Threshold`\t,\t'Threshold'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Floor Tile`\t,\t'Floor Tile'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Frame Installation`\t,\t'Door-Frame Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Architrave Installation`\t,\t'Door-Architrave Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Shutter Installation`\t,\t'Door-Shutter Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Ironmongery Installation`\t,\t'Door-Ironmongery Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Silicone`\t,\t'Door-Silicone'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Grinding`\t,\t'Epoxy Grinding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Bug Fill`\t,\t'Epoxy Bug Fill'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Primer`\t,\t'Epoxy Primer'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy First Coat`\t,\t'Epoxy First Coat'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Final Coat`\t,\t'Epoxy Final Coat'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Skirting`\t,\t'Skirting'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`POP Works`\t,\t'POP Works'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Electrical Room Top Boarding`\t,\t'Electrical Room Top Boarding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Fire Sealant Works`\t,\t'Fire Sealant Works'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Angle Fixing`\t,\t'Angle Fixing'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Shaft Boarding`\t,\t'Shaft Boarding'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Grouting`\t,\t'Grouting'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Silicone`\t,\t'Silicone'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Signage`\t,\t'Signage'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Final Fixtures`\t,\t'MEP Final Fixtures'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Electric Meter Installation`\t,\t'Electric Meter Installation'\r\n\t\t\t\t\t\tUNION ALL SELECT\t`Final Coat Paint`\t,\t'Final Coat Paint'\r\n                        )as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_ELECTRICALROOM_MAP \r\n    ON Column_Name.Type_of_work = O_PLN_ELECTRICALROOM_MAP.ACTIVITY_SEQUENCE\r\n    WHERE VALUE IS NOT NULL)\r\nSELECT \r\n    PS.Upload_Date    ,\r\n    PS.project_id    ,\r\n    PS.tower    ,\r\n    PS.`Level`    ,\r\n    PS.sclicer    ,\r\n    CASE \r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n        ELSE PS.value\r\n    END AS value,\r\n    PS.Type_of_work    ,\r\n    PS.ACTIVITY_ID    ,\r\n    PS.SBU_ID    ,\r\n    PS.CATEGORY    ,\r\n    OLMA.level_map\r\nFROM PRE_STAGGING PS\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n        ON PS.`Level` = OLMA.`level`\r\nWHERE PS.Project_Udate_DRANK = 1 ORDER BY value DESC;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fire-Lift Lobby",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Electrical Room",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_fireliftlobby;\r\nINSERT INTO f_pln_fireliftlobby\r\nWITH PRE_STAGGING AS (\r\n        SELECT DATE(O_PLN_FIRELIFTLOBBY_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_FIRELIFTLOBBY_RAW.project_id,\r\n        O_PLN_FIRELIFTLOBBY_RAW.tower,\r\n        O_PLN_FIRELIFTLOBBY_RAW.Level,\r\n        'Fire Lift Lobby' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_FIRELIFTLOBBY_MAP.ACTIVITY_ID,\r\n        O_PLN_FIRELIFTLOBBY_MAP.SBU_ID,\r\n        O_PLN_FIRELIFTLOBBY_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    FROM O_PLN_FIRELIFTLOBBY_RAW\r\n    CROSS JOIN LATERAL (\r\n                        SELECT    `MEP Marking for Builders Work`    ,    'MEP Marking for Builders Work'\r\n                        UNION ALL SELECT    `Cutting & Chasing of Blockwork`    ,    'Cutting & Chasing of Blockwork'\r\n                        UNION ALL SELECT    `MEP Services Installation`    ,    'MEP Services Installation'\r\n                        UNION ALL SELECT    `Wall MEP Services Packing`    ,    'Wall MEP Services Packing'\r\n                        UNION ALL SELECT    `Plaster`    ,    'Plaster'\r\n                        UNION ALL SELECT    `Screed`    ,    'Screed'\r\n                        UNION ALL SELECT    `Lift Door Installation & Jamb Installation`    ,    'Lift Door Installation & Jamb Installation'\r\n                        UNION ALL SELECT    `Beside Lift Door Blockwork`    ,    'Beside Lift Door Blockwork'\r\n                        UNION ALL SELECT    `Beside Lift Door Plaster`    ,    'Beside Lift Door Plaster'\r\n                        UNION ALL SELECT    `MEP High Level Works`    ,    'MEP High Level Works'\r\n                        UNION ALL SELECT    `FC Framing`    ,    'FC Framing'\r\n                        UNION ALL SELECT    `MEP Boarding Clearance`    ,    'MEP Boarding Clearance'\r\n                        UNION ALL SELECT    `FC Boarding`    ,    'FC Boarding'\r\n                        UNION ALL SELECT    `Joint Taping and Sanding`    ,    'Joint Taping and Sanding'\r\n                        UNION ALL SELECT    `Ceiling Primer`    ,    'Ceiling Primer'\r\n                        UNION ALL SELECT    `Ceiling Stucco 1st and 2nd Coat`    ,    'Ceiling Stucco 1st and 2nd Coat'\r\n                        UNION ALL SELECT    `Ceiling First Coat Paint`    ,    'Ceiling First Coat Paint'\r\n                        UNION ALL SELECT    `Wall Primer`    ,    'Wall Primer'\r\n                        UNION ALL SELECT    `Wall Stucco 1st and 2nd Coat`    ,    'Wall Stucco 1st and 2nd Coat'\r\n                        UNION ALL SELECT    `Wall First Coat Paint`    ,    'Wall First Coat Paint'\r\n                        UNION ALL SELECT    `Floor Tile`    ,    'Floor Tile'\r\n                        UNION ALL SELECT    `Door-Frame Installation`    ,    'Door-Frame Installation'\r\n                        UNION ALL SELECT    `Door-Architrave Installation`    ,    'Door-Architrave Installation'\r\n                        UNION ALL SELECT    `Door-Shutter Installation`    ,    'Door-Shutter Installation'\r\n                        UNION ALL SELECT    `Door-Ironmongery Installation`    ,    'Door-Ironmongery Installation'\r\n                        UNION ALL SELECT    `Door-Silicone`    ,    'Door-Silicone'\r\n                        UNION ALL SELECT    `Epoxy Grinding`    ,    'Epoxy Grinding'\r\n                        UNION ALL SELECT    `Epoxy Bug Fill`    ,    'Epoxy Bug Fill'\r\n                        UNION ALL SELECT    `Epoxy Primer`    ,    'Epoxy Primer'\r\n                        UNION ALL SELECT    `Epoxy First Coat`    ,    'Epoxy First Coat'\r\n                        UNION ALL SELECT    `Epoxy Final Coat`    ,    'Epoxy Final Coat'\r\n                        UNION ALL SELECT    `Skirting`    ,    'Skirting'\r\n                        UNION ALL SELECT    `Grout`    ,    'Grout'\r\n                        UNION ALL SELECT    `Silicone`    ,    'Silicone'\r\n                        UNION ALL SELECT    `Signage`    ,    'Signage'\r\n                        UNION ALL SELECT    `MEP Final Fixtures`    ,    'MEP Final Fixtures'\r\n                        UNION ALL SELECT    `Final Coat`    ,    'Final Coat'\r\n                        )as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_FIRELIFTLOBBY_MAP \r\n    ON Column_Name.Type_of_work = O_PLN_FIRELIFTLOBBY_MAP.ACTIVITY_SEQUENCE\r\n    WHERE VALUE IS NOT NULL\r\n    )\r\nSELECT \r\n    PS.Upload_Date    ,\r\n    PS.project_id    ,\r\n    PS.tower    ,\r\n    PS.`Level`    ,\r\n    PS.sclicer    ,\r\n    CASE \r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n        ELSE PS.value\r\n    END AS value,\r\n    PS.Type_of_work    ,\r\n    PS.ACTIVITY_ID    ,\r\n    PS.SBU_ID    ,\r\n    PS.CATEGORY    ,\r\n    OLMA.level_map\r\nFROM PRE_STAGGING PS\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n        ON PS.`Level` = OLMA.`level`\r\nWHERE PS.Project_Udate_DRANK = 1;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Garbage Room",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Fire-Lift Lobby",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_garbageroom;\r\nINSERT INTO f_pln_garbageroom\r\nWITH PRE_STAGGING AS(\r\n        SELECT DATE(O_PLN_GARBAGEROOM_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_GARBAGEROOM_RAW.project_id,\r\n        O_PLN_GARBAGEROOM_RAW.tower,\r\n        O_PLN_GARBAGEROOM_RAW.Level,\r\n        'Garbage Room' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_GARBAGEROOM_MAP.ACTIVITY_ID,\r\n        O_PLN_GARBAGEROOM_MAP.SBU_ID,\r\n        O_PLN_GARBAGEROOM_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    FROM O_PLN_GARBAGEROOM_RAW\r\n    CROSS JOIN LATERAL (\r\n                        SELECT    `Outer Wall Blockwork`    ,    'Outer Wall Blockwork'\r\n                        UNION ALL SELECT    `Garbage chute Works`    ,    'Garbage chute Works'\r\n                        UNION ALL SELECT    `MEP Piping Works`    ,    'MEP Piping Works'\r\n                        UNION ALL SELECT    `MEP Pressure test & Clearance`    ,    'MEP Pressure test & Clearance'\r\n                        UNION ALL SELECT    `Inner wall Blockwork`    ,    'Inner wall Blockwork'\r\n                        UNION ALL SELECT    `MEP Marking for Builders Work`    ,    'MEP Marking for Builders Work'\r\n                        UNION ALL SELECT    `Cutting & Chasing of Blockwork`    ,    'Cutting & Chasing of Blockwork'\r\n                        UNION ALL SELECT    `MEP Services Installation`    ,    'MEP Services Installation'\r\n                        UNION ALL SELECT    `Wall MEP Services Packing`    ,    'Wall MEP Services Packing'\r\n                        UNION ALL SELECT    `Plaster`    ,    'Plaster'\r\n                        UNION ALL SELECT    `Core Cutting & Chipping`    ,    'Core Cutting & Chipping'\r\n                        UNION ALL SELECT    `MEP Sleeve Installation`    ,    'MEP Sleeve Installation'\r\n                        UNION ALL SELECT    `Bore Packing`    ,    'Bore Packing'\r\n                        UNION ALL SELECT    `Under Screed Water Proofing`    ,    'Under Screed Water Proofing'\r\n                        UNION ALL SELECT    `Screed`    ,    'Screed'\r\n                        UNION ALL SELECT    `Wall Tile`    ,    'Wall Tile'\r\n                        UNION ALL SELECT    `MEP Framing Clearance`    ,    'MEP Framing Clearance'\r\n                        UNION ALL SELECT    `False Ceiling Framing`    ,    'False Ceiling Framing'\r\n                        UNION ALL SELECT    `MEP Boarding Clearance`    ,    'MEP Boarding Clearance'\r\n                        UNION ALL SELECT    `False Ceiling Boarding`    ,    'False Ceiling Boarding'\r\n                        UNION ALL SELECT    `Ceiling Primer`    ,    'Ceiling Primer'\r\n                        UNION ALL SELECT    `Ceiling Stucco (1st and 2nd Coat)`    ,    'Ceiling Stucco (1st and 2nd Coat)'\r\n                        UNION ALL SELECT    `Ceiling First Coat Paint`    ,    'Ceiling First Coat Paint'\r\n                        UNION ALL SELECT    `Under Tile Water Proofing`    ,    'Under Tile Water Proofing'\r\n                        UNION ALL SELECT    `Threshold`    ,    'Threshold'\r\n                        UNION ALL SELECT    `Floor Tile`    ,    'Floor Tile'\r\n                        UNION ALL SELECT    `Skirting`    ,    'Skirting'\r\n                        UNION ALL SELECT    `Grouting`    ,    'Grouting'\r\n                        UNION ALL SELECT    `Silicone`    ,    'Silicone'\r\n                        UNION ALL SELECT    `Hopper Door`    ,    'Hopper Door'\r\n                        UNION ALL SELECT    `Door-Frame Installation`    ,    'Door-Frame Installation'\r\n                        UNION ALL SELECT    `Door-Architrave Installation`    ,    'Door-Architrave Installation'\r\n                        UNION ALL SELECT    `Door-Shutter Installation`    ,    'Door-Shutter Installation'\r\n                        UNION ALL SELECT    `Door-Ironmongery Installation`    ,    'Door-Ironmongery Installation'\r\n                        UNION ALL SELECT    `Door-Silicone`    ,    'Door-Silicone'\r\n                        UNION ALL SELECT    `Signage`    ,    'Signage'\r\n                        UNION ALL SELECT    `MEP Final Fixtures`    ,    'MEP Final Fixtures'\r\n                        UNION ALL SELECT    `Final Coat Paint`    ,    'Final Coat Paint'\r\n                        )as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_GARBAGEROOM_MAP \r\n    ON Column_Name.Type_of_work = O_PLN_GARBAGEROOM_MAP.ACTIVITY_SEQUENCE\r\n    WHERE VALUE IS NOT NULL)\r\nSELECT \r\n    PS.Upload_Date  ,\r\n    PS.project_id    ,\r\n    PS.tower    ,\r\n    PS.`Level`    ,\r\n    PS.sclicer    ,\r\n    CASE \r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n        ELSE PS.value\r\n    END AS value,\r\n    PS.Type_of_work    ,\r\n    PS.ACTIVITY_ID    ,\r\n    PS.SBU_ID    ,\r\n    PS.CATEGORY    ,\r\n    OLMA.level_map\r\nFROM PRE_STAGGING PS\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n        ON PS.`Level` = OLMA.`level`\r\nWHERE PS.Project_Udate_DRANK = 1;\r\n\r\n/**/\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Telephone Room",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Garbage Room",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_telephoneroom;\nINSERT INTO f_pln_telephoneroom\nWITH PRE_STAGGING AS(\n        SELECT DATE(O_PLN_TELEPHONEROOM_RAW.upload_time) AS Upload_Date,\n        O_PLN_TELEPHONEROOM_RAW.project_id,\n        O_PLN_TELEPHONEROOM_RAW.tower,\n        O_PLN_TELEPHONEROOM_RAW.Level,\n        'Telephone Room' AS sclicer,\n        Column_Name.*,\n        O_PLN_TELEPHONEROOM_MAP.ACTIVITY_ID,\n        O_PLN_TELEPHONEROOM_MAP.SBU_ID,\n        O_PLN_TELEPHONEROOM_MAP.CATEGORY,\n        DENSE_RANK () OVER     (PARTITION BY  project_id\n                            ORDER BY  DATE(upload_time) DESC\n                            )     Project_Udate_DRANK\n    FROM O_PLN_TELEPHONEROOM_RAW\n    CROSS JOIN LATERAL (\n\t\t\t\t\t\tSELECT\t`Blockwork Layout`\t,\t'Blockwork Layout'\n\t\t\t\t\t\tUNION ALL SELECT\t`Blockwork`\t,\t'Blockwork'\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Marking for Builders Work`\t,\t'MEP Marking for Builders Work'\n\t\t\t\t\t\tUNION ALL SELECT\t`Cutting & Chasing of Blockwork`\t,\t'Cutting & Chasing of Blockwork'\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Services Installation`\t,\t'MEP Services Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall MEP Services Packing`\t,\t'Wall MEP Services Packing'\n\t\t\t\t\t\tUNION ALL SELECT\t`Plaster`\t,\t'Plaster'\n\t\t\t\t\t\tUNION ALL SELECT\t`Screed`\t,\t'Screed'\n\t\t\t\t\t\tUNION ALL SELECT\t`Ceiling Stucco (1st and 2nd Coat)`\t,\t'Ceiling Stucco (1st and 2nd Coat)'\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall Stucco (1st and 2nd Coat)`\t,\t'Wall Stucco (1st and 2nd Coat)'\n\t\t\t\t\t\tUNION ALL SELECT\t`Ceiling First Coat Paint`\t,\t'Ceiling First Coat Paint'\n\t\t\t\t\t\tUNION ALL SELECT\t`Wall First Coat Paint`\t,\t'Wall First Coat Paint'\n\t\t\t\t\t\tUNION ALL SELECT\t`Installation of cable tray and trunking`\t,\t'Installation of cable tray and trunking'\n\t\t\t\t\t\tUNION ALL SELECT\t`Installation of Panels`\t,\t'Installation of Panels'\n\t\t\t\t\t\tUNION ALL SELECT\t`Cable laying and glanding works`\t,\t'Cable laying and glanding works'\n\t\t\t\t\t\tUNION ALL SELECT\t`Fire Sealant`\t,\t'Fire Sealant'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Grinding`\t,\t'Epoxy Grinding'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Bug Fill`\t,\t'Epoxy Bug Fill'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Primer`\t,\t'Epoxy Primer'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy First Coat`\t,\t'Epoxy First Coat'\n\t\t\t\t\t\tUNION ALL SELECT\t`Epoxy Final Coat`\t,\t'Epoxy Final Coat'\n\t\t\t\t\t\tUNION ALL SELECT\t`Floor Tile`\t,\t'Floor Tile'\n\t\t\t\t\t\tUNION ALL SELECT\t`Skirting`\t,\t'Skirting'\n\t\t\t\t\t\tUNION ALL SELECT\t`POP`\t,\t'POP'\n\t\t\t\t\t\tUNION ALL SELECT\t`Grout`\t,\t'Grout'\n\t\t\t\t\t\tUNION ALL SELECT\t`Threshold`\t,\t'Threshold'\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Frame Installation`\t,\t'Door-Frame Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Architrave Installation`\t,\t'Door-Architrave Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Shutter Installation`\t,\t'Door-Shutter Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`Door-Ironmongery Installation`\t,\t'Door-Ironmongery Installation'\n\t\t\t\t\t\tUNION ALL SELECT\t`MEP Final Fixtures`\t,\t'MEP Final Fixtures'\n\t\t\t\t\t\tUNION ALL SELECT\t`Final Coat Paint`\t,\t'Final Coat Paint'\n                        )as Column_Name(value,Type_of_work)\n    JOIN O_PLN_TELEPHONEROOM_MAP \n    ON Column_Name.Type_of_work = O_PLN_TELEPHONEROOM_MAP.ACTIVITY_SEQUENCE\n    WHERE VALUE IS NOT NULL)\nSELECT \n    PS.Upload_Date ,\n    PS.project_id    ,\n    PS.tower    ,\n    PS.`Level`    ,\n    PS.sclicer    ,\n    CASE \n        WHEN PS.value IN ('','NA') THEN '0%'\n        ELSE PS.value\n    END AS value,\n    PS.Type_of_work    ,\n    PS.ACTIVITY_ID    ,\n    PS.SBU_ID    ,\n    PS.CATEGORY    ,\n    OLMA.level_map\nFROM PRE_STAGGING PS\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\n        ON PS.`Level` = OLMA.`level`\nWHERE PS.Project_Udate_DRANK = 1 ;\n\n/**/\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Watermeter Room",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Telephone Room",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_waterroom;\r\nINSERT INTO f_pln_waterroom\r\nWITH PRE_STAGGING AS (\r\n        SELECT DATE(O_PLN_WATERROOM_RAW.upload_time) AS Upload_Date,\r\n        O_PLN_WATERROOM_RAW.project_id,\r\n        O_PLN_WATERROOM_RAW.tower,\r\n        O_PLN_WATERROOM_RAW.`Level`,\r\n        'Water Room' AS sclicer,\r\n        Column_Name.*,\r\n        O_PLN_WATERROOM_MAP.ACTIVITY_ID,\r\n        O_PLN_WATERROOM_MAP.SBU_ID,\r\n        O_PLN_WATERROOM_MAP.CATEGORY,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                            ORDER BY  DATE(upload_time) DESC\r\n                            )     Project_Udate_DRANK\r\n    from O_PLN_WATERROOM_RAW\r\n    cross join lateral (\r\n                SELECT  `Blockwork Layout` , 'Blockwork Layout'\r\n            UNION ALL SELECT Blockwork , 'Blockwork'\r\n            UNION ALL SELECT `MEP Marking for Builders Work` , 'MEP Marking for Builders Work'\r\n            UNION ALL SELECT `Cutting & Chasing of Blockwork` , 'Cutting & Chasing of Blockwork'\r\n            UNION ALL SELECT `MEP Services Installation` , 'MEP Services Installation'\r\n            UNION ALL SELECT `Wall MEP Services Packing` , 'Wall MEP Services Packing'\r\n            UNION ALL SELECT Plaster , 'Plaster'\r\n            UNION ALL SELECT `Core Cutting & Chipping` , 'Core Cutting & Chipping'\r\n            UNION ALL SELECT `MEP Sleeve Installation` , 'MEP Sleeve Installation'\r\n            UNION ALL SELECT `Bore Packing` , 'Bore Packing'\r\n            UNION ALL SELECT Screed , 'Screed'\r\n            UNION ALL SELECT `Wall Primer` , 'Wall Primer'\r\n            UNION ALL SELECT `Wall Stucco (1st and 2nd Coat)` , 'Wall Stucco (1st and 2nd Coat)'\r\n            UNION ALL SELECT `Wall First Coat Paint` , 'Wall First Coat Paint'\r\n            UNION ALL SELECT `Installation of PPR pipes` , 'Installation of PPR pipes'\r\n            UNION ALL SELECT `Manifold & Valve installation` , 'Manifold & Valve installation'\r\n            UNION ALL SELECT `PRV installation & connections` , 'PRV installation & connections'\r\n            UNION ALL SELECT `Testing of Pipes` , 'Testing of Pipes'\r\n            UNION ALL SELECT `Fire Sealant Works` , 'Fire Sealant Works'\r\n            UNION ALL SELECT `MEP Framing Clearance` , 'MEP Framing Clearance'\r\n            UNION ALL SELECT `False Ceiling Framing` , 'False Ceiling Framing'\r\n            UNION ALL SELECT `MEP Boarding Clearance` , 'MEP Boarding Clearance'\r\n            UNION ALL SELECT `False Ceiling Boarding` , 'False Ceiling Boarding'\r\n            UNION ALL SELECT `Ceiling Primer` , 'Ceiling Primer'\r\n            UNION ALL SELECT `Ceiling Stucco (1st and 2nd Coat)` , 'Ceiling Stucco (1st and 2nd Coat)'\r\n            UNION ALL SELECT `First Coat Paint` , 'First Coat Paint'\r\n            UNION ALL SELECT Threshold , 'Threshold'\r\n            UNION ALL SELECT `Door-Frame Installation` , 'Door-Frame Installation'\r\n            UNION ALL SELECT `Door-Architrave Installation` , 'Door-Architrave Installation'\r\n            UNION ALL SELECT `Door-Shutter Installation` , 'Door-Shutter Installation'\r\n            UNION ALL SELECT `Door-Ironmongery Installation` , 'Door-Ironmongery Installation'\r\n            UNION ALL SELECT `Epoxy Grinding` , 'Epoxy Grinding'\r\n            UNION ALL SELECT `Epoxy Bug Fill` , 'Epoxy Bug Fill'\r\n            UNION ALL SELECT `Epoxy Primer` , 'Epoxy Primer'\r\n            UNION ALL SELECT `Epoxy First Coat` , 'Epoxy First Coat'\r\n            UNION ALL SELECT `Epoxy Final Coat` , 'Epoxy Final Coat'\r\n            UNION ALL SELECT Skirting , 'Skirting'\r\n            UNION ALL SELECT `POP Works` , 'POP Works'\r\n            UNION ALL SELECT Grouting , 'Grouting'\r\n            UNION ALL SELECT Silicone , 'Silicone'\r\n            UNION ALL SELECT `MEP Final Fixtures` , 'MEP Final Fixtures'\r\n            UNION ALL SELECT `PSV Installation` , 'Pressure Safety Valve Installation'\r\n            UNION ALL SELECT `Water Meter Installation` , 'Water Meter Installation'\r\n            UNION ALL SELECT `Final Coat Paint` , 'Final Coat Paint'\r\n    )\r\n        as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_WATERROOM_MAP \r\n    ON Column_Name.Type_of_work = O_PLN_WATERROOM_MAP.ACTIVITY_SEQUENCE\r\n    WHERE value IS NOT NULL)\r\nSELECT \r\n    PS.Upload_Date ,\r\n    PS.project_id    ,\r\n    PS.tower    ,\r\n    PS.`Level`    ,\r\n    PS.sclicer    ,\r\n    CASE \r\n        WHEN PS.value IN ('','NA') THEN '0%'\r\n        ELSE PS.value\r\n    END AS value,\r\n    PS.Type_of_work    ,\r\n    PS.ACTIVITY_ID    ,\r\n    PS.SBU_ID    ,\r\n    PS.CATEGORY    ,\r\n    OLMA.level_map\r\nFROM PRE_STAGGING PS\r\n    LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n        ON PS.`Level` = OLMA.`level`\r\nWHERE PS.Project_Udate_DRANK = 1;\r\n\r\n/**/\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Service Room",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Watermeter Room",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_servicerooms;\r\nINSERT INTO f_pln_servicerooms\r\n    WITH UNION_ALL AS (\r\n        SELECT * FROM F_PLN_WATERROOM\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_ELECTRICALROOM\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_GARBAGEROOM\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_TELEPHONEROOM\r\n            UNION ALL\r\n        SELECT * FROM F_PLN_FIRELIFTLOBBY\r\n    )\r\n    SELECT \r\n        UNION_ALL.Upload_Date,    \r\n        UNION_ALL.project_id,\r\n        UNION_ALL.tower,\r\n        UNION_ALL.`Level`,\r\n        UNION_ALL.sclicer,\r\n        CAST(REPLACE(UNION_ALL.value,'%','') AS DECIMAL)/100 AS value,\r\n        UNION_ALL.ACTIVITY_ID,\r\n        UNION_ALL.SBU_ID,\r\n        UNION_ALL.CATEGORY,\r\n        CASE\r\n            WHEN Type_of_work = 'Blockwork' AND sclicer = 'Electrical Room' THEN 'Blockwork ER'\r\n            WHEN Type_of_work = 'Blockwork Layout' AND sclicer = 'Electrical Room' THEN 'Blockwork Layout ER'\r\n            WHEN Type_of_work = 'Bore Packing' AND sclicer = 'Electrical Room' THEN 'Bore Packing ER'\r\n            WHEN Type_of_work = 'Bus bar with Tap off Box completion' AND sclicer = 'Electrical Room' THEN 'Bus bar with Tap off Box completion ER'\r\n            WHEN Type_of_work = 'Cable laying and glanding works' AND sclicer = 'Electrical Room' THEN 'Cable laying and glanding works ER'\r\n            WHEN Type_of_work = 'Ceiling First Coat Paint' AND sclicer = 'Electrical Room' THEN 'Ceiling First Coat Paint ER'\r\n            WHEN Type_of_work = 'Ceiling Stucco (1st and 2nd Coat)' AND sclicer = 'Electrical Room' THEN 'Ceiling Stucco (1st and 2nd Coat) ER'\r\n            WHEN Type_of_work = 'Core Cutting & Chipping' AND sclicer = 'Electrical Room' THEN 'Core Cutting & Chipping ER'\r\n            WHEN Type_of_work = 'Cutting & Chasing of Blockwork' AND sclicer = 'Electrical Room' THEN 'Cutting & Chasing of Blockwork ER'\r\n            WHEN Type_of_work = 'Door-Architrave Installation' AND sclicer = 'Electrical Room' THEN 'Door-Architrave Installation ER'\r\n            WHEN Type_of_work = 'Door-Frame Installation' AND sclicer = 'Electrical Room' THEN 'Door-Frame Installation ER'\r\n            WHEN Type_of_work = 'Door-Ironmongery Installation' AND sclicer = 'Electrical Room' THEN 'Door-Ironmongery Installation ER'\r\n            WHEN Type_of_work = 'Door-Shutter Installation' AND sclicer = 'Electrical Room' THEN 'Door-Shutter Installation ER'\r\n            WHEN Type_of_work = 'Door-Silicone' AND sclicer = 'Electrical Room' THEN 'Door-Silicone ER'\r\n            WHEN Type_of_work = 'Epoxy Bug Fill' AND sclicer = 'Electrical Room' THEN 'Epoxy Bug Fill ER'\r\n            WHEN Type_of_work = 'Epoxy Final Coat' AND sclicer = 'Electrical Room' THEN 'Epoxy Final Coat ER'\r\n            WHEN Type_of_work = 'Epoxy First Coat' AND sclicer = 'Electrical Room' THEN 'Epoxy First Coat ER'\r\n            WHEN Type_of_work = 'Epoxy Grinding' AND sclicer = 'Electrical Room' THEN 'Epoxy Grinding ER'\r\n            WHEN Type_of_work = 'Epoxy Primer' AND sclicer = 'Electrical Room' THEN 'Epoxy Primer ER'\r\n            WHEN Type_of_work = 'Final Coat Paint' AND sclicer = 'Electrical Room' THEN 'Final Coat Paint ER'\r\n            WHEN Type_of_work = 'Fire Sealant Works' AND sclicer = 'Electrical Room' THEN 'Fire Sealant Works ER'\r\n            WHEN Type_of_work = 'Floor Tile' AND sclicer = 'Electrical Room' THEN 'Floor Tile ER'\r\n            WHEN Type_of_work = 'Grouting' AND sclicer = 'Electrical Room' THEN 'Grouting ER'\r\n            WHEN Type_of_work = 'Installation of cable tray and trunking' AND sclicer = 'Electrical Room' THEN 'Installation of cable tray and trunking ER'\r\n            WHEN Type_of_work = 'Installation of Panels' AND sclicer = 'Electrical Room' THEN 'Installation of Panels ER'\r\n            WHEN Type_of_work = 'MEP Final Fixtures' AND sclicer = 'Electrical Room' THEN 'MEP Final Fixtures ER'\r\n            WHEN Type_of_work = 'MEP Marking for Builders Work' AND sclicer = 'Electrical Room' THEN 'MEP Marking for Builders Work ER'\r\n            WHEN Type_of_work = 'MEP Services Installation' AND sclicer = 'Electrical Room' THEN 'MEP Services Installation ER'\r\n            WHEN Type_of_work = 'MEP Sleeve Installation' AND sclicer = 'Electrical Room' THEN 'MEP Sleeve Installation ER'\r\n            WHEN Type_of_work = 'Plaster' AND sclicer = 'Electrical Room' THEN 'Plaster ER'\r\n            WHEN Type_of_work = 'POP Works' AND sclicer = 'Electrical Room' THEN 'POP Works ER'\r\n            WHEN Type_of_work = 'Screed' AND sclicer = 'Electrical Room' THEN 'Screed ER'\r\n            WHEN Type_of_work = 'Signage' AND sclicer = 'Electrical Room' THEN 'Signage ER'\r\n            WHEN Type_of_work = 'Silicone' AND sclicer = 'Electrical Room' THEN 'Silicone ER'\r\n            WHEN Type_of_work = 'Skirting' AND sclicer = 'Electrical Room' THEN 'Skirting ER'\r\n            WHEN Type_of_work = 'Threshold' AND sclicer = 'Electrical Room' THEN 'Threshold ER'\r\n            WHEN Type_of_work = 'Wall First Coat Paint' AND sclicer = 'Electrical Room' THEN 'Wall First Coat Paint ER'\r\n            WHEN Type_of_work = 'Wall MEP Services Packing' AND sclicer = 'Electrical Room' THEN 'Wall MEP Services Packing ER'\r\n            WHEN Type_of_work = 'Wall Stucco (1st and 2nd Coat)' AND sclicer = 'Electrical Room' THEN 'Wall Stucco (1st and 2nd Coat) ER'\r\n            WHEN Type_of_work = 'Ceiling First Coat Paint' AND sclicer = 'Fire Lift Lobby' THEN 'Ceiling First Coat Paint FLL'\r\n            WHEN Type_of_work = 'Ceiling Primer' AND sclicer = 'Fire Lift Lobby' THEN 'Ceiling Primer FLL'\r\n            WHEN Type_of_work = 'Cutting & Chasing of Blockwork' AND sclicer = 'Fire Lift Lobby' THEN 'Cutting & Chasing of Blockwork FLL'\r\n            WHEN Type_of_work = 'Door-Shutter Installation' AND sclicer = 'Telephone Room' THEN 'Door-Shutter Installation TR'\r\n            WHEN Type_of_work = 'Epoxy Bug Fill' AND sclicer = 'Telephone Room' THEN 'Epoxy Bug Fill TR'\r\n            WHEN Type_of_work = 'Epoxy Final Coat' AND sclicer = 'Telephone Room' THEN 'Epoxy Final Coat TR'\r\n            WHEN Type_of_work = 'Epoxy First Coat' AND sclicer = 'Telephone Room' THEN 'Epoxy First Coat TR'\r\n            WHEN Type_of_work = 'Epoxy Grinding' AND sclicer = 'Telephone Room' THEN 'Epoxy Grinding TR'\r\n            WHEN Type_of_work = 'Epoxy Primer' AND sclicer = 'Telephone Room' THEN 'Epoxy Primer TR'\r\n            WHEN Type_of_work = 'Final Coat Paint' AND sclicer = 'Telephone Room' THEN 'Final Coat Paint TR'\r\n            WHEN Type_of_work = 'Floor Tile' AND sclicer = 'Telephone Room' THEN 'Floor Tile TR'\r\n            WHEN Type_of_work = 'Grout' AND sclicer = 'Telephone Room' THEN 'Grout TR'\r\n            WHEN Type_of_work = 'Installation of cable tray and trunking' AND sclicer = 'Telephone Room' THEN 'Installation of cable tray and trunking TR'\r\n            WHEN Type_of_work = 'Installation of Panels' AND sclicer = 'Telephone Room' THEN 'Installation of Panels TR'\r\n            WHEN Type_of_work = 'MEP Final Fixtures' AND sclicer = 'Telephone Room' THEN 'MEP Final Fixtures TR'\r\n            WHEN Type_of_work = 'MEP Marking for Builders Work' AND sclicer = 'Telephone Room' THEN 'MEP Marking for Builders Work TR'\r\n            WHEN Type_of_work = 'MEP Services Installation' AND sclicer = 'Telephone Room' THEN 'MEP Services Installation TR'\r\n            WHEN Type_of_work = 'Plaster' AND sclicer = 'Telephone Room' THEN 'Plaster TR'\r\n            WHEN Type_of_work = 'Screed' AND sclicer = 'Telephone Room' THEN 'Screed TR'\r\n            WHEN Type_of_work = 'Signage' AND sclicer = 'Telephone Room' THEN 'Signage TR'\r\n            WHEN Type_of_work = 'Skirting' AND sclicer = 'Telephone Room' THEN 'Skirting TR'\r\n            WHEN Type_of_work = 'Threshold' AND sclicer = 'Telephone Room' THEN 'Threshold TR'\r\n            WHEN Type_of_work = 'Wall First Coat Paint' AND sclicer = 'Telephone Room' THEN 'Wall First Coat Paint TR'\r\n            WHEN Type_of_work = 'Wall MEP Services Packing' AND sclicer = 'Telephone Room' THEN 'Wall MEP Services Packing TR'\r\n            WHEN Type_of_work = 'Wall Stucco (1st and 2nd Coat)' AND sclicer = 'Telephone Room' THEN 'Wall Stucco (1st and 2nd Coat) TR'\r\n            WHEN Type_of_work = 'Blockwork' AND sclicer = 'Water Meter Room' THEN 'Blockwork WMR'\r\n            WHEN Type_of_work = 'Blockwork Layout' AND sclicer = 'Water Meter Room' THEN 'Blockwork Layout WMR'\r\n            WHEN Type_of_work = 'Bore Packing' AND sclicer = 'Water Meter Room' THEN 'Bore Packing WMR'\r\n            WHEN Type_of_work = 'Ceiling Primer' AND sclicer = 'Water Meter Room' THEN 'Ceiling Primer WMR'\r\n            WHEN Type_of_work = 'Ceiling Stucco (1st and 2nd Coat)' AND sclicer = 'Water Meter Room' THEN 'Ceiling Stucco (1st and 2nd Coat) WMR'\r\n            WHEN Type_of_work = 'Core Cutting & Chipping' AND sclicer = 'Water Meter Room' THEN 'Core Cutting & Chipping WMR'\r\n            WHEN Type_of_work = 'Cutting & Chasing of Blockwork' AND sclicer = 'Water Meter Room' THEN 'Cutting & Chasing of Blockwork WMR'\r\n            WHEN Type_of_work = 'Door-Architrave Installation' AND sclicer = 'Water Meter Room' THEN 'Door-Architrave Installation WMR'\r\n            WHEN Type_of_work = 'Door-Frame Installation' AND sclicer = 'Water Meter Room' THEN 'Door-Frame Installation WMR'\r\n            WHEN Type_of_work = 'Door-Ironmongery Installation' AND sclicer = 'Water Meter Room' THEN 'Door-Ironmongery Installation WMR'\r\n            WHEN Type_of_work = 'Door-Shutter Installation' AND sclicer = 'Water Meter Room' THEN 'Door-Shutter Installation WMR'\r\n            WHEN Type_of_work = 'Door-Silicone' AND sclicer = 'Water Meter Room' THEN 'Door-Silicone WMR'\r\n            WHEN Type_of_work = 'Epoxy Bug Fill' AND sclicer = 'Water Meter Room' THEN 'Epoxy Bug Fill WMR'\r\n            WHEN Type_of_work = 'Epoxy Final Coat' AND sclicer = 'Water Meter Room' THEN 'Epoxy Final Coat WMR'\r\n            WHEN Type_of_work = 'Epoxy First Coat' AND sclicer = 'Water Meter Room' THEN 'Epoxy First Coat WMR'\r\n            WHEN Type_of_work = 'Epoxy Grinding' AND sclicer = 'Water Meter Room' THEN 'Epoxy Grinding WMR'\r\n            WHEN Type_of_work = 'Epoxy Primer' AND sclicer = 'Water Meter Room' THEN 'Epoxy Primer WMR'\r\n            WHEN Type_of_work = 'False Ceiling Boarding' AND sclicer = 'Water Meter Room' THEN 'False Ceiling Boarding WMR'\r\n            WHEN Type_of_work = 'False Ceiling Framing' AND sclicer = 'Water Meter Room' THEN 'False Ceiling Framing WMR'\r\n            WHEN Type_of_work = 'Fire Sealant Works' AND sclicer = 'Water Meter Room' THEN 'Fire Sealant Works WMR'\r\n            WHEN Type_of_work = 'Floor Tile' AND sclicer = 'Water Meter Room' THEN 'Floor Tile WMR'\r\n            WHEN Type_of_work = 'Grouting' AND sclicer = 'Water Meter Room' THEN 'Grouting WMR'\r\n            WHEN Type_of_work = 'MEP Boarding Clearance' AND sclicer = 'Water Meter Room' THEN 'MEP Boarding Clearance WMR'\r\n            WHEN Type_of_work = 'MEP Framing Clearance' AND sclicer = 'Water Meter Room' THEN 'MEP Framing Clearance WMR'\r\n            WHEN Type_of_work = 'MEP Marking for Builders Work' AND sclicer = 'Water Meter Room' THEN 'MEP Marking for Builders Work WMR'\r\n            WHEN Type_of_work = 'MEP Services Installation' AND sclicer = 'Water Meter Room' THEN 'MEP Services Installation WMR'\r\n            WHEN Type_of_work = 'MEP Sleeve Installation' AND sclicer = 'Water Meter Room' THEN 'MEP Sleeve Installation WMR'\r\n            WHEN Type_of_work = 'Plaster' AND sclicer = 'Water Meter Room' THEN 'Plaster WMR'\r\n            WHEN Type_of_work = 'POP Works' AND sclicer = 'Water Meter Room' THEN 'POP Works WMR'\r\n            WHEN Type_of_work = 'Screed' AND sclicer = 'Water Meter Room' THEN 'Screed WMR'\r\n            WHEN Type_of_work = 'Skirting' AND sclicer = 'Water Meter Room' THEN 'Skirting WMR'\r\n            WHEN Type_of_work = 'Threshold' AND sclicer = 'Water Meter Room' THEN 'Threshold WMR'\r\n            WHEN Type_of_work = 'Wall First Coat Paint' AND sclicer = 'Water Meter Room' THEN 'Wall First Coat Paint WMR'\r\n            WHEN Type_of_work = 'Wall MEP Services Packing' AND sclicer = 'Water Meter Room' THEN 'Wall MEP Services Packing WMR'\r\n            WHEN Type_of_work = 'Wall Primer' AND sclicer = 'Water Meter Room' THEN 'Wall Primer WMR'\r\n            WHEN Type_of_work = 'Wall Stucco (1st and 2nd Coat)' AND sclicer = 'Water Meter Room' THEN 'Wall Stucco (1st and 2nd Coat) WMR'\r\n             ELSE Type_of_work\r\n        END AS Type_of_work,\r\n        O_LEVEL_MAP_ALL.level_map,\r\n        CASE        \r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Blockwork') THEN  1\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Builders Work') THEN  2\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('MEP') THEN  16\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Plaster') THEN  3\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Screed') THEN  5\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Paint') THEN  8\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Gypsum') THEN  6\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Marble') THEN  10\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Tile') THEN  9\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Joinery') THEN  12\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Signage') THEN  7\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('SFD') THEN  15\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Epoxy') THEN  11\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Specialist Services') THEN  13\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Waterproofing')THEN  4\r\n            WHEN TRIM(UNION_ALL.CATEGORY) IN('Specialist System')THEN  14\r\n            ELSE 20\r\n        END AS CATEGORY_MAP\r\n    FROM UNION_ALL \r\n        LEFT JOIN O_LEVEL_MAP_ALL ON UNION_ALL.`Level` = O_LEVEL_MAP_ALL.`level`;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-01T12:15:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Weekly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Procurement Tracker",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_procurement;\r\nINSERT INTO f_pln_procurement\r\nWITH MAIN_TABLE AS (\r\nSELECT\r\n    DATE(upload_time) AS Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    SBU,\r\n    Classification,\r\n    Description,\r\n    Category,\r\n    CASE \r\n        WHEN TRIM(`Issuance of Drawings_Plan`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Issuance of Drawings_Plan`\r\n    END AS `Issuance of Drawings_Plan`,\r\n    CASE \r\n        WHEN TRIM(`Issuance of Drawings_Actual`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Issuance of Drawings_Actual`    \r\n    END AS `Issuance of Drawings_Actual`,\r\n    CASE \r\n        WHEN TRIM(`PR_Plan`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `PR_Plan`\r\n    END AS `PR_Plan`,\r\n    CASE \r\n        WHEN TRIM(`PR_Actual`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `PR_Actual`\r\n    END AS `PR_Actual`,\r\n    CASE \r\n        WHEN TRIM(`Vendor Finalization_Plan`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Vendor Finalization_Plan`\r\n    END AS `Vendor Finalization_Plan`,\r\n    CASE \r\n        WHEN TRIM(`Vendor Finalization_Actual`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Vendor Finalization_Actual`\r\n    END AS `Vendor Finalization_Actual`,\r\n    CASE \r\n        WHEN TRIM(`Required at site by`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Required at site by`\r\n    END AS `Required at site by`,\r\n    CASE \r\n        WHEN TRIM(`Actual delivery at site`) IN ('',\"NA\",\"-\") THEN NULL \r\n        ELSE `Actual delivery at site`\r\n    END AS `Actual delivery at site`,\r\n    DENSE_RANK() OVER ( PARTITION BY project_id ORDER BY DATE(upload_time) DESC) DENSE_RANKER\r\nFROM O_PLN_PROCUREMENT_RAW oppr),\r\nREMOVE_NULLS AS (\r\n    SELECT\r\n    Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    SBU,\r\n    Classification,\r\n    Description,\r\n    Category,\r\n    CASE\r\n     WHEN TRIM(`Issuance of Drawings_Plan`) IS NULL THEN `Issuance of Drawings_Actual`\r\n     ELSE `Issuance of Drawings_Plan`\r\n    END AS `Issuance of Drawings_Plan`,\r\n    `Issuance of Drawings_Actual`,\r\n     CASE\r\n     WHEN TRIM(`PR_Plan`) IS NULL THEN PR_Actual\r\n     ELSE `PR_Plan`\r\n     END AS `PR_Plan`,\r\n    PR_Actual,\r\n    CASE\r\n    WHEN TRIM(`Vendor Finalization_Plan`) IS NULL THEN `Vendor Finalization_Actual`\r\n    ELSE `Vendor Finalization_Plan`\r\n    END AS `Vendor Finalization_Plan`,\r\n    `Vendor Finalization_Actual`,\r\n    CASE\r\n    WHEN TRIM(`Required at site by`) IS NULL  THEN `Actual delivery at site`\r\n    ELSE `Required at site by`\r\n    END AS `Required at site by`,\r\n    `Actual delivery at site` FROM MAIN_TABLE WHERE DENSE_RANKER = 1),\r\nREMOVE_COMMENTS AS (\r\nSELECT \r\nUpload_Date,\r\nproject_id,\r\ntower,\r\nsbu_id,\r\nCASE \r\n    WHEN SBU IS NULL OR TRIM(SBU) IN ('') THEN 'Unknown'\r\n    ELSE SBU\r\nEND AS SBU,\r\nOSM.sbu_identifier,\r\nClassification,\r\nDescription,\r\nCategory,\r\nCASE WHEN `Issuance of Drawings_Plan` REGEXP ('Comp.|#VALUE!|Supply|Comp') then Upload_Date ELSE `Issuance of Drawings_Plan` END AS `Issuance of Drawings Plan`,\r\nCASE WHEN `Issuance of Drawings_Actual` REGEXP ('Comp.|complete|details to be finalized|Comp') THEN Upload_Date ELSE `Issuance of Drawings_Actual` END AS `Issuance of Drawings Actual`,\r\nCASE WHEN `PR_Plan` REGEXP ('Comp.|VALUE!|Supply|Comp') THEN Upload_Date ELSE `PR_Plan` END AS `PR Plan`,\r\nCASE WHEN `PR_Actual` REGEXP ('Central store|Comp.|Comp|Target date 14.07.2022|NA, to be removed|complete') THEN Upload_Date ELSE `PR_Actual` END AS `PR Actual`,\r\nCASE WHEN `Vendor Finalization_Plan` REGEXP ('Supply|Comp.|Comp|Supply|#VALUE!') THEN Upload_Date ELSE `Vendor Finalization_Plan`END AS `Vendor Finalization Plan`,\r\nCASE WHEN `Vendor Finalization_Actual` REGEXP ('Central store|Comp.|Comp|complete' ) THEN  Upload_Date ELSE `Vendor Finalization_Actual` END AS `Vendor Finalization Actual`,\r\nCASE WHEN `Required at site by` REGEXP ('As required|Comp.|#VALUE!|Comp') THEN Upload_Date ELSE `Required at site by` END AS `Required at site by`,\r\nCASE WHEN `Actual delivery at site` REGEXP ('As required|Comp.|Comp|complete') THEN Upload_Date ELSE `Actual delivery at site` END AS `Actual delivery at site`\r\nFROM REMOVE_NULLS\r\nLEFT JOIN O_SBU_MAPPING OSM ON REMOVE_NULLS.SBU = OSM.sbu_shorts) SELECT * FROM REMOVE_COMMENTS;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GAANT",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE aug_gaant_test;\r\nINSERT INTO aug_gaant_test\r\nWITH PRE_FORMAT_CHANGER AS (\r\n    SELECT\r\n        DATE(OPM.upload_time) AS Upload_Time,\r\n        OPM.project_id,\r\n        OPM.`Group`,\r\n        OPM.`Activity Description`,\r\n        CASE \r\n            WHEN OPM.`Actual / Forecast Start` IS NULL OR TRIM(OPM.`Actual / Forecast Start`) IN ('','-',' ') THEN REPLACE(OPM.`Baseline Start`,'-','/')\r\n            ELSE REPLACE(OPM.`Actual / Forecast Start`,'-','/')\r\n        END AS `Actual Start Date`,\r\n        CASE \r\n            WHEN OPM.`Actual / Forecast Finish` IS NULL OR TRIM(OPM.`Actual / Forecast Finish`) IN ('','-',' ') THEN REPLACE(OPM.`Baseline Finish`,'-','/')\r\n            ELSE REPLACE(OPM.`Actual / Forecast Finish`,'-','/')\r\n        END `Actual Finish Date`,\r\n        DENSE_RANK() OVER( PARTITION BY OPM.project_id ORDER BY DATE(OPM.upload_time) DESC) DENSE_RANK_,\r\n        OPM.`Actual %`\r\n    FROM\r\n        O_PLN_MILESTONE OPM \r\n        WHERE \r\n--     TRIM(OPM.`Activity Description`) NOT IN \r\n--         (\r\n--             'Pile Cap',\r\n--             'ACP Works',\r\n--             'Lift - CTU',\r\n--             'Lift - Balance passenger lifts',\r\n--             'Swimming Pool',\r\n--             'Kids Play Area/ Outdoor Play Area',\r\n--             'Kids Play Area/ Outdoor Play Are',\r\n--             'Changing Rooms / GYM',\r\n--             'Wooden Decking',\r\n--             'Transformer payment',\r\n--             'LV Inspection & Approval',\r\n--             'BCC - Inspection & Approval',\r\n--             'Power on'\r\n--         ) AND \r\n        (OPM.`Group` IS NOT NULL AND TRIM(OPM.`Group`) NOT IN ('')\r\n                AND OPM.`Activity Description` IS NOT NULL AND TRIM(OPM.`Activity Description`) NOT IN ('')\r\n--                 AND OPM.`Actual / Forecast Start` IS NOT NULL AND TRIM(OPM.`Actual / Forecast Start`) NOT IN ('')\r\n--                 AND OPM.`Actual / Forecast Finish` IS NOT NULL AND TRIM(OPM.`Actual / Forecast Finish`) NOT IN ('')\r\n                )\r\n        ),\r\n-- Again Making Small changes to the Date format\r\nFORMAT_CHANGER AS (\r\n    SELECT \r\n        FC.Upload_Time,\r\n        FC.project_id,\r\n        FC.`Group`,\r\n        FC.`Activity Description`,\r\n        CASE \r\n            WHEN FC.`Actual Start Date` LIKE '%/19' THEN REPLACE(FC.`Actual Start Date`,'/19','/2019')\r\n            WHEN FC.`Actual Start Date` LIKE '%/20' THEN REPLACE(FC.`Actual Start Date`,'/20','/2020')\r\n            WHEN FC.`Actual Start Date` LIKE '%/21' THEN REPLACE(FC.`Actual Start Date`,'/21','/2021')\r\n            WHEN FC.`Actual Start Date` LIKE '%/22' THEN REPLACE(FC.`Actual Start Date`,'/22','/2022')\r\n            WHEN FC.`Actual Start Date` LIKE '%/23' THEN REPLACE(FC.`Actual Start Date`,'/23','/2023')\r\n            WHEN FC.`Actual Start Date` LIKE '%/24' THEN REPLACE(FC.`Actual Start Date`,'/24','/2024')\r\n            ELSE FC.`Actual Start Date`\r\n        END `Actual Start Date`,\r\n        CASE \r\n            WHEN FC.`Actual Finish Date` LIKE '%/19' THEN REPLACE(FC.`Actual Finish Date`,'/19','/2019')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/20' THEN REPLACE(FC.`Actual Finish Date`,'/20','/2020')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/21' THEN REPLACE(FC.`Actual Finish Date`,'/21','/2021')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/22' THEN REPLACE(FC.`Actual Finish Date`,'/22','/2022')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/23' THEN REPLACE(FC.`Actual Finish Date`,'/23','/2023')\r\n            WHEN FC.`Actual Finish Date` LIKE '%/24' THEN REPLACE(FC.`Actual Finish Date`,'/24','/2024')\r\n            ELSE FC.`Actual Finish Date`\r\n        END `Actual Finish Date`,\r\n        FC.`Actual %`\r\n    FROM PRE_FORMAT_CHANGER FC WHERE FC.DENSE_RANK_ = 1),\r\nFormat_Changer_Final AS (\r\n    SELECT \r\n        FC.Upload_Time,\r\n        FC.project_id,\r\n        FC.`Group`,\r\n        FC.`Activity Description`,\r\n        CASE \r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%jan%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'jan','01')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%feb%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'feb','02')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%mar%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'mar','03')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%apr%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'apr','04')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%may%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'may','05')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%jun%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'jun','06')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%jul%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'jul','07')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%aug%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'aug','08')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%sep%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'sep','09')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%oct%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'oct','10')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%nov%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'nov','11')\r\n            WHEN LOWER(TRIM(FC.`Actual Start Date`)) LIKE '%dec%' THEN REPLACE(LOWER(FC.`Actual Start Date`),'dec','12')\r\n            ELSE FC.`Actual Start Date`\r\n        END AS `Actual Start Date`,\r\n        CASE \r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%jan%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'jan','01')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%feb%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'feb','02')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%mar%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'mar','03')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%apr%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'apr','04')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%may%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'may','05')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%jun%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'jun','06')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%jul%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'jul','07')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%aug%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'aug','08')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%sep%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'sep','09')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%oct%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'oct','10')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%nov%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'nov','11')\r\n            WHEN LOWER(TRIM(FC.`Actual Finish Date`)) LIKE '%dec%' THEN REPLACE(LOWER(FC.`Actual Finish Date`),'dec','12')\r\n            ELSE FC.`Actual Finish Date`\r\n        END AS `Actual Finish Date`,\r\n        FC.`Actual %`\r\n    FROM FORMAT_CHANGER FC),\r\nDATA_CORRECTOR AS (\r\n    SELECT \r\n        FCF.Upload_Time,\r\n        FCF.project_id,\r\n        FCF.`Group`,\r\n        FCF.`Activity Description`,\r\n        STR_TO_DATE(FCF.`Actual Start Date`,'%d/%c/%Y') AS `Actual Start Date`,\r\n        STR_TO_DATE(FCF.`Actual Finish Date`,'%d/%c/%Y') AS `Actual Finish Date`,\r\n        FCF.`Actual %`\r\n    FROM \r\n        Format_Changer_Final FCF),\r\n-- Final Table Actuals Milestone\r\nMILESTONE_MAIN_TABLE AS (\r\n    SELECT \r\n        DC.Upload_Time,\r\n        DC.project_id,\r\n        DC.`Group`,\r\n        DC.`Activity Description`,\r\n        DC.`Actual Start Date`,\r\n        DC.`Actual Finish Date`,\r\n        DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`) AS Total_days,\r\n        DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`) AS Days_elapsed,\r\n--         CASE\r\n--             WHEN (DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`)/ DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`)) < 1\r\n--                 AND (DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`)/ DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`)) > 0 \r\n--                 THEN (DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`)/ DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`))\r\n--             WHEN (DATEDIFF(CURRENT_DATE(), DC.`Actual Start Date`)/ DATEDIFF(DC.`Actual Finish Date`, DC.`Actual Start Date`)) < 0 THEN 0\r\n--                 ELSE 1\r\n--             END AS Completion_plan,\r\n        CASE\r\n--             For Manual Entry\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` IN ('Pile Cap','Pile')  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('ACP Works')  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` IN (\r\n                                                                                    'Lift - CTU',\r\n                                                                                    'Lift - Balance passenger lifts',\r\n                                                                                    'Swimming Pool',\r\n                                                                                    'Kids Play Area/ Outdoor Play Area',\r\n                                                                                    'Changing Rooms / GYM',\r\n                                                                                    'Wooden Decking'\r\n                                                                                    )  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'Authority Approvals' AND DC.`Activity Description` IN ( \r\n                                                                                    'Transformer payment',\r\n                                                                                    'LV Inspection & Approval',\r\n                                                                                    'BCC - Inspection & Approval',\r\n                                                                                    'Power on'\r\n                                                                                    ) THEN 'MANUAL_ENTRY'\r\n--         For Structures\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` IN ('Grade Slab','Podium Slabs','Typical Floor Slabs')  THEN 'F_PLN_STRUCTURES'\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` NOT IN ('Pile','Pile Cap','Grade Slab','Podium Slabs','Typical Floor Slabs')  THEN 'TBD'\r\n--         For Dry Area\r\n            WHEN DC.`Group` = 'Masonary Works' AND DC.`Activity Description` IN ('Blockworks')  THEN 'F_PLN_DRYAREA'\r\n            WHEN DC.`Group` = 'Finishes - Dry Area' THEN 'F_PLN_DRYAREA'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('Sliding Door')  THEN 'F_PLN_DRYAREA'\r\n--         For Wet Area    \r\n            WHEN DC.`Group` = 'Finishes - Wet Area' THEN 'F_PLN_WETAREA'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` IN ('Vanity Cabinet')  THEN 'F_PLN_WETAREA'\r\n--         For Corridor Area\r\n            WHEN DC.`Group` = 'Finishes - Corridor' THEN 'F_PLN_CORRIDOR'\r\n--         For Balcony Area\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('EIFS','Balustrade Works')  THEN 'F_PLN_BALCONYAREA'\r\n--         For Kitchen Area\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` IN ('Kitchen Appliances')  THEN 'F_PLN_KITCHENAREA'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` IN ('Kitchen Cabinet')  THEN 'F_PLN_KITCHENAREA'\r\n--         For KeepOut Area\r\n            WHEN DC.`Group` = 'Keepout' THEN 'F_PLN_KEEPOUT'\r\n--         Yet to be Decided\r\n            WHEN DC.`Group` = 'Authority Approvals' AND DC.`Activity Description` NOT IN ( \r\n                                                                                    'Transformer payment',\r\n                                                                                    'LV Inspection & Approval',\r\n                                                                                    'BCC - Inspection & Approval',\r\n                                                                                    'Power on'\r\n                                                                                    ) THEN 'TBD'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` NOT IN ('Sliding Door','EIFS','Balustrade Works','ACP Works')  THEN 'TBD'\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` NOT IN (\r\n                                                                                    'Kitchen Appliances',\r\n                                                                                    'Lift - CTU',\r\n                                                                                    'Lift - Balance passenger lifts',\r\n                                                                                    'Swimming Pool',\r\n                                                                                    'Kids Play Area/ Outdoor Play Area',\r\n                                                                                    'Changing Rooms / GYM',\r\n                                                                                    'Wooden Decking')  THEN 'TBD'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` NOT IN ('Vanity Cabinet','Kitchen Cabinet')  THEN 'TBD'\r\n            ELSE 'MISSING'\r\n        END AS Source_Templet,\r\n        OLMP.Sort_Group,\r\n        OLMP.Sort_Activity,\r\n        OLMP.Activity_New,\r\n        P.FLAT_COUNT,\r\n        DC.`Actual %`\r\n        FROM DATA_CORRECTOR DC \r\n            LEFT JOIN O_PLN_MILESTONE_MAP OLMP\r\n                ON DC.`Group` = OLMP.`Group` \r\n                AND DC.`Activity Description` = OLMP.Activity\r\n            LEFT JOIN PROJECTS P\r\n                ON DC.project_id = P.Project_Identifier),\r\n#######################################################################################################################################\r\nACTUALS_COLLECTOR AS (\r\n-- Clear the data and make it easy to read\r\n    WITH DRY_AREA_RAW AS (\r\n        SELECT \r\n            FPD.project_id,\r\n            FPD.tower,\r\n            FPD.`Level`,\r\n            FPD.Flat,\r\n            FPD.sclicer,\r\n            CAST(REPLACE(FPD.value,'%','') AS DECIMAL) AS value,\r\n            FPD.Type_of_work,\r\n            FPD.ACTIVITY_ID\r\n        FROM F_PLN_DRYAREA FPD \r\n        WHERE\r\n            LOWER(FPD.Type_of_work) IN (\r\n                                        'Plaster',\r\n                                        'Screed',\r\n                                        'Floor Tile',\r\n                                        'FC Framing',\r\n                                        'FC Boarding with Joint Taping',\r\n                                        'Floor Tiling'\r\n                                        )\r\n            AND (FPD.value LIKE '1%'\r\n                OR FPD.value LIKE '2%'\r\n                OR FPD.value LIKE '3%'\r\n                OR FPD.value LIKE '4%'\r\n                OR FPD.value LIKE '5%'\r\n                OR FPD.value LIKE '6%'\r\n                OR FPD.value LIKE '7%'\r\n                OR FPD.value LIKE '8%'\r\n                OR FPD.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    DRY_AREA_AGGREGATOR AS (\r\n        SELECT \r\n            DAR.project_id,\r\n            DAR.Type_of_work,\r\n            DENSE_RANK() OVER(PARTITION BY DAR.project_id ORDER BY DAR.tower) AS RANKER,\r\n            SUM(DAR.value) AS SUM_ALL\r\n        FROM DRY_AREA_RAW DAR \r\n        GROUP BY 1,2,DAR.tower),\r\n    DRYAREA_GAANT_FINAL AS (\r\n        SELECT \r\n            DAA.project_id,\r\n            DAA.Type_of_work,\r\n            DAA.SUM_ALL,\r\n            'F_PLN_DRYAREA' AS Source_Table\r\n        FROM DRY_AREA_AGGREGATOR DAA),\r\n    WET_AREA_RAW AS (\r\n            SELECT \r\n                WPD.project_id,\r\n                WPD.tower,\r\n                WPD.`Level`,\r\n                WPD.Flat,\r\n                WPD.sclicer,\r\n                CAST(REPLACE(WPD.value,'%','') AS DECIMAL) AS value,\r\n                WPD.Type_of_work,\r\n                WPD.ACTIVITY_ID\r\n            FROM F_PLN_WETAREA WPD \r\n            WHERE\r\n                LOWER(WPD.Type_of_work) IN (\r\n                                            'Wet Area Screed',\r\n                                            'Wet Area MEP H/L Boarding Clearance',\r\n                                            'Wall tile bottom Tile',\r\n                                            'Wet Area FC Framing',\r\n                                            'FC Boarding & Joint Taping',\r\n                                            'Floor Tile',\r\n                                            'Wet Area Final Fixtures Installation',\r\n                                            'Vanity Cabinet'\r\n                                            )\r\n                AND (WPD.value LIKE '1%'\r\n                    OR WPD.value LIKE '2%'\r\n                    OR WPD.value LIKE '3%'\r\n                    OR WPD.value LIKE '4%'\r\n                    OR WPD.value LIKE '5%'\r\n                    OR WPD.value LIKE '6%'\r\n                    OR WPD.value LIKE '7%'\r\n                    OR WPD.value LIKE '8%'\r\n                    OR WPD.value LIKE '9%'\r\n                    ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    WET_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                WAR.project_id,\r\n                WAR.Type_of_work,\r\n                SUM(WAR.value) AS SUM_ALL\r\n            FROM WET_AREA_RAW WAR \r\n            GROUP BY 1,2),\r\n    WETAREA_GAANT_FINAL AS (\r\n            SELECT \r\n                WAA.project_id,\r\n                WAA.Type_of_work,\r\n                WAA.SUM_ALL,\r\n                'F_PLN_WETAREA' AS Source_Table\r\n            FROM WET_AREA_AGGREGATOR WAA),\r\n    CORRIDOR_AREA_RAW AS (\r\n        SELECT \r\n            FPC.project_id,\r\n            FPC.tower,\r\n            FPC.`Level`,\r\n            FPC.sclicer,\r\n            CAST(REPLACE(FPC.value,'%','') AS DECIMAL) AS value,\r\n            FPC.Type_of_work,\r\n            FPC.ACTIVITY_ID\r\n        FROM F_PLN_CORRIDOR FPC \r\n        WHERE\r\n            LOWER(FPC.Type_of_work) IN (\r\n                                        'Floor Tile',\r\n                                        'Wall Tile',\r\n                                        'FC Boarding'\r\n                                        )\r\n            AND (FPC.value LIKE '1%'\r\n                OR FPC.value LIKE '2%'\r\n                OR FPC.value LIKE '3%'\r\n                OR FPC.value LIKE '4%'\r\n                OR FPC.value LIKE '5%'\r\n                OR FPC.value LIKE '6%'\r\n                OR FPC.value LIKE '7%'\r\n                OR FPC.value LIKE '8%'\r\n                OR FPC.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7 ORDER BY 1,2),\r\n    CORRIDOR_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                CAR.project_id,\r\n                CAR.Type_of_work,\r\n                SUM(CAR.value) AS SUM_ALL\r\n            FROM CORRIDOR_AREA_RAW CAR \r\n            GROUP BY 1,2),\r\n    CORRIDOR_GAANT_FINAL AS (\r\n            SELECT \r\n                WAA.project_id,\r\n                WAA.Type_of_work,\r\n                WAA.SUM_ALL,\r\n                'F_PLN_CORRIDOR' AS Source_Table\r\n            FROM CORRIDOR_AREA_AGGREGATOR WAA),\r\n    KITCHEN_AREA_RAW AS (\r\n            SELECT \r\n                FPK.project_id,\r\n                FPK.tower,\r\n                FPK.`Level`,\r\n                FPK.Flat,\r\n                FPK.sclicer,\r\n                CAST(REPLACE(FPK.value,'%','') AS DECIMAL) AS value,\r\n                FPK.Type_of_work,\r\n                FPK.ACTIVITY_ID\r\n            FROM F_PLN_KITCHENAREA FPK \r\n            WHERE\r\n                LOWER(FPK.Type_of_work) IN (\r\n                                            'Kitchen Appliances'\r\n                                            )\r\n                AND (FPK.value LIKE '1%'\r\n                    OR FPK.value LIKE '2%'\r\n                    OR FPK.value LIKE '3%'\r\n                    OR FPK.value LIKE '4%'\r\n                    OR FPK.value LIKE '5%'\r\n                    OR FPK.value LIKE '6%'\r\n                    OR FPK.value LIKE '7%'\r\n                    OR FPK.value LIKE '8%'\r\n                    OR FPK.value LIKE '9%'\r\n                    ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    KITCHEN_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                KAR.project_id,\r\n                KAR.Type_of_work,\r\n                SUM(KAR.value) AS SUM_ALL\r\n            FROM KITCHEN_AREA_RAW KAR \r\n            GROUP BY 1,2),\r\n    KITCHEN_GAANT_FINAL AS (\r\n            SELECT \r\n                KAA.project_id,\r\n                KAA.Type_of_work,\r\n                KAA.SUM_ALL,\r\n                'F_PLN_KITCHEN' AS Source_Table\r\n            FROM KITCHEN_AREA_AGGREGATOR KAA),\r\n    BALCONY_AREA_RAW AS (\r\n            SELECT \r\n                FPB.project_id,\r\n                FPB.tower,\r\n                FPB.`Level`,\r\n                FPB.Flat,\r\n                FPB.sclicer,\r\n                CAST(REPLACE(FPB.value,'%','') AS DECIMAL) AS value,\r\n                FPB.Type_of_work,\r\n                FPB.ACTIVITY_ID\r\n            FROM F_PLN_BALCONYAREA FPB \r\n            WHERE\r\n                LOWER(FPB.Type_of_work) IN (\r\n                                            'EIFS Installation'\r\n                                            )\r\n                AND (FPB.value LIKE '1%'\r\n                    OR FPB.value LIKE '2%'\r\n                    OR FPB.value LIKE '3%'\r\n                    OR FPB.value LIKE '4%'\r\n                    OR FPB.value LIKE '5%'\r\n                    OR FPB.value LIKE '6%'\r\n                    OR FPB.value LIKE '7%'\r\n                    OR FPB.value LIKE '8%'\r\n                    OR FPB.value LIKE '9%'\r\n                    ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    BALCONY_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                BAR.project_id,\r\n                BAR.Type_of_work,\r\n                SUM(BAR.value) AS SUM_ALL\r\n            FROM BALCONY_AREA_RAW BAR \r\n            GROUP BY 1,2),\r\n    BALCONY_GAANT_FINAL AS (\r\n            SELECT \r\n                KAA.project_id,\r\n                KAA.Type_of_work,\r\n                KAA.SUM_ALL,\r\n                'F_PLN_BALCONYAREA' AS Source_Table\r\n            FROM BALCONY_AREA_AGGREGATOR KAA),\r\n    SLIDINGDOOR_RAW AS (\r\n        SELECT \r\n            FPD.project_id,\r\n            FPD.tower,\r\n            FPD.`Level`,\r\n            FPD.Flat,\r\n            FPD.sclicer,\r\n            CAST(REPLACE(FPD.value,'%','') AS DECIMAL) AS value,\r\n            FPD.Type_of_work,\r\n            FPD.ACTIVITY_ID\r\n        FROM F_PLN_DRYAREA FPD \r\n        WHERE\r\n            LOWER(FPD.Type_of_work) IN (\r\n                                        'Sliding Door Box Installation',\r\n                                        'Sliding Door Frame Installation',\r\n                                        'Sliding Door Glass Installation',\r\n                                        'Sliding Door Internal Silicone',\r\n                                        'Sliding Door Alignment',\r\n                                        'Sliding Door External Silicone'\r\n                                        )\r\n            AND (FPD.value LIKE '1%'\r\n                OR FPD.value LIKE '2%'\r\n                OR FPD.value LIKE '3%'\r\n                OR FPD.value LIKE '4%'\r\n                OR FPD.value LIKE '5%'\r\n                OR FPD.value LIKE '6%'\r\n                OR FPD.value LIKE '7%'\r\n                OR FPD.value LIKE '8%'\r\n                OR FPD.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    SLIDINGDOOR_AGGREGATOR AS (\r\n            SELECT \r\n                SDR.project_id,\r\n                SDR.Type_of_work,\r\n                SUM(SDR.value) AS SUM_ALL\r\n            FROM SLIDINGDOOR_RAW SDR \r\n            GROUP BY 1,2),\r\n    SLIDINGDOOR_GAANT_STAGGING AS (\r\n            SELECT \r\n                SDA.project_id,\r\n                SDA.Type_of_work,\r\n                SDA.SUM_ALL,\r\n                CASE \r\n                    WHEN Type_of_work = 'Sliding Door Box Installation'     THEN 0.1\r\n                    WHEN Type_of_work = 'Sliding Door Frame Installation'     THEN 0.2\r\n                    WHEN Type_of_work = 'Sliding Door Glass Installation'     THEN 0.45\r\n                    WHEN Type_of_work = 'Sliding Door Internal Silicone'     THEN 0.1\r\n                    WHEN Type_of_work = 'Sliding Door Alignment'             THEN 0.05\r\n                    WHEN Type_of_work = 'Sliding Door External Silicone'     THEN 0.1\r\n                END AS Multiply_Factor,\r\n                'F_PLN_DRYAREA' AS Source_Table\r\n            FROM SLIDINGDOOR_AGGREGATOR SDA),\r\n    SLIDINGDOOR_GAANT_FINAL AS (\r\n            SELECT \r\n                SGS.project_id,\r\n                'Sliding Door' AS Type_of_work,\r\n                SUM(Multiply_Factor*SUM_ALL) AS SUM_ALL,\r\n                SGS.Source_Table\r\n            FROM SLIDINGDOOR_GAANT_STAGGING SGS\r\n            GROUP BY 1\r\n            ),\r\n    KITCHEN_CABINET_RAW AS (\r\n        SELECT \r\n            FPK.project_id,\r\n            FPK.tower,\r\n            FPK.`Level`,\r\n            FPK.Flat,\r\n            FPK.sclicer,\r\n            CAST(REPLACE(FPK.value,'%','') AS DECIMAL) AS value,\r\n            FPK.Type_of_work,\r\n            FPK.ACTIVITY_ID\r\n        FROM F_PLN_KITCHENAREA FPK \r\n        WHERE\r\n            LOWER(FPK.Type_of_work) IN (\r\n                                        'Kitchen Cabinet',\r\n                                        'Kitchen Counter Plywood',\r\n                                        'Kitchen Counter Top',\r\n                                        'Kitchen Counter Top Skirting',\r\n                                        'Kitchen Cabinet Grouting',\r\n                                        'Kitchen Cabinet Silicone'\r\n                                        )\r\n            AND (FPK.value LIKE '1%'\r\n                OR FPK.value LIKE '2%'\r\n                OR FPK.value LIKE '3%'\r\n                OR FPK.value LIKE '4%'\r\n                OR FPK.value LIKE '5%'\r\n                OR FPK.value LIKE '6%'\r\n                OR FPK.value LIKE '7%'\r\n                OR FPK.value LIKE '8%'\r\n                OR FPK.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    KITCHEN_CABINET_AGGREGATOR AS (\r\n            SELECT \r\n                SDR.project_id,\r\n                SDR.Type_of_work,\r\n                SUM(SDR.value) AS SUM_ALL\r\n            FROM KITCHEN_CABINET_RAW SDR \r\n            GROUP BY 1,2),\r\n    KITCHEN_CABINET_GAANT_STAGGING AS (\r\n            SELECT \r\n                SDA.project_id,\r\n                SDA.Type_of_work,\r\n                SDA.SUM_ALL,\r\n                CASE \r\n                    WHEN Type_of_work = 'Kitchen Cabinet'                 THEN 0.5\r\n                    WHEN Type_of_work = 'Kitchen Counter Plywood'         THEN 0.1\r\n                    WHEN Type_of_work = 'Kitchen Counter Top'             THEN 0.2\r\n                    WHEN Type_of_work = 'Kitchen Counter Top Skirting'     THEN 0.1\r\n                    WHEN Type_of_work = 'Kitchen Cabinet Grouting'         THEN 0.05\r\n                    WHEN Type_of_work = 'Kitchen Cabinet Silicone'         THEN 0.05\r\n                END AS Multiply_Factor,\r\n                'F_PLN_KITCHENAREA' AS Source_Table\r\n            FROM KITCHEN_CABINET_AGGREGATOR SDA),\r\n    KITCHEN_CABINET_GAANT_FINAL AS (\r\n            SELECT \r\n                SGS.project_id,\r\n                'Kitchen Cabinet' AS Type_of_work,\r\n                SUM(Multiply_Factor*SUM_ALL) AS SUM_ALL,\r\n                SGS.Source_Table\r\n            FROM KITCHEN_CABINET_GAANT_STAGGING SGS\r\n            GROUP BY 1\r\n            ),\r\n    KEEPOUT_AREA_RAW AS (\r\n            SELECT \r\n                FPK.project_id,\r\n                FPK.tower,\r\n                FPK.`Level`,\r\n                FPK.Flat,\r\n                'Keep Out' AS sclicer,\r\n                CAST(REPLACE(FPK.value,'%','') AS DECIMAL) AS value,\r\n                FPK.Type_of_work,\r\n                FPK.ACTIVITY_ID\r\n            FROM F_PLN_KEEPOUT FPK \r\n            WHERE\r\n                LOWER(FPK.Type_of_work) IN (\r\n                                            'Bathroom Stamp - Civil (L9)',\r\n                                            'Kitchen Stamp - Civil (I9)',\r\n                                            'Keep Out (QT)'\r\n                                            )\r\n                AND (FPK.value LIKE '1%'\r\n                    OR FPK.value LIKE '2%'\r\n                    OR FPK.value LIKE '3%'\r\n                    OR FPK.value LIKE '4%'\r\n                    OR FPK.value LIKE '5%'\r\n                    OR FPK.value LIKE '6%'\r\n                    OR FPK.value LIKE '7%'\r\n                    OR FPK.value LIKE '8%'\r\n                    OR FPK.value LIKE '9%'\r\n                    ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    KEEPOUT_AREA_AGGREGATOR AS (\r\n            SELECT \r\n                KAR.project_id,\r\n                KAR.Type_of_work,\r\n                SUM(KAR.value) AS SUM_ALL\r\n            FROM KEEPOUT_AREA_RAW KAR \r\n            GROUP BY 1,2),\r\n    KEEPOUT_GAANT_FINAL AS (\r\n            SELECT \r\n                KAA.project_id,\r\n                KAA.Type_of_work,\r\n                (KAA.SUM_ALL*100) AS SUM_ALL,\r\n                'F_PLN_KEEPOUT' AS Source_Table\r\n            FROM KEEPOUT_AREA_AGGREGATOR KAA),\r\n    BLOCKWORK_RAW AS (\r\n        SELECT \r\n            FPD.project_id,\r\n            FPD.tower,\r\n            FPD.`Level`,\r\n            FPD.Flat,\r\n            FPD.sclicer,\r\n            CAST(REPLACE(FPD.value,'%','') AS DECIMAL) AS value,\r\n            FPD.Type_of_work,\r\n            FPD.ACTIVITY_ID\r\n        FROM F_PLN_DRYAREA FPD \r\n        WHERE\r\n            LOWER(FPD.Type_of_work) IN (\r\n                                        'Blockwork First Layer'\r\n                                        'Blockwork'\r\n                                        'GI Lintel'\r\n                                        'Above Lintel Block Work'\r\n                                        )\r\n            AND (FPD.value LIKE '1%'\r\n                OR FPD.value LIKE '2%'\r\n                OR FPD.value LIKE '3%'\r\n                OR FPD.value LIKE '4%'\r\n                OR FPD.value LIKE '5%'\r\n                OR FPD.value LIKE '6%'\r\n                OR FPD.value LIKE '7%'\r\n                OR FPD.value LIKE '8%'\r\n                OR FPD.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    BLOCKWORK_AGGREGATOR AS (\r\n            SELECT \r\n                BWR.project_id,\r\n                BWR.Type_of_work,\r\n                SUM(BWR.value) AS SUM_ALL\r\n            FROM BLOCKWORK_RAW BWR \r\n            GROUP BY 1,2),\r\n    BLOCKWORK_GAANT_STAGGING AS (\r\n            SELECT \r\n                BWA.project_id,\r\n                BWA.Type_of_work,\r\n                BWA.SUM_ALL,\r\n                CASE \r\n                    WHEN Type_of_work = 'Blockwork First Layer'     THEN 0.2\r\n                    WHEN Type_of_work = 'Blockwork'                 THEN 0.4\r\n                    WHEN Type_of_work = 'GI Lintel'                 THEN 0.1\r\n                    WHEN Type_of_work = 'Above Lintel Block Work'     THEN 0.3\r\n                END AS Multiply_Factor,\r\n                'F_PLN_DRYAREA' AS Source_Table\r\n            FROM BLOCKWORK_AGGREGATOR BWA),\r\n    BLOCKWORK_GAANT_FINAL AS (\r\n            SELECT \r\n                BGS.project_id,\r\n                'Blockwork' AS Type_of_work,\r\n                SUM(BGS.Multiply_Factor*BGS.SUM_ALL) AS SUM_ALL,\r\n                BGS.Source_Table\r\n            FROM BLOCKWORK_GAANT_STAGGING BGS\r\n            GROUP BY 1\r\n            ),\r\n    BALUSTRADE_WORKS_RAW AS (\r\n        SELECT \r\n            FPB.project_id,\r\n            FPB.tower,\r\n            FPB.`Level`,\r\n            FPB.Flat,\r\n            FPB.sclicer,\r\n            CAST(REPLACE(FPB.value,'%','') AS DECIMAL) AS value,\r\n            FPB.Type_of_work,\r\n            FPB.ACTIVITY_ID\r\n        FROM F_PLN_BALCONYAREA FPB \r\n        WHERE\r\n            LOWER(FPB.Type_of_work) IN (\r\n                                        'F channel Installation',\r\n                                        'Top Rail Bracket Installation',\r\n                                        'Balustrade Glass Installation',\r\n                                        'Balustrade Top Rail',\r\n                                        'Balustrade-Internal Flashing'\r\n                                        )\r\n            AND (FPB.value LIKE '1%'\r\n                OR FPB.value LIKE '2%'\r\n                OR FPB.value LIKE '3%'\r\n                OR FPB.value LIKE '4%'\r\n                OR FPB.value LIKE '5%'\r\n                OR FPB.value LIKE '6%'\r\n                OR FPB.value LIKE '7%'\r\n                OR FPB.value LIKE '8%'\r\n                OR FPB.value LIKE '9%'\r\n                ) GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2),\r\n    BALUSTRADE_WORKS_AGGREGATOR AS (\r\n            SELECT \r\n                BWR.project_id,\r\n                BWR.Type_of_work,\r\n                SUM(BWR.value) AS SUM_ALL\r\n            FROM BALUSTRADE_WORKS_RAW BWR \r\n            GROUP BY 1,2),\r\n    BALUSTRADE_WORKS_GAANT_STAGGING AS (\r\n            SELECT \r\n                BWA.project_id,\r\n                BWA.Type_of_work,\r\n                BWA.SUM_ALL,\r\n                CASE \r\n                    WHEN Type_of_work = 'F channel Installation'             THEN 0.2\r\n                    WHEN Type_of_work = 'Top Rail Bracket Installation'        THEN 0.2\r\n                    WHEN Type_of_work = 'Balustrade Glass Installation'        THEN 0.2\r\n                    WHEN Type_of_work = 'Balustrade Top Rail'                 THEN 0.2\r\n                    WHEN Type_of_work = 'Balustrade-Internal Flashing'        THEN 0.2\r\n                END AS Multiply_Factor,\r\n                'F_PLN_DRYAREA' AS Source_Table\r\n            FROM BALUSTRADE_WORKS_AGGREGATOR BWA),\r\n    BALUSTRADE_WORKS_GAANT_FINAL AS (\r\n            SELECT \r\n                BGS.project_id,\r\n                'Balustrade Works' AS Type_of_work,\r\n                SUM(BGS.Multiply_Factor*BGS.SUM_ALL) AS SUM_ALL,\r\n                BGS.Source_Table\r\n            FROM BALUSTRADE_WORKS_GAANT_STAGGING BGS\r\n            GROUP BY 1\r\n            ),\r\n-- Structures , The Biggest headache till now \r\n    GRADE_SLAB_COUNT AS (\r\n        SELECT     \r\n            P.Project_Identifier,\r\n            COUNT(*) AS GS_Count\r\n        FROM O_PLN_STRUCTURES_POUR_MAP OSPM \r\n            LEFT JOIN PROJECTS P \r\n            ON OSPM.project_id  = P.Project_Identifier\r\n        WHERE LOWER(OSPM.type_of_pour) LIKE 'slab%' \r\n        GROUP BY 1\r\n        ),\r\n   # Divide By 0\r\n   GRADE_SLAB_FINAL AS (\r\n        SELECT \r\n            GSCU.*,\r\n            'Grade Slab' AS Area,\r\n            GSCM.GS_COMPLETED,\r\n            CASE WHEN GS_Count=0 THEN NULL ELSE CAST((GSCM.GS_COMPLETED/GS_Count) AS DECIMAL(3,2)) END AS Actuals\r\n        FROM GRADE_SLAB_COUNT GSCU \r\n            LEFT JOIN (    SELECT \r\n                            FPS.Project_Identifier,\r\n                            COUNT(FPS.`Level`) AS GS_COMPLETED\r\n                        FROM F_PLN_STRUCTURES FPS\r\n                        WHERE LOWER(FPS.`Level`) LIKE '%grade slab%' \r\n                            AND value IS NOT NULL \r\n                        GROUP BY 1) AS GSCM \r\n                ON GSCU.Project_Identifier = GSCM.Project_Identifier),\r\n    ACTUALS_OTHER_SLABS AS (\r\n        SELECT \r\n            FPS.Project_Identifier,\r\n            OPTPM.Area ,\r\n            COUNT(FPS.Pour) Total_Completed \r\n        FROM F_PLN_STRUCTURES  FPS\r\n            LEFT JOIN O_PLN_TOWER_PODIUM_MAP OPTPM\r\n                ON FPS.Project_Identifier = OPTPM.Project \r\n                AND FPS.`Level` = OPTPM.`Level` \r\n--         WHERE FPS.Project_Identifier = 'Sobha Waves' \r\n--             AND FPS.Pour LIKE 'slab%'\r\n        WHERE FPS.Pour LIKE 'slab%'\r\n            AND LOWER(TRIM(FPS.`Level`))!= 'grade slab'\r\n        GROUP BY 1,2\r\n        ##ORDER BY level_map\r\n        ),\r\n    PIVOTING_TABLE AS (\r\n        SELECT *,\r\n            (Total_Podiums*Podium_Slab) AS PODIUM_COUNT,\r\n            (Total_Typical_Floor*Typical_Floor_Slab) AS TYPICAL_FLOOR_COUNT\r\n        FROM PROJECTS),\r\n    COUNT_VALUE AS (\r\n        SELECT \r\n            Project_Identifier,\r\n            Virtual_table.*\r\n        FROM PIVOTING_TABLE \r\n            CROSS JOIN LATERAL ( \r\n                        SELECT 'Podium',PODIUM_COUNT \r\n                    UNION ALL SELECT 'Typical Floor',TYPICAL_FLOOR_COUNT \r\n                                ) AS Virtual_table(Area,Value)\r\n        WHERE Value IS NOT NULL),\r\n    # Divide By 0\r\n    OTHER_SLABS_FINAL AS (\r\n    SELECT \r\n        CV.*,\r\n        A.Total_Completed,\r\n        CASE WHEN CV.Value=0 THEN NULL ELSE CAST((A.Total_Completed/CV.Value) AS DECIMAL(4,2)) END AS Actuals\r\n    FROM COUNT_VALUE CV\r\n    LEFT JOIN ACTUALS_OTHER_SLABS A ON CV.Project_Identifier = A.Project_Identifier\r\n                        AND CV.Area = A.Area),\r\n    STRUCTURE_UNION_ALL AS (\r\n        SELECT \r\n            Project_Identifier AS project_id,\r\n            Area AS Type_of_work,\r\n            Actuals AS SUM_ALL,\r\n            'F_PLN_STRUCTURES' AS Source_Table\r\n        FROM GRADE_SLAB_FINAL\r\n        UNION ALL\r\n        SELECT \r\n            Project_Identifier AS project_id,\r\n            Area AS Type_of_work,\r\n            Actuals AS SUM_ALL,\r\n            'F_PLN_STRUCTURES' AS Source_Table\r\n        FROM OTHER_SLABS_FINAL),\r\n    STRUCTURE_GAANT_FINAL AS (\r\n        SELECT \r\n            SGF.project_id,\r\n            SGF.Type_of_work,\r\n            (SGF.SUM_ALL*P.FLAT_COUNT)*100 AS SUM_ALL,\r\n            SGF.Source_Table\r\n        FROM STRUCTURE_UNION_ALL SGF \r\n            LEFT JOIN PROJECTS P \r\n                ON SGF.project_id = P.Project_Identifier),\r\n     # Divide By 0\r\n    ALL_AREA_TEMPLET AS (\r\n        SELECT * FROM DRYAREA_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM WETAREA_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM CORRIDOR_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM KITCHEN_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM BALCONY_GAANT_FINAL\r\n        UNION ALL \r\n        SELECT * FROM SLIDINGDOOR_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM KITCHEN_CABINET_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM KEEPOUT_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM BLOCKWORK_GAANT_FINAL\r\n        UNION ALL\r\n        SELECT * FROM BALUSTRADE_WORKS_GAANT_FINAL\r\n        UNION ALL \r\n        SELECT * FROM STRUCTURE_GAANT_FINAL)\r\n    SELECT\r\n        *,\r\n        CASE\r\n            -- Converting Template Headers to Milestone Templetes\r\n-- For Corridor Area\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Floor Tile'\r\n                AND `Source_Table` = 'F_PLN_CORRIDOR' THEN 'Floor Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wall Tile'\r\n                AND `Source_Table` = 'F_PLN_CORRIDOR' THEN 'Wall Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'FC Boarding'\r\n                AND `Source_Table` = 'F_PLN_CORRIDOR' THEN 'False Ceiling - Boarding'\r\n-- For Dry Area\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Plaster'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Plaster'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Screed'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Screed'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Floor Tiling'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Floor Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'FC Framing'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'False Ceiling - Framing'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'FC Boarding with Joint Taping'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'False Ceiling - Boarding'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Kitchen Cabinet'\r\n                AND `Source_Table` = 'F_PLN_KITCHENAREA' THEN 'Kitchen Cabinet'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Kitchen Appliances'\r\n                AND `Source_Table` = 'F_PLN_KITCHENAREA' THEN 'Kitchen Appliances'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Sliding Door'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Sliding Door'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Blockwork'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Blockwork'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Balustrade Works'\r\n                AND `Source_Table` = 'F_PLN_DRYAREA' THEN 'Balustrade Works'\r\n-- For Wet Area\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wet Area Screed'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'Screed'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wet Area MEP H/L Boarding Clearance'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'MEP High Lvl'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wall tile bottom Tile'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'Wall Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wet Area FC Framing'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'False Ceiling - Framing'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'FC Boarding & Joint Taping'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'False Ceiling - Boarding'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Floor Tile'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'Floor Tiles'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Wet Area Final Fixtures Installation'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'MEP Final Fix'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Vanity Cabinet'\r\n                AND `Source_Table` = 'F_PLN_WETAREA' THEN 'Vanity Cabinet'\r\n-- For Balcony Area\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'EIFS Installation'\r\n                AND `Source_Table` = 'F_PLN_BALCONYAREA' THEN 'EIFS'\r\n-- For Keep Out\r\n-- Need to change this once we have the approval frm SAI\r\n--             WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Bathroom Stamp - Civil (L9)'\r\n--                 AND `Source_Table` = 'F_PLN_KEEPOUT' THEN 'CAP^Q Common Area QT Inspections'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Keep Out (QT)'\r\n                AND `Source_Table` = 'F_PLN_KEEPOUT' THEN 'CAP^Q Unit QT Keep-out approvals'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Kitchen Stamp - Civil (I9)'\r\n                AND `Source_Table` = 'F_PLN_KEEPOUT' THEN 'CAP^Q (Stamp - I9) Kitchen Keep-'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Bathroom Stamp - Civil (L9)'\r\n                AND `Source_Table` = 'F_PLN_KEEPOUT' THEN 'CAP^Q (Stamp - L9) Bathroom Keep'\r\n-- For Structures\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Podium'\r\n                AND `Source_Table` = 'F_PLN_STRUCTURES' THEN 'Podium Slabs'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Grade Slab'\r\n                AND `Source_Table` = 'F_PLN_STRUCTURES' THEN 'Grade Slab'\r\n            WHEN LOWER(TRIM(AAT.Type_of_work)) = 'Typical Floor'\r\n                AND `Source_Table` = 'F_PLN_STRUCTURES' THEN 'Typical Floor Slabs'\r\n            ELSE NULL\r\n        END AS Milestone_Activity_Map\r\n    FROM ALL_AREA_TEMPLET AAT),\r\nOUTPUT_Plan AS (\r\n    SELECT \r\n        MMT.Upload_Time AS Upload_Date,\r\n        MMT.project_id,\r\n        MMT.`Group`,\r\n        MMT.`Activity Description`,\r\n        MMT.Activity_New,\r\n--         AC.Milestone_Activity_Map,\r\n        CASE WHEN MMT.FLAT_COUNT=0 THEN NULL ELSE CAST((AC.SUM_ALL/MMT.FLAT_COUNT) AS DECIMAL(12,4)) END AS  Actual_Achived,\r\n        MMT.`Actual Start Date`,\r\n        MMT.`Actual Finish Date`,\r\n        MMT.Total_days,\r\n        MMT.Days_elapsed,\r\n--         MMT.Completion_plan,\r\n        MMT.Source_Templet,\r\n        AC.Source_Table,\r\n        MMT.Sort_Group,\r\n        MMT.Sort_Activity,\r\n        MMT.`Actual %`\r\n--         MMT.FLAT_COUNT\r\n    --     AC.project_id,\r\n    --     AC.Type_of_work,\r\n    --     AC.SUM_ALL,\r\n    --     AC.Source_Table,\r\n--         AC.Milestone_Activity_Map,\r\n--         CAST((AC.SUM_ALL/MMT.FLAT_COUNT)/100 AS DECIMAL(12,4)) AS  Actual_Achived\r\n    FROM MILESTONE_MAIN_TABLE MMT\r\n        LEFT JOIN ACTUALS_COLLECTOR AC\r\n            ON MMT.project_id = AC.project_id\r\n            AND MMT.`Activity Description` = AC.Milestone_Activity_Map\r\n            AND MMT.Source_Templet = AC.Source_Table),\r\n-- Additionally Added the Actuals Value Above\r\n################################# Actual Calculation Completed ##############################################################\r\nPRE_FORMAT_CHANGER_Plan AS (\r\n    SELECT\r\n        DATE(OPM.upload_time) AS Upload_Time,\r\n        OPM.project_id,\r\n        OPM.`Group`,\r\n        OPM.`Activity Description`,\r\n        REPLACE(OPM.`Baseline Start`,'-','/') AS `Baseline Start Date`,\r\n        REPLACE(OPM.`Baseline Finish`,'-','/') AS `Baseline Finish Date`,\r\n        DENSE_RANK() OVER( PARTITION BY OPM.project_id ORDER BY DATE(OPM.upload_time) DESC) DENSE_RANK_,\r\n        OPM.`Actual %`\r\n    FROM\r\n        O_PLN_MILESTONE OPM\r\n        WHERE \r\n--         TRIM(OPM.`Activity Description`) NOT IN \r\n--         (\r\n--             'Pile Cap',\r\n--             'ACP Works',\r\n--             'Lift - CTU',\r\n--             'Lift - Balance passenger lifts',\r\n--             'Swimming Pool',\r\n--             'Kids Play Area/ Outdoor Play Area',\r\n--             'Kids Play Area/ Outdoor Play Are',\r\n--             'Changing Rooms / GYM',\r\n--             'Wooden Decking',\r\n--             'Transformer payment',\r\n--             'LV Inspection & Approval',\r\n--             'BCC - Inspection & Approval',\r\n--             'Power on'\r\n--         ) AND \r\n        (OPM.`Group` IS NOT NULL AND TRIM(OPM.`Group`) NOT IN ('')\r\n                AND OPM.`Activity Description` IS NOT NULL AND TRIM(OPM.`Activity Description`) NOT IN ('')\r\n                AND OPM.`Baseline Start` IS NOT NULL AND TRIM(OPM.`Baseline Start`) NOT IN ('')\r\n                AND OPM.`Baseline Finish` IS NOT NULL AND TRIM(OPM.`Baseline Finish`) NOT IN ('')\r\n                )\r\n        ),\r\nFORMAT_CHANGER_Plan AS (\r\n    SELECT \r\n        FC.Upload_Time,\r\n        FC.project_id,\r\n        FC.`Group`,\r\n        FC.`Activity Description`,\r\n        CASE \r\n            WHEN FC.`Baseline Start Date` LIKE '%/19' THEN REPLACE(FC.`Baseline Start Date`,'/19','/2019')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/20' THEN REPLACE(FC.`Baseline Start Date`,'/20','/2020')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/21' THEN REPLACE(FC.`Baseline Start Date`,'/21','/2021')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/22' THEN REPLACE(FC.`Baseline Start Date`,'/22','/2022')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/23' THEN REPLACE(FC.`Baseline Start Date`,'/23','/2023')\r\n            WHEN FC.`Baseline Start Date` LIKE '%/24' THEN REPLACE(FC.`Baseline Start Date`,'/24','/2024')\r\n            ELSE FC.`Baseline Start Date`\r\n        END `Baseline Start Date`,\r\n        CASE \r\n            WHEN FC.`Baseline Finish Date` LIKE '%/19' THEN REPLACE(FC.`Baseline Finish Date`,'/19','/2019')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/20' THEN REPLACE(FC.`Baseline Finish Date`,'/20','/2020')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/21' THEN REPLACE(FC.`Baseline Finish Date`,'/21','/2021')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/22' THEN REPLACE(FC.`Baseline Finish Date`,'/22','/2022')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/23' THEN REPLACE(FC.`Baseline Finish Date`,'/23','/2023')\r\n            WHEN FC.`Baseline Finish Date` LIKE '%/24' THEN REPLACE(FC.`Baseline Finish Date`,'/24','/2024')\r\n            ELSE FC.`Baseline Finish Date`\r\n        END `Baseline Finish Date`,\r\n        FC.`Actual %`\r\n    FROM PRE_FORMAT_CHANGER_Plan FC WHERE FC.DENSE_RANK_ = 1),\r\nFormat_Changer_Final_Plan AS (\r\n    SELECT \r\n        FC.Upload_Time,\r\n        FC.project_id,\r\n        FC.`Group`,\r\n        FC.`Activity Description`,\r\n        CASE \r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%jan%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'jan','01')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%feb%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'feb','02')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%mar%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'mar','03')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%apr%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'apr','04')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%may%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'may','05')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%jun%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'jun','06')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%jul%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'jul','07')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%aug%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'aug','08')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%sep%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'sep','09')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%oct%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'oct','10')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%nov%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'nov','11')\r\n            WHEN LOWER(TRIM(FC.`Baseline Start Date`)) LIKE '%dec%' THEN REPLACE(LOWER(FC.`Baseline Start Date`),'dec','12')\r\n            ELSE FC.`Baseline Start Date`\r\n        END AS `Baseline Start Date`,\r\n        CASE \r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%jan%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'jan','01')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%feb%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'feb','02')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%mar%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'mar','03')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%apr%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'apr','04')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%may%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'may','05')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%jun%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'jun','06')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%jul%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'jul','07')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%aug%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'aug','08')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%sep%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'sep','09')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%oct%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'oct','10')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%nov%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'nov','11')\r\n            WHEN LOWER(TRIM(FC.`Baseline Finish Date`)) LIKE '%dec%' THEN REPLACE(LOWER(FC.`Baseline Finish Date`),'dec','12')\r\n            ELSE FC.`Baseline Finish Date`\r\n        END AS `Baseline Finish Date`,\r\n        FC.`Actual %`\r\n    FROM FORMAT_CHANGER_Plan FC),\r\nDATA_CORRECTOR_Plan AS (\r\n    SELECT \r\n        FCF.Upload_Time,\r\n        FCF.project_id,\r\n        FCF.`Group`,\r\n        FCF.`Activity Description`,\r\n        STR_TO_DATE(FCF.`Baseline Start Date`,'%d/%c/%Y') AS `Baseline Start Date`,\r\n        STR_TO_DATE(FCF.`Baseline Finish Date`,'%d/%c/%Y') AS `Baseline Finish Date`,\r\n        FCF.`Actual %`\r\n    FROM \r\n        Format_Changer_Final_Plan FCF),\r\n # Divide By 0\r\nMILESTONE_MAIN_TABLE_Plan AS (\r\n    SELECT \r\n        DC.Upload_Time,\r\n        DC.project_id,\r\n        DC.`Group`,\r\n        DC.`Activity Description`,\r\n        DC.`Baseline Start Date`,\r\n        DC.`Baseline Finish Date`,\r\n        DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`) AS Total_days,\r\n        DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`) AS Days_elapsed,\r\n        CASE\r\n\t\t\tWHEN DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`) =0 THEN NULL\r\n            WHEN (DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`)/ DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`)) < 1\r\n                AND (DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`)/ DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`)) > 0 \r\n                THEN (DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`)/ DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`))\r\n            WHEN (DATEDIFF(CURRENT_DATE(), DC.`Baseline Start Date`)/ DATEDIFF(DC.`Baseline Finish Date`, DC.`Baseline Start Date`)) < 0 THEN 0\r\n                ELSE 1\r\n            END AS Completion_plan,\r\n        CASE\r\n--             For Manual Entry\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` IN ('Pile Cap','Pile')  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('ACP Works')  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` IN (\r\n                                                                                    'Lift - CTU',\r\n                                                                                    'Lift - Balance passenger lifts',\r\n                                                                                    'Swimming Pool',\r\n                                                                                    'Kids Play Area/ Outdoor Play Area',\r\n                                                                                    'Changing Rooms / GYM',\r\n                                                                                    'Wooden Decking'\r\n                                                                                    )  THEN 'MANUAL_ENTRY'\r\n            WHEN DC.`Group` = 'Authority Approvals' AND DC.`Activity Description` IN ( \r\n                                                                                    'Transformer payment',\r\n                                                                                    'LV Inspection & Approval',\r\n                                                                                    'BCC - Inspection & Approval',\r\n                                                                                    'Power on'\r\n                                                                                    ) THEN 'MANUAL_ENTRY'\r\n--         For Structures\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` IN ('Grade Slab','Podium Slabs','Typical Floor Slabs')  THEN 'F_PLN_STRUCTURES'\r\n            WHEN DC.`Group` = 'Structural Works' AND DC.`Activity Description` NOT IN ('Pile','Pile Cap','Grade Slab','Podium Slabs','Typical Floor Slabs')  THEN 'TBD'\r\n--         For Dry Area\r\n            WHEN DC.`Group` = 'Masonary Works' AND DC.`Activity Description` IN ('Blockworks')  THEN 'F_PLN_DRYAREA'\r\n            WHEN DC.`Group` = 'Finishes - Dry Area' THEN 'F_PLN_DRYAREA'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('Sliding Door')  THEN 'F_PLN_DRYAREA'\r\n--         For Wet Area    \r\n            WHEN DC.`Group` = 'Finishes - Wet Area' THEN 'F_PLN_WETAREA'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` IN ('Vanity Cabinet')  THEN 'F_PLN_WETAREA'\r\n--         For Corridor Area\r\n            WHEN DC.`Group` = 'Finishes - Corridor' THEN 'F_PLN_CORRIDOR'\r\n--         For Balcony Area\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` IN ('EIFS','Balustrade Works')  THEN 'F_PLN_BALCONYAREA'\r\n--         For Kitchen Area\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` IN ('Kitchen Appliances')  THEN 'F_PLN_KITCHENAREA'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` IN ('Kitchen Cabinet')  THEN 'F_PLN_KITCHENAREA'\r\n--         For KeepOut Area\r\n            WHEN DC.`Group` = 'Keepout' THEN 'F_PLN_KEEPOUT'\r\n--         Yet to be Decided\r\n            WHEN DC.`Group` = 'Authority Approvals' AND DC.`Activity Description` NOT IN ( \r\n                                                                                    'Transformer payment',\r\n                                                                                    'LV Inspection & Approval',\r\n                                                                                    'BCC - Inspection & Approval',\r\n                                                                                    'Power on'\r\n                                                                                    ) THEN 'TBD'\r\n            WHEN DC.`Group` = 'External Elevation' AND DC.`Activity Description` NOT IN ('Sliding Door','EIFS','Balustrade Works','ACP Works')  THEN 'TBD'\r\n            WHEN DC.`Group` = 'Other & Specialist' AND DC.`Activity Description` NOT IN (\r\n                                                                                    'Kitchen Appliances',\r\n                                                                                    'Lift - CTU',\r\n                                                                                    'Lift - Balance passenger lifts',\r\n                                                                                    'Swimming Pool',\r\n                                                                                    'Kids Play Area/ Outdoor Play Area',\r\n                                                                                    'Changing Rooms / GYM',\r\n                                                                                    'Wooden Decking')  THEN 'TBD'\r\n            WHEN DC.`Group` = 'Joinery Works' AND DC.`Activity Description` NOT IN ('Vanity Cabinet','Kitchen Cabinet')  THEN 'TBD'\r\n            ELSE 'MISSING'\r\n        END AS Source_Templet,\r\n        OLMP.Sort_Group,\r\n        OLMP.Sort_Activity,\r\n        OLMP.Activity_New,\r\n        P.FLAT_COUNT,\r\n        DC.`Actual %`\r\n        FROM DATA_CORRECTOR_Plan DC \r\n            LEFT JOIN O_PLN_MILESTONE_MAP OLMP\r\n                ON DC.`Group` = OLMP.`Group` \r\n                AND DC.`Activity Description` = OLMP.Activity\r\n            LEFT JOIN PROJECTS P\r\n                ON DC.project_id = P.Project_Identifier),\r\nUnion_All_Final AS (\r\n    SELECT \r\n        *,\r\n        'Actuals' AS Legend\r\n    FROM OUTPUT_Plan\r\n    UNION ALL \r\n    SELECT \r\n        Upload_Time,\r\n        project_id,\r\n        `Group`,\r\n        `Activity Description`,\r\n        Activity_New,\r\n--         Completion_plan*100 AS Actual_Achived,\r\n        Completion_plan AS Actual_Achived,\r\n        `Baseline Start Date`  AS     `Actual Start Date`,\r\n        `Baseline Finish Date` AS    `Actual Finish Date`,\r\n        Total_days,\r\n        Days_elapsed,\r\n        Source_Templet,\r\n        Source_Templet AS Source_Table,\r\n        Sort_Group,\r\n        Sort_Activity,\r\n        `Actual %`,\r\n        'Plan' AS Legend\r\n    FROM MILESTONE_MAIN_TABLE_Plan),\r\nCORRECTOR_Manual_Actuals AS (\r\nSELECT \r\n    DATE(upload_time) AS Upload_Date,\r\n    project_id,\r\n    tower,\r\n    sbu_id,\r\n    Description,\r\n    CASE \r\n        WHEN `% Actuals` IS NULL OR TRIM(`% Actuals`) IN ('') THEN 0\r\n        ELSE IFNULL(CAST(REPLACE(`% Actuals`,'%','') AS DECIMAL),0.00)/100 \r\n    END AS `% Actuals`,\r\n    DENSE_RANK () OVER (PARTITION BY project_id ORDER BY DATE(upload_time) DESC) AS Dense_Ranker\r\nFROM F_PLN_MILESTONE_MANUAL),\r\nManual_Actuals AS (\r\n    SELECT \r\n         Upload_Date,\r\n        project_id,\r\n        Description,\r\n        `% Actuals`,\r\n        'Actuals' AS Legend,\r\n        OPMP.*\r\n    FROM CORRECTOR_Manual_Actuals C1\r\n    LEFT JOIN O_PLN_MILESTONE_MAP OPMP ON C1.Description = OPMP.`Activity`\r\n    WHERE Dense_Ranker = 1 ORDER BY 1,2,3,4),\r\nManual_Actual_Merge AS (\r\n    SELECT \r\n        UAF.Upload_Date,\r\n        UAF.project_id,\r\n        UAF.`Group`,\r\n        UAF.`Activity Description`,\r\n        UAF.Activity_New,\r\n        CASE \r\n            WHEN TRIM(UAF.Activity_New) IN ('BCC - Inspection & Approval','Power on','LV Inspection & Approval',\r\n                                        'Wooden Decking','ACP Works','Kids Play Area/ Outdoor Play Area',\r\n                                        'Swimming Pool','Changing Rooms / GYM','Lift - Balance passenger lifts',\r\n                                        'Lift - CTU','Pile Cap','Transformer payment','Pile')\r\n                    AND UAF.Legend = 'Actuals' THEN MD.`% Actuals` \r\n            ELSE UAF.Actual_Achived\r\n        END AS Actual_Achived,\r\n        UAF.`Actual Start Date`,\r\n        UAF.`Actual Finish Date`,\r\n        UAF.Total_days,\r\n        UAF.Days_elapsed,\r\n        UAF.Source_Templet,\r\n        UAF.Source_Table,\r\n        UAF.Sort_Group,\r\n        UAF.Sort_Activity,\r\n        UAF.Legend,\r\n        UAF.`Actual %`\r\n    FROM Union_All_Final UAF \r\n    LEFT JOIN Manual_Actuals MD \r\n    ON UAF.Activity_New = MD.Activity_New\r\n    AND UAF.project_id  = MD.project_id\r\n    AND UAF.Legend  = MD.Legend\r\n    ),\r\nFinal_OutPut AS (\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        `Group`,\r\n        `Activity Description`,\r\n        Activity_New,\r\n        Actual_Achived AS Original_Actuals,\r\n        CASE \r\n            WHEN IFNULL(Actual_Achived,0) >1 THEN 1\r\n            ELSE IFNULL(Actual_Achived,0)\r\n        END AS     Actual_Achived,\r\n        `Actual Start Date`,\r\n        `Actual Finish Date`,\r\n        Total_days,\r\n        Days_elapsed,\r\n        Source_Templet,\r\n        Source_Table,\r\n        Sort_Group,\r\n        Sort_Activity,\r\n        Legend,\r\n        `Actual %`\r\n    FROM Manual_Actual_Merge),\r\nAUG_GAANT_TEST AS (\r\n    SELECT \r\n    --     project_id,\r\n    --     `Group`,\r\n    --     `Activity Description`,\r\n    --     Activity_New,Source_Templet,Source_Table,Legend,\r\n        *,\r\n        CONCAT(Legend,' : ',CAST(Actual_Achived*100 AS DECIMAL),'%') AS PLN_ACT\r\n    FROM Final_OutPut WHERE Activity_New IS NOT NULL ORDER BY Activity_New),\r\nAA AS (\r\nSELECT \r\n    Sort_Group,\r\n    Sort_Activity+0.1 AS Sort_Activity,\r\n    `Group`,\r\n    Activity,\r\n    Activity_New,\r\n    'Actuals' AS Legend,\r\n    CONCAT(Activity_New,' : (A)') AS NEW_ACT  FROM O_PLN_MILESTONE_MAP opmm \r\nUNION ALL \r\nSELECT \r\n    Sort_Group,\r\n    Sort_Activity,\r\n    `Group`,\r\n    Activity,\r\n    Activity_New,\r\n    'Plan' AS Legend,\r\n    CONCAT(Activity_New,' : (P)') AS NEW_ACT  FROM O_PLN_MILESTONE_MAP opmm),\r\nSEPT_GAANT_TEST AS (\r\nSELECT \r\n    AGT.Upload_Date,\r\n    AGT.project_id,\r\n    AGT.`Group`,\r\n    AGT.Sort_Group as Sort_Grp,\r\n--     AGT.`Activity Description`,\r\n    AGT.Activity_New,\r\n    AA.NEW_ACT AS `Activity Description`,\r\n    AA.Sort_Activity,\r\n    AGT.Original_Actuals,\r\n    AGT.Actual_Achived,\r\n    AGT.`Actual Start Date`,\r\n    AGT.`Actual Finish Date`,\r\n--     AGT.Total_days,\r\n--     AGT.Days_elapsed,\r\n--     AGT.Source_Templet,\r\n--     AGT.Source_Table,\r\n    AGT.Legend,\r\n    AGT.`Actual %`,\r\n    AGT.PLN_ACT\r\nFROM AUG_GAANT_TEST AGT\r\nLEFT JOIN AA     ON AGT.Legend = AA.Legend\r\n                AND AGT.Activity_New = AA.Activity_New\r\n                AND AGT.`Activity Description` = AA.Activity\r\n                AND AGT.`Group` = AA.`Group`\r\n--  WHERE AGT.project_id = 'Sobha Waves Grande'\r\nORDER BY 2,AGT.Sort_Group,AA.Sort_Activity),\r\nManual_Addition_To_Code AS (\r\n    SELECT \r\n        Upload_Date,\r\n        project_id,\r\n        `Group`,\r\n        Sort_Grp,\r\n        Activity_New,\r\n        `Activity Description`,\r\n        Sort_Activity,\r\n        `Actual Start Date`,\r\n        `Actual Finish Date`,\r\n        Original_Actuals,\r\n        Actual_Achived,\r\n        CASE \r\n            WHEN `Actual %` IS NULL OR TRIM(`Actual %`) IN ('') THEN 0\r\n            ELSE CAST(REPLACE(`Actual %`,'%','') AS DECIMAL)/100\r\n        END AS Manual_Values,    \r\n        Legend,\r\n        PLN_ACT\r\n    FROM SEPT_GAANT_TEST agt),\r\nFinal_Final AS (\r\nSELECT \r\n    Upload_Date,\r\n    project_id,\r\n    `Group`,\r\n    Sort_Grp,\r\n    Activity_New,\r\n    `Activity Description`,\r\n    Sort_Activity,\r\n    `Actual Start Date`,\r\n    `Actual Finish Date`,\r\n    Original_Actuals,\r\n--     Actual_Achived,\r\n    CASE \r\n        WHEN Actual_Achived <= Manual_Values AND Legend = 'Actuals' THEN Manual_Values\r\n        ELSE Actual_Achived\r\n    END AS Actual_Achived,    \r\n--     Manual_Values,\r\n    Legend\r\nFROM Manual_Addition_To_Code) \r\nSELECT *,\r\n    CONCAT(Legend,' : ',CAST(Actual_Achived*100 AS DECIMAL),'%') AS PLN_ACT  FROM Final_Final;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T23:08:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_WeeklyTwice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Critical Issues",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_criticalissue_tracker;\r\nINSERT INTO f_pln_criticalissue_tracker\r\nWITH CRITICAL_CLEANING AS (\r\nSELECT\r\n            DATE(OPCIT.upload_time) AS `Upload Time`,\r\n            OPCIT.`Reference Number`,\r\n            OPCIT.`PR / PO / Other Ref No`,\r\n            OPCIT.`Raised On`,\r\n            CASE\r\n                WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 1%' THEN 'SBU 1'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 2%' THEN 'SBU 2'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 3%' THEN 'SBU 3'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 4%' THEN 'SBU 4'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 5%' THEN 'SBU 5'\r\n        ELSE 'UNKNOWN'\r\n    END AS SBU_SCLICER,\r\n            CASE\r\n                WHEN OPCIT.`Pending With` IS NULL\r\n        OR TRIM(OPCIT.`Pending With`) = '' THEN 'Not Available'\r\n        ELSE OPCIT.`Pending With`\r\n    END AS `Pending With`,\r\n            OPCIT.`Issue Description`,\r\n            OPCIT.`Current Status`,\r\n            OPCIT.`Impact On`,\r\n            OPCIT.`Target Closure Date`,\r\n            OPCIT.`Status`,\r\n            OPCIT.`Actual Closure Date`,\r\n            OPCIT.`Project`,\r\n            PROJECTS.Project_Identifier\r\nFROM\r\n        O_PLN_CRITICAL_ISSUE_TRACKER OPCIT\r\n    LEFT JOIN PROJECTS ON\r\n        OPCIT.Project = PROJECTS.Project_Short\r\nWHERE\r\n        TRIM(OPCIT.`Issue Description`) NOT IN ('')),\r\nAPPLYING_RANK AS (\r\nSELECT\r\n        *,\r\n        DENSE_RANK() OVER (PARTITION BY CRITICAL_CLEANING.SBU_SCLICER\r\nORDER BY\r\n        CRITICAL_CLEANING.`Upload Time` DESC) AS DENSER_RANK\r\nFROM\r\n        CRITICAL_CLEANING\r\nORDER BY\r\n        2\r\n),\r\nSTAGGING AS (\r\nSELECT\r\n        OPCIT.`Upload Time`,\r\n        OPCIT.`Reference Number`,\r\n        OPCIT.`PR / PO / Other Ref No`,\r\n        CASE \r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'may','05')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'dec','12') \r\n            ELSE OPCIT.`Raised On`\r\n        END AS `Raised On`,\r\n        OPCIT.SBU_SCLICER,\r\n        CASE \r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 1' THEN 1\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 2' THEN 2\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 3' THEN 3\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 4' THEN 4\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 5' THEN 5\r\n            ELSE 6\r\n        END AS SBU_SORT,        \r\n        OPCIT.`Pending With`,\r\n        OPCIT.`Issue Description`,\r\n        OPCIT.`Current Status`,\r\n        OPCIT.`Impact On`,\r\n        CASE\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'may','05')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'dec','12')\r\n            ELSE OPCIT.`Target Closure Date`\r\n        END AS `Target Closure Date`,\r\n        OPCIT.Status,\r\n        CASE \r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'may','05')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'dec','12')\r\n            ELSE OPCIT.`Actual Closure Date`    \r\n        END AS `Actual Closure Date`,\r\n        OPCIT.Project,\r\n        OPCIT.Project_Identifier\r\nFROM\r\n        APPLYING_RANK OPCIT \r\nWHERE\r\n        DENSER_RANK = 1),\r\nSTAGGING2 AS ( \r\n    SELECT     \r\n        ST.`Upload Time`,\r\n        ST.`Reference Number`,\r\n        ST.`PR / PO / Other Ref No`, \r\n        ST.SBU_SCLICER,\r\n        ST.SBU_SORT,\r\n        ST.`Pending With`,\r\n        ST.`Issue Description`,\r\n        ST.`Current Status`,\r\n        ST.`Impact On`,\r\n        ST.Status,\r\n        ST.Project,\r\n        ST.Project_Identifier,\r\n        CASE \r\n            WHEN ST.`Raised On` IS NOT NULL AND TRIM(ST.`Raised On`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Raised On`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Raised On`,\r\n        CASE \r\n            WHEN ST.`Actual Closure Date` IS NOT NULL AND TRIM(ST.`Actual Closure Date`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Actual Closure Date`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Actual Closure Date`,\r\n        CASE \r\n            WHEN ST.`Target Closure Date` IS NOT NULL AND TRIM(ST.`Target Closure Date`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Target Closure Date`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Target Closure Date`\r\n    FROM STAGGING ST),\r\nFINAL_OUTPUT AS (\r\n    SELECT \r\n        ST2.*,\r\n        CASE \r\n            WHEN TRIM(LOWER(ST2.Status)) = 'open' THEN DATEDIFF(CURRENT_DATE(),DATE(ST2.`Raised On`))\r\n            WHEN TRIM(LOWER(ST2.Status)) = 'closed' AND ST2.`Actual Closure Date` IS NOT NULL THEN  DATEDIFF(ST2.`Actual Closure Date`,ST2.`Raised On`)\r\n        ELSE NULL \r\n    END AS Ageing        \r\n    FROM STAGGING2 ST2)\r\n    SELECT \r\n        FO.*,\r\n        CASE \r\n            WHEN FO.Ageing <=7  THEN  '(0-7)'\r\n            WHEN FO.Ageing <= 14 THEN '(8-14)'\r\n            WHEN FO.Ageing <= 21 THEN '(15-21)'\r\n            WHEN FO.Ageing <= 30 THEN '(22-30)'\r\n            WHEN FO.Ageing IS NULL THEN NULL\r\n            ELSE '>30'\r\n        END AS Agetub,\r\n        CASE \r\n            WHEN FO.Ageing <=7  THEN 1\r\n            WHEN FO.Ageing <=14 THEN 2\r\n            WHEN FO.Ageing <=21 THEN 3\r\n            WHEN FO.Ageing <=30 THEN 4\r\n            WHEN FO.Ageing IS NULL THEN NULL\r\n            ELSE 5\r\n        END AS Agetub_sort        \r\n    FROM FINAL_OUTPUT FO ;\r\n    \r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T21:49:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pln_Weekly_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Critical Issues",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_criticalissue_tracker;\r\nINSERT INTO f_pln_criticalissue_tracker\r\nWITH CRITICAL_CLEANING AS (\r\nSELECT\r\n            DATE(OPCIT.upload_time) AS `Upload Time`,\r\n            OPCIT.`Reference Number`,\r\n            OPCIT.`PR / PO / Other Ref No`,\r\n            OPCIT.`Raised On`,\r\n            CASE\r\n                WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 1%' THEN 'SBU 1'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 2%' THEN 'SBU 2'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 3%' THEN 'SBU 3'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 4%' THEN 'SBU 4'\r\n        WHEN OPCIT.`SBU (Issue Raised by)` LIKE '%SBU 5%' THEN 'SBU 5'\r\n        ELSE 'UNKNOWN'\r\n    END AS SBU_SCLICER,\r\n            CASE\r\n                WHEN OPCIT.`Pending With` IS NULL\r\n        OR TRIM(OPCIT.`Pending With`) = '' THEN 'Not Available'\r\n        ELSE OPCIT.`Pending With`\r\n    END AS `Pending With`,\r\n            OPCIT.`Issue Description`,\r\n            OPCIT.`Current Status`,\r\n            OPCIT.`Impact On`,\r\n            OPCIT.`Target Closure Date`,\r\n            OPCIT.`Status`,\r\n            OPCIT.`Actual Closure Date`,\r\n            OPCIT.`Project`,\r\n            PROJECTS.Project_Identifier\r\nFROM\r\n        O_PLN_CRITICAL_ISSUE_TRACKER OPCIT\r\n    LEFT JOIN PROJECTS ON\r\n        OPCIT.Project = PROJECTS.Project_Short\r\nWHERE\r\n        TRIM(OPCIT.`Issue Description`) NOT IN ('')),\r\nAPPLYING_RANK AS (\r\nSELECT\r\n        *,\r\n        DENSE_RANK() OVER (PARTITION BY CRITICAL_CLEANING.SBU_SCLICER\r\nORDER BY\r\n        CRITICAL_CLEANING.`Upload Time` DESC) AS DENSER_RANK\r\nFROM\r\n        CRITICAL_CLEANING\r\nORDER BY\r\n        2\r\n),\r\nSTAGGING AS (\r\nSELECT\r\n        OPCIT.`Upload Time`,\r\n        OPCIT.`Reference Number`,\r\n        OPCIT.`PR / PO / Other Ref No`,\r\n        CASE \r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'may','05')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Raised On`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Raised On`),'dec','12') \r\n            ELSE OPCIT.`Raised On`\r\n        END AS `Raised On`,\r\n        OPCIT.SBU_SCLICER,\r\n        CASE \r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 1' THEN 1\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 2' THEN 2\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 3' THEN 3\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 4' THEN 4\r\n            WHEN OPCIT.SBU_SCLICER = 'SBU 5' THEN 5\r\n            ELSE 6\r\n        END AS SBU_SORT,        \r\n        OPCIT.`Pending With`,\r\n        OPCIT.`Issue Description`,\r\n        OPCIT.`Current Status`,\r\n        OPCIT.`Impact On`,\r\n        CASE\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'may','05')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Target Closure Date`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Target Closure Date`),'dec','12')\r\n            ELSE OPCIT.`Target Closure Date`\r\n        END AS `Target Closure Date`,\r\n        OPCIT.Status,\r\n        CASE \r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jan%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jan','01')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%feb%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'feb','02')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%mar%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'mar','03')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%apr%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'apr','04')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%may%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'may','05')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jun%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jun','06')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%jul%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'jul','07')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%aug%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'aug','08')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%sep%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'sep','09')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%oct%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'oct','10')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%nov%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'nov','11')\r\n            WHEN LOWER(OPCIT.`Actual Closure Date`) LIKE '%dec%' THEN REPLACE(LOWER(OPCIT.`Actual Closure Date`),'dec','12')\r\n            ELSE OPCIT.`Actual Closure Date`    \r\n        END AS `Actual Closure Date`,\r\n        OPCIT.Project,\r\n        OPCIT.Project_Identifier\r\nFROM\r\n        APPLYING_RANK OPCIT \r\nWHERE\r\n        DENSER_RANK = 1),\r\nSTAGGING2 AS ( \r\n    SELECT     \r\n        ST.`Upload Time`,\r\n        ST.`Reference Number`,\r\n        ST.`PR / PO / Other Ref No`, \r\n        ST.SBU_SCLICER,\r\n        ST.SBU_SORT,\r\n        ST.`Pending With`,\r\n        ST.`Issue Description`,\r\n        ST.`Current Status`,\r\n        ST.`Impact On`,\r\n        ST.Status,\r\n        ST.Project,\r\n        ST.Project_Identifier,\r\n        CASE \r\n            WHEN ST.`Raised On` IS NOT NULL AND TRIM(ST.`Raised On`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Raised On`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Raised On`,\r\n        CASE \r\n            WHEN ST.`Actual Closure Date` IS NOT NULL AND TRIM(ST.`Actual Closure Date`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Actual Closure Date`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Actual Closure Date`,\r\n        CASE \r\n            WHEN ST.`Target Closure Date` IS NOT NULL AND TRIM(ST.`Target Closure Date`) NOT IN ('','-')  THEN STR_TO_DATE(ST.`Target Closure Date`,'%d-%c-%y') \r\n            ELSE NULL \r\n        END AS `Target Closure Date`\r\n    FROM STAGGING ST),\r\nFINAL_OUTPUT AS (\r\n    SELECT \r\n        ST2.*,\r\n        CASE \r\n            WHEN TRIM(LOWER(ST2.Status)) = 'open' THEN DATEDIFF(CURRENT_DATE(),DATE(ST2.`Raised On`))\r\n            WHEN TRIM(LOWER(ST2.Status)) = 'closed' AND ST2.`Actual Closure Date` IS NOT NULL THEN  DATEDIFF(ST2.`Actual Closure Date`,ST2.`Raised On`)\r\n        ELSE NULL \r\n    END AS Ageing        \r\n    FROM STAGGING2 ST2)\r\n    SELECT \r\n        FO.*,\r\n        CASE \r\n            WHEN FO.Ageing <=7  THEN  '(0-7)'\r\n            WHEN FO.Ageing <= 14 THEN '(8-14)'\r\n            WHEN FO.Ageing <= 21 THEN '(15-21)'\r\n            WHEN FO.Ageing <= 30 THEN '(22-30)'\r\n            WHEN FO.Ageing IS NULL THEN NULL\r\n            ELSE '>30'\r\n        END AS Agetub,\r\n        CASE \r\n            WHEN FO.Ageing <=7  THEN 1\r\n            WHEN FO.Ageing <=14 THEN 2\r\n            WHEN FO.Ageing <=21 THEN 3\r\n            WHEN FO.Ageing <=30 THEN 4\r\n            WHEN FO.Ageing IS NULL THEN NULL\r\n            ELSE 5\r\n        END AS Agetub_sort        \r\n    FROM FINAL_OUTPUT FO ;\r\n    \r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Staircase Template",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Critical Issues",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_staircase;\r\nINSERT INTO f_pln_staircase\r\nWITH CLEANING_DATA AS (\r\n    SELECT\r\n        DATE(OPSR.upload_time) AS Upload_Date, \r\n        OPSR.project_id,\r\n        OPSR.tower,\r\n        OPSR.`Level`,\r\n        OPSR.`Stair Case No`,\r\n        'Staircase Area' AS sclicer,\r\n        Column_Name.*,\r\n        OPSM.ACTIVITY_ID,\r\n        OPSM.SBU_ID,\r\n        OPSM.Category,\r\n        DENSE_RANK () OVER (PARTITION BY  OPSR.project_id ORDER BY  DATE(OPSR.upload_time) DESC) Project_Udate_DRANK\r\n    from O_PLN_STAIRCASE_RAW OPSR\r\n    CROSS JOIN LATERAL (\r\n                SELECT `MEP Conduit Marking` , 'MEP Conduit Marking'\r\n            UNION ALL SELECT `Cutting and Chasing` , 'Cutting and Chasing'\r\n            UNION ALL SELECT `MEP Conduit Fixtures` , 'MEP Conduit Fixtures'\r\n            UNION ALL SELECT `Wall Packing` , 'Wall Packing'\r\n            UNION ALL SELECT Plaster , 'Plaster'\r\n            UNION ALL SELECT Grinding , 'Grinding'\r\n            UNION ALL SELECT POP , 'POP'\r\n            UNION ALL SELECT `Medium Coat Ceiling Spray Plaster` , 'Medium Coat Ceiling Spray Plaster'\r\n            UNION ALL SELECT `Two Coat Fine Ceiling Spray Plaster` , 'Two Coat Fine Ceiling Spray Plaster'\r\n            UNION ALL SELECT `Ceiling Primer` , 'Ceiling Primer'\r\n            UNION ALL SELECT `Ceiling Texture` , 'Ceiling Texture'\r\n            UNION ALL SELECT `Wall Primer` , 'Wall Primer'\r\n            UNION ALL SELECT `Wall Stucco banding` , 'Wall Stucco banding'\r\n            UNION ALL SELECT `Wall Stucco (1st and 2nd Coat)` , 'Wall Stucco (1st and 2nd Coat)'\r\n            UNION ALL SELECT `MEP Pressurization Equipment` , 'MEP Pressurization Equipment'\r\n            UNION ALL SELECT Sanding , 'Sanding'\r\n            UNION ALL SELECT `Wall First Coat Paint` , 'Wall First Coat Paint'\r\n            UNION ALL SELECT `Ceiling First Coat Paint` , 'Ceiling First Coat Paint'\r\n            UNION ALL SELECT `Handrail Floor Mounted` , 'Handrail Floor Mounted'\r\n            UNION ALL SELECT `Handrail Wall Mounted` , 'Handrail Wall Mounted'\r\n            UNION ALL SELECT `Epoxy Grinding` , 'Epoxy Grinding'\r\n            UNION ALL SELECT `Epoxy Bug Fill` , 'Epoxy Bug Fill'\r\n            UNION ALL SELECT `Epoxy Primer` , 'Epoxy Primer'\r\n            UNION ALL SELECT `Epoxy Base Coat` , 'Epoxy Base Coat'\r\n            UNION ALL SELECT `Epoxy Final Coat` , 'Epoxy Final Coat'\r\n            UNION ALL SELECT `Threshold Installation` , 'Threshold Installation'\r\n            UNION ALL SELECT `Door - Frame Installation` , 'Door - Frame Installation'\r\n            UNION ALL SELECT `Door - Architrave Installation` , 'Door - Architrave Installation'\r\n            UNION ALL SELECT `Door - Shutter Installation` , 'Door - Shutter Installation'\r\n            UNION ALL SELECT `Door - Ironmongery Installation` , 'Door - Ironmongery Installation'\r\n            UNION ALL SELECT `Door - Silicone Works` , 'Door - Silicone Works'\r\n            UNION ALL SELECT Signage , 'Signage'\r\n            UNION ALL SELECT `Nosing Installation` , 'Nosing Installation'\r\n            UNION ALL SELECT `Handrail Painting` , 'Handrail Painting'\r\n            UNION ALL SELECT `Preparation for Final Coat Paint` , 'Preparation for Final Coat Paint'\r\n            UNION ALL SELECT `MEP Final Fixtures Installation` , 'MEP Final Fixtures Installation'\r\n            UNION ALL SELECT `Final Coat Paint` , 'Final Coat Paint'\r\n            UNION ALL SELECT `Staircase Pressurization` , 'Staircase Pressurization'\r\n        )\r\n        as Column_Name(value,Type_of_work)\r\n    JOIN O_PLN_STAIRCASE_MAP OPSM\r\n    ON Column_Name.Type_of_work = OPSM.ACTIVITY_SEQUENCE\r\n    WHERE Column_Name.value IS NOT NULL AND (TRIM(OPSR.`Level`) NOT IN ('') AND OPSR.`Level` IS NOT NULL)\r\n        ),\r\nSTAGGING AS (\r\n    SELECT \r\n        CD.Upload_Date,\r\n        CD.project_id,\r\n        CD.tower,\r\n        CD.`Level`,\r\n        CD.`Stair Case No`,\r\n        CD.sclicer,\r\n        CASE \r\n            WHEN TRIM(CD.value) IN ('','NA') THEN '0%'\r\n            ELSE CD.value\r\n        END AS value,\r\n        CD.Type_of_work,\r\n        CD.ACTIVITY_ID,\r\n        CD.SBU_ID,\r\n        CD.Category,\r\n        OLMA.level_map\r\n    FROM CLEANING_DATA CD \r\n        LEFT JOIN O_LEVEL_MAP_ALL OLMA\r\n            ON CD.`Level` = OLMA.`level`\r\n    WHERE CD.Project_Udate_DRANK = 1\r\n)\r\nSELECT \r\n    CD.Upload_Date,\r\n    CD.project_id,\r\n    CD.tower,\r\n    CD.`Level`,\r\n    CD.`Stair Case No`,\r\n    CD.sclicer,\r\n    CAST(REPLACE(CD.value,'%','') AS DECIMAL(4,0))/100 AS value,\r\n    CD.Type_of_work,\r\n    CD.ACTIVITY_ID,\r\n    CD.SBU_ID,\r\n    CD.Category,\r\n    CD.level_map,\r\n    CASE \r\n        WHEN TRIM(CD.CATEGORY) IN('MEP') THEN  8\r\n        WHEN TRIM(CD.CATEGORY) IN('Builders Work') THEN  2\r\n        WHEN TRIM(CD.CATEGORY) IN('Plaster') THEN  3\r\n        WHEN TRIM(CD.CATEGORY) IN('Paint') THEN  9\r\n        WHEN TRIM(CD.CATEGORY) IN('Handrail') THEN  4\r\n        WHEN TRIM(CD.CATEGORY) IN('Marble') THEN  5\r\n        WHEN TRIM(CD.CATEGORY) IN('Joinery') THEN  6\r\n        WHEN TRIM(CD.CATEGORY) IN('Signage') THEN  7\r\n        WHEN TRIM(CD.CATEGORY) IN('PMT') THEN  1\r\n        ELSE 10\r\n    END AS CATEGORY_SORT\r\nFROM STAGGING CD;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Engineering Drawing",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_engineeringdrawing;\r\nINSERT INTO f_pln_engineeringdrawing\r\nWITH AA AS (\r\n    SELECT \r\n        DATE(upload_time) AS Upload_Date,\r\n        project_id,\r\n        `Type`,\r\n        `Villa Type`,\r\n        Category,\r\n        `Drawing Number`,\r\n        `Drawing Title`,\r\n        NULLIF(`Scheduled Date`,'') AS `Scheduled Date`,\r\n        `PNCA commitment`,\r\n        DENSE_RANK () OVER (PARTITION BY  project_id ORDER BY  DATE(upload_time) DESC) Project_Udate_DRANK,\r\n        NULLIF(R0,'') AS R0,\r\n        NULLIF(`R0-Trans_Id`,'') AS `R0-Trans_Id`,\r\n        NULLIF(R1,'') AS R1,\r\n        NULLIF(`R1-Trans_Id`,'') AS `R1-Trans_Id`,\r\n        NULLIF(R2,'') AS R2,\r\n        NULLIF(`R2-Trans_Id`,'') AS `R2-Trans_Id`,\r\n        NULLIF(R3,'') AS R3,\r\n        NULLIF(`R3-Trans_Id`,'') AS `R3-Trans_Id`,\r\n        NULLIF(R4,'') AS R4,\r\n        NULLIF(`R4-Trans_Id`,'') AS `R4-Trans_Id`,\r\n        NULLIF(R5,'') AS R5,\r\n        NULLIF(`R5-Trans_Id`,'') AS `R5-Trans_Id`,\r\n        NULLIF(R6,'') AS R6,\r\n        NULLIF(`R6-Trans_Id`,'') AS `R6-Trans_Id`,\r\n        NULLIF(R7,'') AS R7,\r\n        NULLIF(`R7-Trans_Id`,'') AS `R7-Trans_Id`,\r\n        NULLIF(R8,'') AS R8,\r\n        NULLIF(`R8-Trans_Id`,'') AS `R8-Trans_Id`,\r\n        NULLIF(R9,'') AS R9,\r\n        NULLIF(`R9-Trans_Id`,'') AS `R9-Trans_Id`,\r\n        NULLIF(R10,'') AS R10,\r\n        NULLIF(`R10-Trans_Id`,'') AS `R10-Trans_Id`,\r\n        NULLIF(R11,'') AS R11,\r\n        NULLIF(`R11-Trans_Id`,'') AS `R11-Trans_Id`,\r\n        NULLIF(R12,'') AS R12,\r\n        NULLIF(`R12-Trans_Id`,'') AS `R12-Trans_Id`,\r\n        NULLIF(R11,'') AS R13,\r\n        NULLIF(`R11-Trans_Id`,'') AS `R13-Trans_Id`,\r\n        NULLIF(R12,'') AS R14,\r\n        NULLIF(`R12-Trans_Id`,'') AS `R14-Trans_Id`,\r\n        NULLIF(R13,'') AS R15,\r\n        NULLIF(`R13-Trans_Id`,'') AS `R15-Trans_Id`,\r\n        NULLIF(R14,'') AS R16,\r\n        NULLIF(`R14-Trans_Id`,'') AS `R16-Trans_Id`,\r\n        NULLIF(R15,'') AS R17,\r\n        NULLIF(`R15-Trans_Id`,'') AS `R17-Trans_Id`,\r\n        NULLIF(R16,'') AS R18,\r\n        NULLIF(`R16-Trans_Id`,'') AS `R18-Trans_Id`,\r\n        NULLIF(R17,'') AS R19,\r\n        NULLIF(`R17-Trans_Id`,'') AS `R19-Trans_Id`,\r\n        NULLIF(R18,'') AS R20,\r\n        NULLIF(`R18-Trans_Id`,'') AS `R20-Trans_Id`,\r\n        NULLIF(R19,'') AS R21,\r\n        NULLIF(`R19-Trans_Id`,'') AS `R21-Trans_Id`,\r\n        NULLIF(R20,'') AS R22,\r\n        NULLIF(`R20-Trans_Id`,'') AS `R22-Trans_Id`,\r\n        NULLIF(R21,'') AS R23,\r\n        NULLIF(`R21-Trans_Id`,'') AS `R23-Trans_Id`,\r\n        NULLIF(R22,'') AS R24,\r\n        NULLIF(`R22-Trans_Id`,'') AS `R24-Trans_Id`,\r\n        NULLIF(R23,'') AS R25,\r\n        NULLIF(`R23-Trans_Id`,'') AS `R25-Trans_Id`\r\n    FROM O_PLN_DRAWING_DETAIL_DRAW\r\n    WHERE (`Type` IS NOT NULL AND TRIM(`Type`) NOT IN (''))),\r\nAB AS (\r\nSELECT * FROM AA\r\nWHERE Project_Udate_DRANK = 1) SELECT * FROM  AB;\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Drawing 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Engineering Drawing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_drawing2;\r\nINSERT INTO f_pln_drawing2\r\nWITH Main_Filters AS (\r\n    SELECT * FROM O_PLN_DRAWING_DETAIL_DRAW\r\n        WHERE ((`Type` IS NOT NULL AND TRIM(`Type`) NOT IN (''))\r\n            OR (Category IS NOT NULL AND TRIM(Category) NOT IN (''))\r\n            OR (`Drawing Number` IS NOT NULL AND TRIM(`Drawing Number`) NOT IN (''))\r\n            OR (`Drawing Title` IS NOT NULL AND TRIM(`Drawing Title`) NOT IN ('')))),\r\nPRILIMINARY_DATE_CORRECTOR AS (\r\n    SELECT\r\n        *,\r\n        CASE\r\n            WHEN MF.`Scheduled Date` IS NULL AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN MF.`Scheduled Date` IS NULL AND (MF.R0 IS NULL OR MF.R0 IN (''))    THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) IN ('') AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) IN ('') AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '00/%' AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '00/%' AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '%-00' AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '%-00' AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            ELSE MF.`Scheduled Date`\r\n        END AS 'Remastered'\r\n    FROM Main_Filters MF),\r\nUNPIVOTING_DATA AS (\r\n    SELECT\r\n        DATE(PDC.upload_time) AS Upload_Date,\r\n        PDC.project_id,\r\n        PDC.sbu_id,\r\n        PDC.`Type`,\r\n        PDC.`Villa Type`,\r\n        PDC.Category,\r\n        PDC.`Drawing Number`,\r\n        PDC.`Drawing Title`,\r\n        CASE\r\n            WHEN PDC.Remastered IS NULL OR TRIM(PDC.Remastered) = '' THEN NULL\r\n            ELSE STR_TO_DATE(PDC.Remastered,'%d-%b-%y')\r\n        END AS `Scheduled Date`,\r\n        PDC.`PNCA commitment`,\r\n        ColumnName.*,\r\n        DENSE_RANK () OVER     (PARTITION BY  project_id\r\n                    ORDER BY  DATE(upload_time) DESC\r\n                    )     Project_Update_DRANK\r\n    FROM PRILIMINARY_DATE_CORRECTOR PDC\r\n    CROSS JOIN LATERAL (\r\n            SELECT 'R0' , R0, `R0-Trans_Id`\r\n                UNION ALL SELECT  'R9' , R9, `R9-Trans_Id`\r\n                UNION ALL SELECT  'R8' , R8, `R8-Trans_Id`\r\n                UNION ALL SELECT  'R7' , R7, `R7-Trans_Id`\r\n                UNION ALL SELECT  'R6' , R6, `R6-Trans_Id`\r\n                UNION ALL SELECT  'R5' , R5, `R5-Trans_Id`\r\n                UNION ALL SELECT  'R4' , R4, `R4-Trans_Id`\r\n                UNION ALL SELECT  'R3' , R3, `R3-Trans_Id`\r\n                UNION ALL SELECT  'R25' , R25, `R25-Trans_Id`\r\n                UNION ALL SELECT  'R24' , R24, `R24-Trans_Id`\r\n                UNION ALL SELECT  'R23' , R23, `R23-Trans_Id`\r\n                UNION ALL SELECT  'R22' , R22, `R22-Trans_Id`\r\n                UNION ALL SELECT  'R21' , R21, `R21-Trans_Id`\r\n                UNION ALL SELECT  'R20' , R20, `R20-Trans_Id`\r\n                UNION ALL SELECT  'R2' , R2, `R2-Trans_Id`\r\n                UNION ALL SELECT  'R19' , R19, `R19-Trans_Id`\r\n                UNION ALL SELECT  'R18' , R18, `R18-Trans_Id`\r\n                UNION ALL SELECT  'R17' , R17, `R17-Trans_Id`\r\n                UNION ALL SELECT  'R16' , R16, `R16-Trans_Id`\r\n                UNION ALL SELECT  'R15' , R15, `R15-Trans_Id`\r\n                UNION ALL SELECT  'R14' , R14, `R14-Trans_Id`\r\n                UNION ALL SELECT  'R13' , R13, `R13-Trans_Id`\r\n                UNION ALL SELECT  'R12' , R12, `R12-Trans_Id`\r\n                UNION ALL SELECT  'R11' , R11, `R11-Trans_Id`\r\n                UNION ALL SELECT  'R10' , R10, `R10-Trans_Id`\r\n                UNION ALL SELECT  'R1' , R1, `R1-Trans_Id`\r\n    ) AS ColumnName(Revesion,Revesion_Date,`Revesion ID`)\r\n    WHERE (Revesion_Date IS NOT NULL AND TRIM(Revesion_Date) NOT IN (''))\r\n            OR Revesion = 'R0'\r\n    ORDER BY `Scheduled Date`),\r\nCleaned_Data AS (\r\n    SELECT\r\n        UPD.Project_Update_DRANK,\r\n        UPD.Upload_Date,\r\n        UPD.project_id,\r\n        UPD.sbu_id,\r\n        UPD.`Type`,\r\n        UPD.`Villa Type`,\r\n        UPD.Category,\r\n        UPD.`Drawing Number`,\r\n        UPD.`Drawing Title`,\r\n        UPD.`Scheduled Date`,\r\n        UPD.`PNCA commitment`,\r\n        UPD.Revesion,\r\n        CASE\r\n            WHEN TRIM(UPD.Revesion_Date) LIKE '%-00' THEN NULL\r\n            WHEN TRIM(UPD.Revesion_Date) LIKE '00/%' THEN NULL\r\n            WHEN TRIM(UPD.Revesion_Date) IN ('') THEN NULL\r\n            ELSE TRIM(UPD.Revesion_Date)\r\n        END AS Revesion_Date,\r\n        CASE\r\n            WHEN TRIM(UPD.`Revesion ID`) LIKE '%-00' THEN NULL\r\n            WHEN TRIM(UPD.`Revesion ID`) LIKE '00/%' THEN NULL\r\n            WHEN TRIM(UPD.`Revesion ID`) IN ('') THEN NULL\r\n            ELSE TRIM(UPD.`Revesion ID`)\r\n        END AS `Revesion ID`\r\n    FROM\r\n        UNPIVOTING_DATA UPD),\r\nCleaned_Data_Final AS (\r\n    SELECT\r\n        CD.Project_Update_DRANK,\r\n        CD.Upload_Date,\r\n        CD.project_id,\r\n        CD.`Type`,\r\n        CD.Category,\r\n        CD.`Drawing Number`,\r\n        CD.Revesion,\r\n        CASE\r\n            WHEN TRIM(CD.Revesion) NOT IN ('R0','R1','R2','R3') THEN '>3 Revesions'\r\n            ELSE CD.Revesion\r\n        END AS `Revesion Corrected`,\r\n        STR_TO_DATE(CD.Revesion_Date,'%d-%b-%y') AS Revesion_Date\r\n    FROM Cleaned_Data CD\r\n    WHERE (CD.`Revesion_Date` IS NOT NULL\r\n            OR CD.`Revesion ID` IS NOT NULL)),\r\nRevesion_Data AS (\r\n    SELECT\r\n        Upload_Date,\r\n        project_id,\r\n        `Type`,\r\n        Category,\r\n        `Drawing Number`,\r\n        Revesion,\r\n        CASE\r\n            WHEN TRIM(Revesion) NOT IN ('R0','R1','R2','R3') THEN '>3 Revesions'\r\n            ELSE Revesion\r\n        END AS `Revesion Corrected`,\r\n        Revesion_Date,\r\n        COUNT(Revesion) AS Revision_Count,\r\n--         LAG(Revesion_Date) over(partition by `Drawing Number` order by Revesion,Revesion_Date) as Next_Date,\r\n        DATEDIFF(Revesion_Date,LAG(Revesion_Date) over(partition by `Drawing Number` order by Revesion,Revesion_Date)) as LAG_DIFFERENCE,\r\n        Project_Update_DRANK\r\n    FROM Cleaned_Data_Final\r\n    WHERE Project_Update_DRANK = 1\r\n    GROUP BY 1,2,3,4,5,6,7,8 ORDER BY 1,2,3,4,5,6)\r\n    SELECT * FROM Revesion_Data;\r\n\r\n    /**/\r\n\r\n    SELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Drawing",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Drawing 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "TRUNCATE TABLE f_pln_drawing;\r\nINSERT INTO f_pln_drawing\r\nWITH Main_Filters AS (\r\nSELECT * FROM O_PLN_DRAWING_DETAIL_DRAW\r\n    WHERE ((`Type` IS NOT NULL AND TRIM(`Type`) NOT IN (''))\r\n        OR (Category IS NOT NULL AND TRIM(Category) NOT IN (''))\r\n        OR (`Drawing Number` IS NOT NULL AND TRIM(`Drawing Number`) NOT IN (''))\r\n        OR (`Drawing Title` IS NOT NULL AND TRIM(`Drawing Title`) NOT IN ('')))),\r\n-- Date_Corrector_Main AS\r\nPRILIMINARY_DATE_CORRECTOR AS (\r\n    SELECT\r\n        *,\r\n        CASE\r\n            WHEN MF.`Scheduled Date` IS NULL AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN MF.`Scheduled Date` IS NULL AND (MF.R0 IS NULL OR MF.R0 IN (''))    THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) IN ('') AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) IN ('') AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '00/%' AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '00/%' AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '%-00' AND (MF.R0 IS NOT NULL AND MF.R0 NOT IN ('')) THEN MF.R0\r\n            WHEN TRIM(MF.`Scheduled Date`) LIKE '%-00' AND (MF.R0 IS NULL OR MF.R0  IN ('')) THEN MF.R1\r\n            ELSE MF.`Scheduled Date`\r\n        END AS 'Remastered'\r\n    FROM Main_Filters MF),\r\nUNPIVOTING_DATA AS (\r\n    SELECT\r\n        DATE(PDC.upload_time) AS Upload_Date,\r\n        PDC.project_id,\r\n        PDC.sbu_id,\r\n        PDC.`Type`,\r\n        PDC.`Villa Type`,\r\n        PDC.Category,\r\n        PDC.`Drawing Number`,\r\n        PDC.`Drawing Title`,\r\n        CASE\r\n            WHEN PDC.Remastered IS NULL OR TRIM(PDC.Remastered) = '' THEN NULL\r\n            ELSE STR_TO_DATE(PDC.Remastered,'%d-%b-%y')\r\n        END AS `Scheduled Date`,\r\n        PDC.`PNCA commitment`,\r\n        ColumnName.*,\r\n        DENSE_RANK () OVER(PARTITION BY  PDC.project_id\r\n        ORDER BY  DATE(PDC.upload_time) DESC\r\n        )D_RANK\r\n    FROM PRILIMINARY_DATE_CORRECTOR PDC\r\n    CROSS JOIN LATERAL (\r\n            SELECT 'R0' , R0, `R0-Trans_Id`\r\n                UNION ALL SELECT  'R9' , R9, `R9-Trans_Id`\r\n                UNION ALL SELECT  'R8' , R8, `R8-Trans_Id`\r\n                UNION ALL SELECT  'R7' , R7, `R7-Trans_Id`\r\n                UNION ALL SELECT  'R6' , R6, `R6-Trans_Id`\r\n                UNION ALL SELECT  'R5' , R5, `R5-Trans_Id`\r\n                UNION ALL SELECT  'R4' , R4, `R4-Trans_Id`\r\n                UNION ALL SELECT  'R3' , R3, `R3-Trans_Id`\r\n                UNION ALL SELECT  'R25' , R25, `R25-Trans_Id`\r\n                UNION ALL SELECT  'R24' , R24, `R24-Trans_Id`\r\n                UNION ALL SELECT  'R23' , R23, `R23-Trans_Id`\r\n                UNION ALL SELECT  'R22' , R22, `R22-Trans_Id`\r\n                UNION ALL SELECT  'R21' , R21, `R21-Trans_Id`\r\n                UNION ALL SELECT  'R20' , R20, `R20-Trans_Id`\r\n                UNION ALL SELECT  'R2' , R2, `R2-Trans_Id`\r\n                UNION ALL SELECT  'R19' , R19, `R19-Trans_Id`\r\n                UNION ALL SELECT  'R18' , R18, `R18-Trans_Id`\r\n                UNION ALL SELECT  'R17' , R17, `R17-Trans_Id`\r\n                UNION ALL SELECT  'R16' , R16, `R16-Trans_Id`\r\n                UNION ALL SELECT  'R15' , R15, `R15-Trans_Id`\r\n                UNION ALL SELECT  'R14' , R14, `R14-Trans_Id`\r\n                UNION ALL SELECT  'R13' , R13, `R13-Trans_Id`\r\n                UNION ALL SELECT  'R12' , R12, `R12-Trans_Id`\r\n                UNION ALL SELECT  'R11' , R11, `R11-Trans_Id`\r\n                UNION ALL SELECT  'R10' , R10, `R10-Trans_Id`\r\n                UNION ALL SELECT  'R1' , R1, `R1-Trans_Id`\r\n    ) AS ColumnName(Revesion,Revesion_Date,`Revesion ID`)\r\n    WHERE (Revesion_Date IS NOT NULL AND TRIM(Revesion_Date) NOT IN (''))\r\n            OR Revesion = 'R0'\r\n    ORDER BY `Scheduled Date`),\r\nTotal_Drawings AS (\r\n        SELECT\r\n            UPD.project_id,\r\n            UPD.`Type`,\r\n        UPD.Category,\r\n        EXTRACT(MONTH FROM UPD.`Scheduled Date`) AS Total_Drawings_Month,\r\n        EXTRACT(YEAR FROM UPD.`Scheduled Date`) AS Total_Drawings_year,\r\n        COUNT(UPD.`Drawing Number`) Total_Drawings\r\n    FROM UNPIVOTING_DATA UPD\r\n    WHERE UPD.Revesion='R0'\r\n    GROUP BY 1,2,3,4,5),\r\nPlan_Drawings AS (\r\n    SELECT\r\n        UPD.project_id,\r\n        UPD.`Type`,\r\n        UPD.Category,\r\n        EXTRACT(MONTH FROM UPD.`Scheduled Date`) AS Plan_Drawings_Month,\r\n        EXTRACT(YEAR FROM UPD.`Scheduled Date`) AS Plan_Drawings_year,\r\n        COUNT(UPD.`Drawing Number`) Plan_Drawings\r\n    FROM UNPIVOTING_DATA UPD\r\n    WHERE UPD.Revesion='R0'\r\n        AND UPD.`Scheduled Date` <= Upload_Date\r\n    GROUP BY 1,2,3,4,5),\r\nCLEANED_DATA_FOR_ACTUALS AS (\r\n    SELECT\r\n        UD.Upload_Date,\r\n        UD.project_id,\r\n        UD.`Type`,\r\n        UD.`Villa Type`,\r\n        UD.Category,\r\n        UD.`Drawing Number`,\r\n        UD.`Drawing Title`,\r\n        UD.`Scheduled Date`,\r\n        UD.`PNCA commitment`,\r\n        UD.Revesion,\r\n        CASE\r\n            WHEN UD.Revesion_Date LIKE '00/%' THEN NULL\r\n            WHEN UD.Revesion_Date LIKE '%-00' THEN NULL\r\n            WHEN UD.Revesion_Date IS NULL OR TRIM(UD.Revesion_Date) = '' THEN NULL\r\n            ELSE STR_TO_DATE(UD.Revesion_Date,'%d-%b-%y')\r\n        END AS Revesion_Date,        \r\n        UD.`Revesion ID`\r\n    FROM UNPIVOTING_DATA UD\r\n    ORDER BY Revesion_Date),\r\nActuals_Drawings AS (\r\n    SELECT\r\n        UPD.project_id,\r\n        UPD.`Type`,\r\n        UPD.Category,\r\n        EXTRACT(MONTH FROM UPD.Revesion_Date) AS Actuals_Drawings_Month,\r\n        EXTRACT(YEAR FROM UPD.Revesion_Date) AS Actuals_Drawings_year,\r\n        COUNT(UPD.`Drawing Number`) Actuals_Drawings\r\n    FROM CLEANED_DATA_FOR_ACTUALS UPD\r\n    WHERE UPD.Revesion='R0'\r\n        AND UPD.`Scheduled Date` <= Upload_Date\r\n        AND (UPD.Revesion_Date IS NOT NULL AND TRIM(UPD.Revesion_Date) NOT IN (''))\r\n    GROUP BY 1,2,3,4,5),\r\nDate_Dimention AS (\r\n    SELECT\r\n        REPLACE(DD.`year`,',','')  AS`year`,\r\n        DD.`month`,\r\n        DD.quarter\r\n    FROM Date_Dimention DD\r\n    WHERE     DD.`year` <= YEAR(CURRENT_DATE())\r\n        AND DD.`year` >= YEAR(CURRENT_DATE())-1\r\n        GROUP BY 1,2,3\r\n    ),\r\n   COMOUND_KEY_STAGGING AS (\r\n        SELECT\r\n            project_id,\r\n            `Type`,\r\n           Category,\r\n           Upload_Date\r\n    FROM UNPIVOTING_DATA\r\n    where D_RANK = 1 GROUP BY 1,2,3,4),\r\nCOMPOUND_KEY AS (\r\n    SELECT\r\n        *\r\n    FROM COMOUND_KEY_STAGGING\r\n        CROSS JOIN Date_Dimention\r\n    ORDER BY 1,2,3,4,5,6),\r\nOUTPUT_ AS (\r\n    SELECT\r\n        C.*,\r\n        TD.Total_Drawings,\r\n        PD.Plan_Drawings,\r\n        AD.Actuals_Drawings,\r\n        (IFNULL(PD.Plan_Drawings,0)-IFNULL(AD.Actuals_Drawings,0)) AS ShortFall_Drawings\r\n    FROM\r\n        COMPOUND_KEY C\r\n        LEFT JOIN Total_Drawings TD\r\n            ON C.project_id = TD.project_id\r\n            AND C.`Type` = TD.`Type`\r\n            AND C.Category = TD.Category\r\n            AND C.`month` = TD.Total_Drawings_Month\r\n            AND C.`year` = TD.Total_Drawings_year\r\n        LEFT JOIN Plan_Drawings PD\r\n            ON C.project_id = PD.project_id\r\n            AND C.`Type` = PD.`Type`\r\n            AND C.Category = PD.Category\r\n            AND C.`month` = PD.Plan_Drawings_Month\r\n            AND C.`year` = PD.Plan_Drawings_year\r\n        LEFT JOIN Actuals_Drawings AD\r\n            ON C.project_id = AD.project_id\r\n            AND C.`Type` = AD.`Type`\r\n            AND C.Category = AD.Category\r\n            AND C.`month` = AD.Actuals_Drawings_Month\r\n            AND C.`year` = AD.Actuals_Drawings_year)\r\n    SELECT\r\n        Upload_Date,\r\n         project_id,\r\n        `Type`,\r\n        Category,\r\n        `year`,\r\n        quarter,\r\n        `month`,\r\n        CASE\r\n            WHEN `month` = 1 THEN 'Jan'\r\n            WHEN `month` = 2 THEN 'Feb'\r\n            WHEN `month` = 3 THEN 'Mar'\r\n            WHEN `month` = 4 THEN 'Apr'\r\n            WHEN `month` = 5 THEN 'May'\r\n            WHEN `month` = 6 THEN 'Jun'\r\n            WHEN `month` = 7 THEN 'Jul'\r\n            WHEN `month` = 8 THEN 'Aug'\r\n            WHEN `month` = 9 THEN 'Sep'\r\n            WHEN `month` = 10 THEN 'Oct'\r\n            WHEN `month` = 11 THEN 'Nov'\r\n            WHEN `month` = 12 THEN 'Dec'\r\n        END AS `Month Text`,\r\n        Total_Drawings,\r\n        Plan_Drawings,\r\n        Actuals_Drawings,\r\n        ShortFall_Drawings\r\n    FROM OUTPUT_\r\n        WHERE\r\n            (Total_Drawings IS NOT NULL\r\n                OR Plan_Drawings IS NOT NULL\r\n                OR Actuals_Drawings IS NOT NULL);\r\n\r\n/**/\r\n\r\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_MySQL_Data_Loads_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-12T07:02:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MySQL_Data_Loads_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SA_DIM_USERINFO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SA_DIM_USERINFO",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SA_DIM_USERINFO",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-23T10:27:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_SA_DIM_USERINFO')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SA_DIM_USERINFO_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SA_DIM_USERINFO_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[SA_DIM_USERINFO_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "userid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "badgenumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Badgenumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "defaultdeptid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DefaultdeptID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Password",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Password",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Card",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Card",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Privilege",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Privilege",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccGroup",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TimeZones",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TimeZones",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Birthday",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Birthday",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "street",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "street",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "zip",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "zip",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ophone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ophone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FPHONE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FPHONE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pager",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "pager",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "minzu",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "minzu",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SSN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SSN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SECURITYFLAGS",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "SECURITYFLAGS",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "DelTag",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "DelTag",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "RegisterOT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RegisterOT",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AutoSchPlan",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AutoSchPlan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MinAutoSchInterval",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MinAutoSchInterval",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Image_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Image_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Last_Refresh_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Last_Refresh_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SA_DIM_USERINFO_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SA_DIM_USERINFO_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-23T09:46:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SA_DIM_USERINFO_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SA_DIM_USERINFO_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SA_FACT_CHECKINOUT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SA_FACT_CHECKINOUT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SA_FACT_CHECKINOUT",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-23T10:57:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_SA_FACT_CHECKINOUT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SA_FACT_CHECKINOUT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SA_FACT_CHECKINOUT_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[SA_FACT_CHECKINOUT_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Fact_CheckinoutID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "userid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Userid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "checktime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Checktime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "checktype",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Checktype",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "verifycode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Verifycode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sensorid",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SensorID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WorkCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Reserved",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Reserved",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Last_Refresh_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Last_Refresh_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SA_FACT_CHECKINOUT_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SA_FACT_CHECKINOUT_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-23T10:10:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SA_FACT_CHECKINOUT_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SA_FACT_CHECKINOUT_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SA_MANPOWER_MASTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SA_MANPOWER_MASTER",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SA_MANPOWER_MASTER",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T05:47:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_SA_MANPOWER_MASTER')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SA_MANPOWER_MASTER_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SA_MANPOWER_MASTER_STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE [STG].[SA_MANPOWER_MASTER_STG];",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Manpower_Master_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Upload_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "project_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Project_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tower",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tower",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sbu_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sbu_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SL NO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SL_NO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMP ID NO.",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMP_ID_NO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TECHNICIAN NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TECHNICIAN_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACTUAL DOJ",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACTUAL_DOJ",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TRADE AS PER ADMIN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRADE_AS_PER_ADMIN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TRADE GROUP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRADE_GROUP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WORK STATUS/COST HEAD",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WORK_STATUS_COST_HEAD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DIVISION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DIVISION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UNIT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UNIT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WORK STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WORK_STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SHIFT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SHIFT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "COMPANY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "COMPANY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SOURCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SOURCE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SA_MANPOWER_MASTER_STG_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SA_MANPOWER_MASTER_STG_TRG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T07:37:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SA_MANPOWER_MASTER_STG_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SA_MANPOWER_MASTER_STG_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_WOODEN_DOOR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WOODEN DOOR",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_WOODEN_DOOR",
								"type": "DataFlowReference",
								"parameters": {
									"MAX_ID": "0"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sobhasyndatafs01/Staging_Folder"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-20T19:06:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_WOODEN_DOOR')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Procurement_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_PROCUREMENT_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PROCUREMENT_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Procurement_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_PROCUREMENT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_PROCUREMENT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T09:31:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_PROCUREMENT_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_PROCUREMENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Projection_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_PROJECTION_RAW_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_PROJECTION_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "F_PLN_PROJECTION_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_PROJECTION_RAW_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "F_PLN_PROJECTION_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLN_PROJECTION_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "F_PLN_PROJECTION_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_PROJECTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T08:56:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_PROJECTION_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/F_PLN_PROJECTION_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_PROJECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ServiceRoom_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OPLNWATERROOMRAWSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_WATERROOM_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNWATERROOMMAPSTG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNWATERROOMRAWSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_WATERROOM_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNWATERROOMFACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNWATERROOMMAPSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_WATERROOM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNELECTRICALROOMRAWSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_ELECTRICALROOM_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNELECTRICALROOMMAPSTG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNELECTRICALROOMRAWSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_ELECTRICALROOM_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNELECTRICROOMFACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNELECTRICALROOMMAPSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_ELECTRICROOM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNGARBAGEROOMRAWSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_GARBAGEROOM_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNGARBAGEROOMMAPSTG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNGARBAGEROOMRAWSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_GARBAGEROOM_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNGARBAGEROOMFACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNGARBAGEROOMMAPSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_GARBAGEROOM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNTELEPHONEROOMRAWSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_TELEPHONEROOM_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNTELEPHONEROOMMAPSTG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNTELEPHONEROOMRAWSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_TELEPHONEROOM_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNTELEPHONEROOMFACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNTELEPHONEROOMMAPSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_TELEPHONEROOM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNFIRELIFTLOBBYRAWSTG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_FIRELIFTLOBBY_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OPLNFIRELIFTLOBBYMAPSTG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNFIRELIFTLOBBYRAWSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_FIRELIFTLOBBY_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNFIRELIFTLOBBYFACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OPLNFIRELIFTLOBBYMAPSTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_FIRELIFTLOBBY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLNSERVICEROOMSFACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PLNWATERROOMFACT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PLNELECTRICROOMFACT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PLNGARBAGEROOMFACT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PLNTELEPHONEROOMFACT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PLNFIRELIFTLOBBYFACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_SERVICEROOM_FACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-10T12:49:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_WATERROOM_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_WATERROOM_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_WATERROOM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_ELECTRICALROOM_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_ELECTRICALROOM_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_ELECTRICROOM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_GARBAGEROOM_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_GARBAGEROOM_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_GARBAGEROOM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_TELEPHONEROOM_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_TELEPHONEROOM_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_TELEPHONEROOM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_FIRELIFTLOBBY_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_FIRELIFTLOBBY_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_FIRELIFTLOBBY')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_SERVICEROOM_FACT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Staircase_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Staircase_Raw_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Staircase_Map_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_STAIRCASE_RAW_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Staircase_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Staircase_Raw_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_STAIRCASE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Staircase_Map_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_STAIRCASE_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T09:47:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_STAIRCASE_RAW_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_STAIRCASE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_STAIRCASE_MAP_STG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Struncture_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_STRUCTURES_POUR_MAP_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_STRUCTURES_POUR_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "O_PLN_STRUCTURE_POURING_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_STRUCTURES_POUR_MAP_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_STRUCTURE_POURING_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PLN_STRUCTURE_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_STRUCTURE_SP_TEMPTABLE",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PLN_STRUCTURE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "O_PLN_STRUCTURE_SP_TEMPTABLE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "O_PLN_STRUCTURE_POURING_STG",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DWH].[O_PLN_STRUCTURE]"
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSynapseAnalytics_DW",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T08:33:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_STRUCTURES_POUR_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_STRUCTURE_POURING_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PLN_STRUCTURE')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Taskreport_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TASKREPORT_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_Task_Report_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TASKREPORT_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TASKREPORT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PG_TASK_REPORT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-15T04:22:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_PG_Task_Report_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PG_TASK_REPORT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WoodenDoor_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "O_PLN_DOOR_MANPOWER_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_DOOR_MANPOWER_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "O_PLN_DOORMANPOWER_MAP_STG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_DOOR_MANPOWER_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_O_PLN_DOORMANPOWER_MAP_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "WOODEN_DOOR_FACT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "O_PLN_DOORMANPOWER_MAP_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_WOODEN_DOOR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T05:50:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_DOOR_MANPOWER_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_O_PLN_DOORMANPOWER_MAP_STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_WOODEN_DOOR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZCheckinout')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "Sobha_Azure_Attendance",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "id",
						"type": "Int32"
					},
					{
						"name": "userid",
						"type": "Int32"
					},
					{
						"name": "checktime",
						"type": "DateTime"
					},
					{
						"name": "checktype",
						"type": "String"
					},
					{
						"name": "verifycode",
						"type": "Int32"
					},
					{
						"name": "SN",
						"type": "String"
					},
					{
						"name": "sensorid",
						"type": "String"
					},
					{
						"name": "WorkCode",
						"type": "String"
					},
					{
						"name": "Reserved",
						"type": "String"
					},
					{
						"name": "Last_Refresh_Date",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Fact_Checkinout]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_Azure_Attendance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZuserinfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "Sobha_Azure_Attendance",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "userid",
						"type": "Int32"
					},
					{
						"name": "badgenumber",
						"type": "String"
					},
					{
						"name": "defaultdeptid",
						"type": "Int32"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "Password",
						"type": "String"
					},
					{
						"name": "Card",
						"type": "String"
					},
					{
						"name": "Privilege",
						"type": "String"
					},
					{
						"name": "AccGroup",
						"type": "String"
					},
					{
						"name": "TimeZones",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Birthday",
						"type": "DateTime"
					},
					{
						"name": "street",
						"type": "String"
					},
					{
						"name": "zip",
						"type": "String"
					},
					{
						"name": "ophone",
						"type": "String"
					},
					{
						"name": "FPHONE",
						"type": "String"
					},
					{
						"name": "pager",
						"type": "String"
					},
					{
						"name": "minzu",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "SN",
						"type": "String"
					},
					{
						"name": "SSN",
						"type": "String"
					},
					{
						"name": "UTime",
						"type": "DateTime"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "SECURITYFLAGS",
						"type": "Int16"
					},
					{
						"name": "DelTag",
						"type": "Int16"
					},
					{
						"name": "RegisterOT",
						"type": "Int32"
					},
					{
						"name": "AutoSchPlan",
						"type": "String"
					},
					{
						"name": "MinAutoSchInterval",
						"type": "String"
					},
					{
						"name": "Image_id",
						"type": "Int32"
					},
					{
						"name": "Last_Refresh_Date",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[dim_userinfo]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_Azure_Attendance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DOOR_DELIVERY_M_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Delivery_Order_No",
						"type": "nvarchar"
					},
					{
						"name": "Delivery_Date",
						"type": "nvarchar"
					},
					{
						"name": "Door_Type",
						"type": "nvarchar"
					},
					{
						"name": "Element",
						"type": "nvarchar"
					},
					{
						"name": "Vendor",
						"type": "nvarchar"
					},
					{
						"name": "SUM_ASA",
						"type": "nvarchar"
					},
					{
						"name": "MIN_ASA",
						"type": "nvarchar"
					},
					{
						"name": "Used_Data",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MIN_ASA_DELIVERED",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "DOOR_DELIVERY_M_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_CATEGORY_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlMI_SRC",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "category_name",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "category"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlMI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_CATEGORY_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Category_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "category_Name",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "DT_CATEGORY_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_DEPARTMENT_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlMI_SRC",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "department_name",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "department"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlMI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_DEPARTMENT_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DEPARTMENT_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Department_name",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Created_by",
						"type": "nvarchar"
					},
					{
						"name": "Updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "DT_DEPARTMENT_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_DRAWING_TRACKER_HEADER_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlMI_SRC",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "drawing_number",
						"type": "nvarchar"
					},
					{
						"name": "drawing_title",
						"type": "nvarchar"
					},
					{
						"name": "project_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "category_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "subcategory_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "scheduled_date",
						"type": "date"
					},
					{
						"name": "pnca_committed_date",
						"type": "date"
					},
					{
						"name": "actual_received_date",
						"type": "date"
					},
					{
						"name": "last_revision_title",
						"type": "nvarchar"
					},
					{
						"name": "revision_count",
						"type": "nvarchar"
					},
					{
						"name": "remarks",
						"type": "nvarchar"
					},
					{
						"name": "priority",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "drawing_tracker_header"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlMI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_DRAWING_TRACKER_HEADER_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DRAWING_TRACKER_HEADER_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "drawing_number",
						"type": "nvarchar"
					},
					{
						"name": "drawing_title",
						"type": "nvarchar"
					},
					{
						"name": "project_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "category_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "subcategory_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "scheduled_date",
						"type": "date"
					},
					{
						"name": "pnca_committed_date",
						"type": "date"
					},
					{
						"name": "actual_received_date",
						"type": "date"
					},
					{
						"name": "last_revision_title",
						"type": "nvarchar"
					},
					{
						"name": "revision_count",
						"type": "nvarchar"
					},
					{
						"name": "remarks",
						"type": "nvarchar"
					},
					{
						"name": "priority",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "DT_DRAWING_TRACKER_HEADER_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_PROJECT_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlMI_SRC",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "project_name",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "project"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlMI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_PROJECT_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PROJECT_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "project_name",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "DT_PROJECT_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_RFIS_SUBMITTALS_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlMI_SRC",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "project_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "department_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "submittion_type",
						"type": "nvarchar"
					},
					{
						"name": "submittal_ref_no",
						"type": "nvarchar"
					},
					{
						"name": "submittal_desc",
						"type": "nvarchar"
					},
					{
						"name": "submitted_on",
						"type": "date"
					},
					{
						"name": "pnca_commitment_date",
						"type": "date"
					},
					{
						"name": "pnca_commitment",
						"type": "int",
						"precision": 10
					},
					{
						"name": "response_required_date",
						"type": "date"
					},
					{
						"name": "delays",
						"type": "nvarchar"
					},
					{
						"name": "actual_received_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "plangrid_link",
						"type": "nvarchar"
					},
					{
						"name": "pending_with",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pending_status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "reassigned_to",
						"type": "int",
						"precision": 10
					},
					{
						"name": "reassigned_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "reassigned_by",
						"type": "int",
						"precision": 10
					},
					{
						"name": "closed_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "closed_by",
						"type": "int",
						"precision": 10
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "remarks",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "rfis_submittals"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlMI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_RFIS_SUBMITTALS_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "RFIS_SUBMITTALS_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Department_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Submittion_type",
						"type": "nvarchar"
					},
					{
						"name": "Submittal_ref_no",
						"type": "nvarchar"
					},
					{
						"name": "Submittal_desc",
						"type": "nvarchar"
					},
					{
						"name": "Submitted_on",
						"type": "date"
					},
					{
						"name": "Pnca_commitment_date",
						"type": "date"
					},
					{
						"name": "Pnca_commitment",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Response_required_date",
						"type": "date"
					},
					{
						"name": "Delays",
						"type": "nvarchar"
					},
					{
						"name": "Actual_received_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Plangrid_link",
						"type": "nvarchar"
					},
					{
						"name": "Pending_with",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Pending_status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reassigned_to",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reassigned_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Reassigned_by",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Closed_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Closed_by",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Remarks",
						"type": "nvarchar"
					},
					{
						"name": "Created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Created_by",
						"type": "nvarchar"
					},
					{
						"name": "Updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "DT_RFIS_SUBMITTALS_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_SUBCATEGORY_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlMI_SRC",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "subcategory_name",
						"type": "nvarchar"
					},
					{
						"name": "category_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "nvarchar"
					},
					{
						"name": "updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "subcategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlMI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DT_SUBCATEGORY_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Subcategory_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Subcategory_name",
						"type": "nvarchar"
					},
					{
						"name": "Category_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Created_by",
						"type": "nvarchar"
					},
					{
						"name": "Updated_by",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "DT_SUBCATEGORY_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_EXECUTIVE_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Achieved_Revenue_Till_2022",
						"type": "nvarchar"
					},
					{
						"name": "Total_Revenue_BOQ",
						"type": "nvarchar"
					},
					{
						"name": "Balance_Revenue_to_Execute_From_2023",
						"type": "nvarchar"
					},
					{
						"name": "Actuals_From_Business_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "Project",
						"type": "nvarchar"
					},
					{
						"name": "Latest_Actuals",
						"type": "decimal",
						"precision": 32,
						"scale": 2
					},
					{
						"name": "Total_to_be_considered",
						"type": "decimal",
						"precision": 32,
						"scale": 2
					},
					{
						"name": "LoadDateTime",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_EXECUTIVE_SUMMARY_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_F_PLN_PROJECTION_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Upload_Date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project Sclicer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Area",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Category",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Activity Description",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Projection for the month",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Yesterday",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plan_Yesterday",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Plan as on date",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Actual_Yesterday",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Actual as on date",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Shortfall Reasons",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_Custom_Sort",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Achived",
						"type": "decimal",
						"precision": 14,
						"scale": 4
					},
					{
						"name": "Achived_90",
						"type": "decimal",
						"precision": 14,
						"scale": 4
					}
				],
				"typeProperties": {
					"tableName": "f_pln_projection"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_F_PLN_PROJECTION_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Upload_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Description",
						"type": "nvarchar"
					},
					{
						"name": "Projection_for_the_month",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Yesterday",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Plan_Yesterday",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Plan_as_on_date",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Actual_Yesterday",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Actual_as_on_date",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Shortfall_Reasons",
						"type": "nvarchar"
					},
					{
						"name": "SBU_Custom_Sort",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Achived",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Achived_90",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "F_PLN_PROJECTION_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GAANT_HURRY_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Group",
						"type": "nvarchar"
					},
					{
						"name": "Sort_Grp",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Activity_New",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Description",
						"type": "nvarchar"
					},
					{
						"name": "Sort_Activity",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Start_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Actual_Finish_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Original_Actuals",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Achived",
						"type": "nvarchar"
					},
					{
						"name": "Legend",
						"type": "nvarchar"
					},
					{
						"name": "PLN_ACT",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_GAANT_HURRY_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Gaant_Hurry_Src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MANPOWER_MERGE_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SL_NO",
						"type": "nvarchar"
					},
					{
						"name": "EMP_ID_NO",
						"type": "nvarchar"
					},
					{
						"name": "TECHNICIAN_NAME",
						"type": "nvarchar"
					},
					{
						"name": "ACTUAL_DOJ",
						"type": "nvarchar"
					},
					{
						"name": "TRADE_AS_PER_ADMIN",
						"type": "nvarchar"
					},
					{
						"name": "TRADE_GROUP",
						"type": "nvarchar"
					},
					{
						"name": "WORK_STATUS_COST_HEAD",
						"type": "nvarchar"
					},
					{
						"name": "DIVISION",
						"type": "nvarchar"
					},
					{
						"name": "UNIT",
						"type": "nvarchar"
					},
					{
						"name": "WORK_STATUS",
						"type": "nvarchar"
					},
					{
						"name": "SHIFT",
						"type": "nvarchar"
					},
					{
						"name": "COMPANY",
						"type": "nvarchar"
					},
					{
						"name": "SOURCE",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "Emp_ID",
						"type": "nvarchar"
					},
					{
						"name": "Login_Time",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "MANPOWER_MERGE_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MANPOWER_MERGE_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SL_NO",
						"type": "nvarchar"
					},
					{
						"name": "EMP_ID_NO",
						"type": "nvarchar"
					},
					{
						"name": "TECHNICIAN_NAME",
						"type": "nvarchar"
					},
					{
						"name": "ACTUAL_DOJ",
						"type": "nvarchar"
					},
					{
						"name": "TRADE_AS_PER_ADMIN",
						"type": "nvarchar"
					},
					{
						"name": "TRADE_GROUP",
						"type": "nvarchar"
					},
					{
						"name": "WORK_STATUS_COST_HEAD",
						"type": "nvarchar"
					},
					{
						"name": "DIVISION",
						"type": "nvarchar"
					},
					{
						"name": "UNIT",
						"type": "nvarchar"
					},
					{
						"name": "WORK_STATUS",
						"type": "nvarchar"
					},
					{
						"name": "SHIFT",
						"type": "nvarchar"
					},
					{
						"name": "COMPANY",
						"type": "nvarchar"
					},
					{
						"name": "SOURCE",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "Emp_ID",
						"type": "nvarchar"
					},
					{
						"name": "Login_Time",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_MANPOWER_MERGE_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MANPOWER_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "SL NO",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EMP ID NO.",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TECHNICIAN NAME",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTUAL DOJ",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TRADE AS PER ADMIN",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TRADE GROUP",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WORK STATUS/COST HEAD",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DIVISION",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UNIT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WORK STATUS",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SHIFT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "COMPANY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SOURCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Emp_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Login_Time",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "manpower_merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MySQL_Data_Loads_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_LEVEL_MAP_ALL_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "level_map",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_level_map_all"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_LEVEL_MAP_ALL_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "LEVEL_MAP_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LEVEL",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_LEVEL_MAP_ALL_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BALCONYAREA_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_balconyarea_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BALCONYAREA_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "BALCONYAREA_MAP_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_BALCONYAREA_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BALCONYAREA_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Flat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Marking for Rain Water Pipe",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Rain water pipe",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Rain Water Pipe Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "F channel Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Non Shrink Grout",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Top Rail Bracket Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EIFS Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony EIFS Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grinding Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Skim Coat & Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Drain Fixing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Balcony Box Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Left Over Screed (If any)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EIFS Wall Texture",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balustrade Glass Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balustrade Top Rail",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Under Tile Water Proofing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Floor Tiling",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balustrade - Internal Flashing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Metal Ceiling",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Ceiling Texture",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Complete Wall Texture",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Grouting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony MEP Final Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balcony Drain Cover Supply",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cover fixing for balcony drain",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cover plate B/W ACP & EIFS",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_balconyarea_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BALCONYAREA_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "BALCONYAREA_RAW_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "nvarchar"
					},
					{
						"name": "Marking_for_Rain_Water_Pipe",
						"type": "nvarchar"
					},
					{
						"name": "Rain_water_pipe",
						"type": "nvarchar"
					},
					{
						"name": "Rain_Water_Pipe_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Plaster",
						"type": "nvarchar"
					},
					{
						"name": "F_channel_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Non_Shrink_Grout",
						"type": "nvarchar"
					},
					{
						"name": "Top_Rail_Bracket_Installation",
						"type": "nvarchar"
					},
					{
						"name": "EIFS_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_EIFS_Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Grinding_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Skim_Coat_and_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Screed",
						"type": "nvarchar"
					},
					{
						"name": "Drain_Fixing",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Balcony_Box_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Left_Over_Screed_If_any",
						"type": "nvarchar"
					},
					{
						"name": "EIFS_Wall_Texture",
						"type": "nvarchar"
					},
					{
						"name": "Balustrade_Glass_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Balustrade_Top_Rail",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Under_Tile_Water_Proofing",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Floor_Tiling",
						"type": "nvarchar"
					},
					{
						"name": "Balustrade_Internal_Flashing",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Skirting",
						"type": "nvarchar"
					},
					{
						"name": "Metal_Ceiling",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Ceiling_Texture",
						"type": "nvarchar"
					},
					{
						"name": "Complete_Wall_Texture",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Grouting",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_MEP_Final_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Final_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Balcony_Drain_Cover_Supply",
						"type": "nvarchar"
					},
					{
						"name": "Cover_Fixing_For_Balcony_Drain",
						"type": "nvarchar"
					},
					{
						"name": "Cover_plate_BW_ACP_and_EIFS",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_BALCONYAREA_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BUSINESS_PLAN_1_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Upload_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Month",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "value",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DENSE_RANK",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_sort",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "month_sort",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "year_sort",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cummulative",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "f_pln_business_plan_1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BUSINESS_PLAN_1_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Upload_date",
						"type": "date"
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Month",
						"type": "nvarchar"
					},
					{
						"name": "value",
						"type": "nvarchar"
					},
					{
						"name": "DENSE_RANK",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "sbu_sort",
						"type": "int",
						"precision": 10
					},
					{
						"name": "month_sort",
						"type": "int",
						"precision": 10
					},
					{
						"name": "year_sort",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cummulative",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_BUSINESS_PLAN_1_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BUSINESS_PLN_1_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sl. No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total Revenue (BOQ)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Achieved Revenue (Till 2022)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balance Revenue to Execute (From 2023)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Jan-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Feb-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Mar-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Apr-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "May-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Jun-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Jul-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Aug-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sep-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Oct-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Nov-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dec-23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_business_plan_1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BUSINESS_PLN_1_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "varchar"
					},
					{
						"name": "Sl_No",
						"type": "varchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Total_Revenue_BOQ",
						"type": "nvarchar"
					},
					{
						"name": "Achieved_Revenue_Till_2022",
						"type": "nvarchar"
					},
					{
						"name": "Balance_Revenue_to_Execute_From_2023",
						"type": "nvarchar"
					},
					{
						"name": "Jan_23",
						"type": "nvarchar"
					},
					{
						"name": "Feb_23",
						"type": "nvarchar"
					},
					{
						"name": "Mar_23",
						"type": "nvarchar"
					},
					{
						"name": "Apr_23",
						"type": "nvarchar"
					},
					{
						"name": "May_23",
						"type": "nvarchar"
					},
					{
						"name": "Jun_23",
						"type": "nvarchar"
					},
					{
						"name": "Jul_23",
						"type": "nvarchar"
					},
					{
						"name": "Aug_23",
						"type": "nvarchar"
					},
					{
						"name": "Sep_23",
						"type": "nvarchar"
					},
					{
						"name": "Oct_23",
						"type": "nvarchar"
					},
					{
						"name": "Nov_23",
						"type": "nvarchar"
					},
					{
						"name": "Dec_23",
						"type": "nvarchar"
					},
					{
						"name": "Total",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_BUSINESS_PLAN_1_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BUSINESS_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sl. No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total Revenue (BOQ)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Achieved Revenue (Till 2021)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Balance Revenue to Execute (From 2022)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Jan-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Feb-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Mar-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Apr-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "May-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Jun-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Jul-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Aug-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sep-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Oct-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Nov-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dec-22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_business_plan_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_BUSINESS_RAW_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "BUSINESS_PLAN_STG_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Sl_No",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Total_Revenue_BOQ",
						"type": "nvarchar"
					},
					{
						"name": "Achieved_Revenue_Till_2021",
						"type": "nvarchar"
					},
					{
						"name": "Balance_Revenue_to_Execute_From_2022",
						"type": "nvarchar"
					},
					{
						"name": "Jan_22",
						"type": "nvarchar"
					},
					{
						"name": "Feb_22",
						"type": "nvarchar"
					},
					{
						"name": "Mar_22",
						"type": "nvarchar"
					},
					{
						"name": "Apr_22",
						"type": "nvarchar"
					},
					{
						"name": "May_22",
						"type": "nvarchar"
					},
					{
						"name": "Jun_22",
						"type": "nvarchar"
					},
					{
						"name": "Jul_22",
						"type": "nvarchar"
					},
					{
						"name": "Aug_22",
						"type": "nvarchar"
					},
					{
						"name": "Sep_22",
						"type": "nvarchar"
					},
					{
						"name": "Oct_22",
						"type": "nvarchar"
					},
					{
						"name": "Nov_22",
						"type": "nvarchar"
					},
					{
						"name": "Dec_22",
						"type": "nvarchar"
					},
					{
						"name": "Total",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_BUSINESS_PLAN_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_CORRIDOR_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_corridor_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_CORRIDOR_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CORRIDOR_MAP_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_CORRIDOR_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_CORRIDOR_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Marking for Builders Work",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cutting & Chasing of Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Services Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall MEP Services Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grinding Clearance for Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tile Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bull Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Main Door Threshold",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electrical Conduits",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cold water supply",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Fighting Pipe Support",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Modular Instalation (Future Projects)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Framing Clearance by MEP",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Box Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Glass Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Flashing Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Floor Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Hose Reel Cabinet Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grouting for Framing Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FC Framing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sprinkler Dropper Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plenum Box Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Boarding Clearance by MEP",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Framing Levelling",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FC Boarding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Joint Taping & Sanding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grouting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Left over Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Left Over Area Floor Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Left Over Area Wall Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Remaining Grout and Silicone Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_corridor_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_CORRIDOR_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CORRIDOR_RAW_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Marking_for_Builders_Work",
						"type": "nvarchar"
					},
					{
						"name": "Cutting_and_Chasing_of_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Services_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Wall_MEP_Services_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Screed",
						"type": "nvarchar"
					},
					{
						"name": "Grinding_Clearance_for_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Tile_Marking",
						"type": "nvarchar"
					},
					{
						"name": "Bull_Marking",
						"type": "nvarchar"
					},
					{
						"name": "Main_Door_Threshold",
						"type": "nvarchar"
					},
					{
						"name": "Electrical_Conduits",
						"type": "nvarchar"
					},
					{
						"name": "Cold_water_supply",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Fighting_Pipe_Support",
						"type": "nvarchar"
					},
					{
						"name": "Modular_Instalation_Future_Projects",
						"type": "nvarchar"
					},
					{
						"name": "Framing_Clearance_by_MEP",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Box_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Glass_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Flashing_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Floor_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Hose_Reel_Cabinet_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Grouting_for_Framing_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "FC_Framing",
						"type": "nvarchar"
					},
					{
						"name": "Sprinkler_Dropper_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Plenum_Box_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Boarding_Clearance_by_MEP",
						"type": "nvarchar"
					},
					{
						"name": "Framing_Levelling",
						"type": "nvarchar"
					},
					{
						"name": "FC_Boarding",
						"type": "nvarchar"
					},
					{
						"name": "Joint_Taping_and_Sanding",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Stucco_1st_and_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Grouting",
						"type": "nvarchar"
					},
					{
						"name": "Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Left_over_Screed",
						"type": "nvarchar"
					},
					{
						"name": "Left_Over_Area_Floor_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Left_Over_Area_Wall_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Remaining_Grout_and_Silicone_Works",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat_Paint",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_CORRIDOR_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_CRITICAL_ISSUE_TRACKER_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sl No.",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Reference Number",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PR / PO / Other Ref No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Raised On",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU (Issue Raised by)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Issue Description",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Pending With",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Current Status",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Impact On",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Target Closure Date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Status",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual Closure Date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_critical_issue_tracker"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_CRITICAL_ISSUE_TRACKER_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CRITICAL_ISSUE_TRACKER_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "varchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "varchar"
					},
					{
						"name": "Sl_No",
						"type": "varchar"
					},
					{
						"name": "Reference_Number",
						"type": "varchar"
					},
					{
						"name": "PR_PO_Other_Ref_No",
						"type": "varchar"
					},
					{
						"name": "Raised_On",
						"type": "varchar"
					},
					{
						"name": "SBU_Issue_Raised_by",
						"type": "varchar"
					},
					{
						"name": "Project",
						"type": "varchar"
					},
					{
						"name": "Issue_Description",
						"type": "varchar"
					},
					{
						"name": "Pending_With",
						"type": "varchar"
					},
					{
						"name": "Current_Status",
						"type": "varchar"
					},
					{
						"name": "Impact_On",
						"type": "varchar"
					},
					{
						"name": "Target_Closure_Date",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Actual_Closure_Date",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_CRITICAL_ISSUE_TRACKER_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DOORMANPOWER_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC_NAME",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC_Short",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_doormanpower_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DOORMANPOWER_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "O_PLN_DOORMANPOWER_MAP_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "SC",
						"type": "nvarchar"
					},
					{
						"name": "SC_NAME",
						"type": "nvarchar"
					},
					{
						"name": "SC_Short",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_DOORMANPOWER_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DOOR_DELIVERY_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sr. No.",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Building",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Delivery Order No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Delivery Date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Element",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Rating",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Orientation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Quantity (Sets)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Quantity (Nos)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Remarks",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Vendor",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_door_delivery_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "door_delivery_raw_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Sr_No",
						"type": "nvarchar"
					},
					{
						"name": "Building",
						"type": "nvarchar"
					},
					{
						"name": "Delivery_Order_No",
						"type": "nvarchar"
					},
					{
						"name": "Delivery_Date",
						"type": "nvarchar"
					},
					{
						"name": "Door_Type",
						"type": "nvarchar"
					},
					{
						"name": "Element",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Rating",
						"type": "nvarchar"
					},
					{
						"name": "Orientation",
						"type": "nvarchar"
					},
					{
						"name": "Quantity_Sets",
						"type": "nvarchar"
					},
					{
						"name": "Quantity_Nos",
						"type": "nvarchar"
					},
					{
						"name": "Remarks",
						"type": "nvarchar"
					},
					{
						"name": "Vendor",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "o_pln_door_delivery_raw_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DOOR_INSTALLATION_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sr. No.",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Building",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Flat No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Flat No_A",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Jamb Width",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Orientation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Rating",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Frame",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Foam",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Architrave",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Shutter",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ironmongery",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Installer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Vendor",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_door_installation_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DOOR_INSTALLATION_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Door_Installation_Raw_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Id",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Sbu_Id",
						"type": "nvarchar"
					},
					{
						"name": "Sr_No",
						"type": "nvarchar"
					},
					{
						"name": "Building",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat_No",
						"type": "nvarchar"
					},
					{
						"name": "Flat_No_A",
						"type": "nvarchar"
					},
					{
						"name": "Door_Type",
						"type": "nvarchar"
					},
					{
						"name": "Jamb_Width",
						"type": "nvarchar"
					},
					{
						"name": "Orientation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Id",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Rating",
						"type": "nvarchar"
					},
					{
						"name": "Frame",
						"type": "nvarchar"
					},
					{
						"name": "Foam",
						"type": "nvarchar"
					},
					{
						"name": "Architrave",
						"type": "nvarchar"
					},
					{
						"name": "Shutter",
						"type": "nvarchar"
					},
					{
						"name": "Ironmongery",
						"type": "nvarchar"
					},
					{
						"name": "Installer",
						"type": "nvarchar"
					},
					{
						"name": "Vendor",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_DOOR_INSTALLATION_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DOOR_MANPOWER_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SC20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_door_manpower"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DOOR_MANPOWER_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "O_PLN_DOOR_MANPOWER_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Date",
						"type": "nvarchar"
					},
					{
						"name": "SC1",
						"type": "nvarchar"
					},
					{
						"name": "SC2",
						"type": "nvarchar"
					},
					{
						"name": "SC3",
						"type": "nvarchar"
					},
					{
						"name": "SC4",
						"type": "nvarchar"
					},
					{
						"name": "SC5",
						"type": "nvarchar"
					},
					{
						"name": "SC6",
						"type": "nvarchar"
					},
					{
						"name": "SC7",
						"type": "nvarchar"
					},
					{
						"name": "SC8",
						"type": "nvarchar"
					},
					{
						"name": "SC9",
						"type": "nvarchar"
					},
					{
						"name": "SC10",
						"type": "nvarchar"
					},
					{
						"name": "SC11",
						"type": "nvarchar"
					},
					{
						"name": "SC12",
						"type": "nvarchar"
					},
					{
						"name": "SC13",
						"type": "nvarchar"
					},
					{
						"name": "SC14",
						"type": "nvarchar"
					},
					{
						"name": "SC15",
						"type": "nvarchar"
					},
					{
						"name": "SC16",
						"type": "nvarchar"
					},
					{
						"name": "SC17",
						"type": "nvarchar"
					},
					{
						"name": "SC18",
						"type": "nvarchar"
					},
					{
						"name": "SC19",
						"type": "nvarchar"
					},
					{
						"name": "SC20",
						"type": "nvarchar"
					},
					{
						"name": "Total",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_DOOR_MANPOWER_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DRAWING_DETAIL_DRAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sl.No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Villa Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Category",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Drawing Number",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Drawing Title",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Scheduled Date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PNCA commitment",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R0",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R0-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R1-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R2-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R3-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R4-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R5-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R6-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R7-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R8-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R9-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R10-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R11-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R12-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R13-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R14-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R15-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R16-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R17-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R18-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R19-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R20-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R21-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R22-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R23-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R24-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "R25-Trans_Id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Temp_col1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Temp_col2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Temp_col3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Temp_col4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Temp_col5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Temp_col6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_drawing_detail_draw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DRAWING_DETAIL_DRAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "O_PLN_DRAWING_DETAIL_DRAW_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "varchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "varchar"
					},
					{
						"name": "Sl.No",
						"type": "varchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Villa Type",
						"type": "varchar"
					},
					{
						"name": "Category",
						"type": "varchar"
					},
					{
						"name": "Drawing Number",
						"type": "varchar"
					},
					{
						"name": "Drawing Title",
						"type": "varchar"
					},
					{
						"name": "Scheduled Date",
						"type": "varchar"
					},
					{
						"name": "PNCA commitment",
						"type": "varchar"
					},
					{
						"name": "R0",
						"type": "varchar"
					},
					{
						"name": "R0-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R1",
						"type": "varchar"
					},
					{
						"name": "R1-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R2",
						"type": "varchar"
					},
					{
						"name": "R2-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R3",
						"type": "varchar"
					},
					{
						"name": "R3-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R4",
						"type": "varchar"
					},
					{
						"name": "R4-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R5",
						"type": "varchar"
					},
					{
						"name": "R5-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R6",
						"type": "varchar"
					},
					{
						"name": "R6-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R7",
						"type": "varchar"
					},
					{
						"name": "R7-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R8",
						"type": "varchar"
					},
					{
						"name": "R8-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R9",
						"type": "varchar"
					},
					{
						"name": "R9-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R10",
						"type": "varchar"
					},
					{
						"name": "R10-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R11",
						"type": "varchar"
					},
					{
						"name": "R11-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R12",
						"type": "varchar"
					},
					{
						"name": "R12-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R13",
						"type": "varchar"
					},
					{
						"name": "R13-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R14",
						"type": "varchar"
					},
					{
						"name": "R14-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R15",
						"type": "varchar"
					},
					{
						"name": "R15-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R16",
						"type": "varchar"
					},
					{
						"name": "R16-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R17",
						"type": "varchar"
					},
					{
						"name": "R17-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R18",
						"type": "varchar"
					},
					{
						"name": "R18-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R19",
						"type": "varchar"
					},
					{
						"name": "R19-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R20",
						"type": "varchar"
					},
					{
						"name": "R20-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R21",
						"type": "varchar"
					},
					{
						"name": "R21-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R22",
						"type": "varchar"
					},
					{
						"name": "R22-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R23",
						"type": "varchar"
					},
					{
						"name": "R23-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R24",
						"type": "varchar"
					},
					{
						"name": "R24-Trans_Id",
						"type": "varchar"
					},
					{
						"name": "R25",
						"type": "varchar"
					},
					{
						"name": "R25-Trans_Id",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_DRAWING_DETAIL_DRAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DRYAREA_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_dryarea_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DRYAREA_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_DRYAREA_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DRYAREA_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Flat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HSE Clearance for Deshuttering",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Riser Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LPG Pipe",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork Layout Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork First Layer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork with 1mtr marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GI Lintel",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RCC Lintel / Stiffener",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Above Lintel Block Work",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Head Restraints Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Sealant Works & PU Foam Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Marking for HL Builders Work",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork Cutting for MEP Services",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Wall Marking for Cutting & Chasing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bull Marking for Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Frame",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Corner Bead Fixing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cutting & Chasing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Plastering Clearance (Box fixing & Pipe setting)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ONU, DB & All MEP works Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ONU, DB & All MEP works Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plastering Clearance with 1 Meter Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Center line marking for Facade Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UCW-Starter Gutter",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UCW-Brackets",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UCW-Panels",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UCW-Alignment",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Tile Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Bore Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed Curing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Primer,Stucco banding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bulk Head",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP H/L Wiring",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP H/L Framing Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Sealant works around ducts",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area FC Framing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wardrobe Nib wall",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP H/L Boarding Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FC Boarding with Joint Taping",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Primer Ceiling",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Stucco 1st Coat Ceiling",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Stucco 2nd Coat Ceiling",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "First Coat Paint Ceiling",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Main Door Threshold",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Floor Tiling",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "POP Above Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Hinge Door Box Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed near Hinge Door",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Hinge Door Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Box Section",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Glass Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UCW-GI Sheet Installation - Wall",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UCW-GI Sheet Installation - Floor",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed near Curtain Wall",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sliding Door Box Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sliding Door Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed near Sliding Door",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Left Over Tile Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Left Over Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tile Grouting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tile Silicone Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Mullion",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Flashing Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Curtain Wall Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UCW-Firestop and Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UCW-GI Flashing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Hinge Door Glass Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Hinge Door Internal Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Hinge Door Alignment",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Hinge Door External Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sliding Door Glass Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sliding Door Internal Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sliding Door Alignment",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sliding Door External Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Window Jamb,Corner,Pelmet Area, Shadow Angle POP Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Stucco 1st Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall stucco 2nd coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Paint 1st Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Architrave Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Ironmongery Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Silicone Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cut piece Skirting near Door",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Gas Meter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Kitchen Appliances",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wardrobe Carcass Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wardrobe Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wardrobe Silicone Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cut piece Skirting near Wardrobe",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Air Balancing for FCU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FCU Closure Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "VCD Closure - FCU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Air Balancing for FAHU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FAHU Closure Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "VCD Closure - FAHU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Fixtures Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Access Panel Final Coat and Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Final Coat Preparation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Thermostat Cover Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Intercom Cover Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ONU & DB Panel Door",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Switch socket cover Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_dryarea_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_DRYAREA_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DryArea_Raw_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "nvarchar"
					},
					{
						"name": "HSE_Clearance_for_Deshuttering",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Riser_Works",
						"type": "nvarchar"
					},
					{
						"name": "LPG_Pipe",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork_Layout_Marking",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork_First_Layer",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork_with_1mtr_marking",
						"type": "nvarchar"
					},
					{
						"name": "GI_Lintel",
						"type": "nvarchar"
					},
					{
						"name": "RCC_Lintel_Stiffener",
						"type": "nvarchar"
					},
					{
						"name": "Above_Lintel_Block_Work",
						"type": "nvarchar"
					},
					{
						"name": "Head_Restraints_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Sealant_Works_and_PU_Foam_Works",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Marking_for_HL_Builders_Work",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork_Cutting_for_MEP_Services",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Wall_Marking_for_Cutting_and_Chasing",
						"type": "nvarchar"
					},
					{
						"name": "Bull_Marking_for_Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Frame",
						"type": "nvarchar"
					},
					{
						"name": "Corner_Bead_Fixing",
						"type": "nvarchar"
					},
					{
						"name": "Cutting_And_Chasing",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Plastering_Clearance_Box_fixing_and_Pipe_setting",
						"type": "nvarchar"
					},
					{
						"name": "ONU_DB_And_All_MEP_works_Installation",
						"type": "nvarchar"
					},
					{
						"name": "ONU_DB_And_All_MEP_works_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Plastering_Clearance_with_1_Meter_Marking",
						"type": "nvarchar"
					},
					{
						"name": "Center_line_marking_for_Facade_Installation",
						"type": "nvarchar"
					},
					{
						"name": "UCW_Starter_Gutter",
						"type": "nvarchar"
					},
					{
						"name": "UCW_Brackets",
						"type": "nvarchar"
					},
					{
						"name": "UCW_Panels",
						"type": "nvarchar"
					},
					{
						"name": "UCW_Alignment",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Tile_Marking",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Bore_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Screed",
						"type": "nvarchar"
					},
					{
						"name": "Screed_Curing",
						"type": "nvarchar"
					},
					{
						"name": "Primer_Stucco_banding",
						"type": "nvarchar"
					},
					{
						"name": "Bulk_Head",
						"type": "nvarchar"
					},
					{
						"name": "MEP_H_L_Wiring",
						"type": "nvarchar"
					},
					{
						"name": "MEP_H_L_Framing_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Sealant_works_around_ducts",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_FC_Framing",
						"type": "nvarchar"
					},
					{
						"name": "Wardrobe_Nib_wall",
						"type": "nvarchar"
					},
					{
						"name": "MEP_H_L_Boarding_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "FC_Boarding_with_Joint_Taping",
						"type": "nvarchar"
					},
					{
						"name": "Primer_Ceiling",
						"type": "nvarchar"
					},
					{
						"name": "Stucco_1st_Coat_Ceiling",
						"type": "nvarchar"
					},
					{
						"name": "Stucco_2nd_Coat_Ceiling",
						"type": "nvarchar"
					},
					{
						"name": "First_Coat_Paint_Ceiling",
						"type": "nvarchar"
					},
					{
						"name": "Main_Door_Threshold",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Floor_Tiling",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Skirting",
						"type": "nvarchar"
					},
					{
						"name": "POP_Above_Skirting",
						"type": "nvarchar"
					},
					{
						"name": "Hinge_Door_Box_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Screed_near_Hinge_Door",
						"type": "nvarchar"
					},
					{
						"name": "Hinge_Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Box_Section",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Glass_Installation",
						"type": "nvarchar"
					},
					{
						"name": "UCW_GI_Sheet_Installation_Wall",
						"type": "nvarchar"
					},
					{
						"name": "UCW_GI_Sheet_Installation_Floor",
						"type": "nvarchar"
					},
					{
						"name": "Screed_near_Curtain_Wall",
						"type": "nvarchar"
					},
					{
						"name": "Sliding_Door_Box_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Sliding_Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Screed_near_Sliding_Door",
						"type": "nvarchar"
					},
					{
						"name": "Left_Over_Tile_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Left_Over_Skirting",
						"type": "nvarchar"
					},
					{
						"name": "Tile_Grouting",
						"type": "nvarchar"
					},
					{
						"name": "Tile_Silicone_Works",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Mullion",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Flashing_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Curtain_Wall_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "UCW_Firestop_and_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "UCW_GI_Flashing",
						"type": "nvarchar"
					},
					{
						"name": "Hinge_Door_Glass_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Hinge_Door_Internal_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Hinge_Door_Alignment",
						"type": "nvarchar"
					},
					{
						"name": "Hinge_Door_External_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Sliding_Door_Glass_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Sliding_Door_Internal_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Sliding_Door_Alignment",
						"type": "nvarchar"
					},
					{
						"name": "Sliding_Door_External_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Window_Jamb_Corner_Pelmet_Area_Shadow_Angle_POP_Works",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Stucco_1st_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Wall_stucco_2nd_coat",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Paint_1st_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Architrave_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Shutter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Ironmongery_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Silicone_Works",
						"type": "nvarchar"
					},
					{
						"name": "Cut_piece_Skirting_near_Door",
						"type": "nvarchar"
					},
					{
						"name": "Gas_Meter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Kitchen_Appliances",
						"type": "nvarchar"
					},
					{
						"name": "Wardrobe_Carcass_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Wardrobe_Shutter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Wardrobe_Silicone_Works",
						"type": "nvarchar"
					},
					{
						"name": "Cut_piece_Skirting_near_Wardrobe",
						"type": "nvarchar"
					},
					{
						"name": "Air_Balancing_for_FCU",
						"type": "nvarchar"
					},
					{
						"name": "FCU_Closure_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "VCD_Closure_FCU",
						"type": "nvarchar"
					},
					{
						"name": "Air_Balancing_for_FAHU",
						"type": "nvarchar"
					},
					{
						"name": "FAHU_Closure_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "VCD_Closure_FAHU",
						"type": "nvarchar"
					},
					{
						"name": "Final_Fixtures_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Access_Panel_Final_Coat_and_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Final_Coat_Preparation",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Final_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Thermostat_Cover_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Intercom_Cover_Installation",
						"type": "nvarchar"
					},
					{
						"name": "ONU_And_DB_Panel_Door",
						"type": "nvarchar"
					},
					{
						"name": "Switch_socket_Cover_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Upload_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_DRYAREA_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_ELECTRICALROOM_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_electricalroom_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_ELECTRICALROOM_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ELECTRICALROOM_MAP_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_ELECTRICALROOM_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_ELECTRICALROOM_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork Layout",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Marking for Builders Work",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cutting & Chasing of Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Services Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall MEP Services Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Cutting & Chipping",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Sleeve Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bore Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall & Ceiling Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Meter Board Fixing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Meter Board Painting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Installation of cable tray and trunking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Installation of Panels",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cable laying and glanding works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dressing and termination of SMDB & Panels",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bus bar with Tap off Box completion",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Threshold",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Floor Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Architrave Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Ironmongery Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Grinding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Bug Fill",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy First Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Final Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "POP Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electrical Room Top Boarding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Sealant Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Angle Fixing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Shaft Boarding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grouting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Signage",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electric Meter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_electricalroom_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_ELECTRICALROOM_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ELECTRICALROOM_RAW_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "varchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "Blockwork_Layout",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Marking_for_Builders_Work",
						"type": "nvarchar"
					},
					{
						"name": "Cutting_and_Chasing_of_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Services_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Wall_MEP_Services_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Core_Cutting_and_Chipping",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Sleeve_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Bore_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Screed",
						"type": "nvarchar"
					},
					{
						"name": "Wall_and_Ceiling_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Stucco_1st_and_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Stucco_1st_and_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Wall_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Meter_Board_Fixing",
						"type": "nvarchar"
					},
					{
						"name": "Meter_Board_Painting",
						"type": "nvarchar"
					},
					{
						"name": "Installation_of_cable_tray_and_trunking",
						"type": "nvarchar"
					},
					{
						"name": "Installation_of_Panels",
						"type": "nvarchar"
					},
					{
						"name": "Cable_laying_and_glanding_works",
						"type": "nvarchar"
					},
					{
						"name": "Dressing_and_termination_of_SMDB_and_Panels",
						"type": "nvarchar"
					},
					{
						"name": "Bus_bar_with_Tap_off_Box_completion",
						"type": "nvarchar"
					},
					{
						"name": "Threshold",
						"type": "nvarchar"
					},
					{
						"name": "Floor_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Architrave_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Shutter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Ironmongery_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Grinding",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Bug_Fill",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_First_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Final_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Skirting",
						"type": "nvarchar"
					},
					{
						"name": "POP_Works",
						"type": "nvarchar"
					},
					{
						"name": "Electrical_Room_Top_Boarding",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Sealant_Works",
						"type": "nvarchar"
					},
					{
						"name": "Angle_Fixing",
						"type": "nvarchar"
					},
					{
						"name": "Shaft_Boarding",
						"type": "nvarchar"
					},
					{
						"name": "Grouting",
						"type": "nvarchar"
					},
					{
						"name": "Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Signage",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "Electric_Meter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat_Paint",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_ELECTRICALROOM_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_FIRELIFTLOBBY_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "o_pln_fireliftlobby_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_FIRELIFTLOBBY_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FIRELIFTLOBBY_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_FIRELIFTLOBBY_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_FIRELIFTLOBBY_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Marking for Builders Work",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cutting & Chasing of Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Services Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall MEP Services Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Lift Door Installation & Jamb Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Beside Lift Door Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Beside Lift Door Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP High Level Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FC Framing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Boarding Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FC Boarding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Joint Taping and Sanding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Stucco 1st and 2nd Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Stucco 1st and 2nd Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Floor Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Architrave Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Ironmongery Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Grinding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Bug Fill",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy First Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Final Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grout",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Signage",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_fireliftlobby_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_FIRELIFTLOBBY_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FIRELIFTLOBBY_RAW_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "varchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "MEP_Marking_for_Builders_Work",
						"type": "nvarchar"
					},
					{
						"name": "Cutting_and_Chasing_of_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Services_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Wall_MEP_Services_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Screed",
						"type": "nvarchar"
					},
					{
						"name": "Lift_Door_Installation_and_Jamb_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Beside_Lift_Door_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "Beside_Lift_Door_Plaster",
						"type": "nvarchar"
					},
					{
						"name": "MEP_High_Level_Works",
						"type": "nvarchar"
					},
					{
						"name": "FC_Framing",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Boarding_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "FC_Boarding",
						"type": "nvarchar"
					},
					{
						"name": "Joint_Taping_and_Sanding",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Stucco_1st_and_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Stucco_1st_and_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Wall_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Floor Tile",
						"type": "nvarchar"
					},
					{
						"name": "Door-Frame Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door-Architrave Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door-Shutter Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door-Ironmongery Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door-Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Grinding",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Bug_Fill",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_First_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Final_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Skirting",
						"type": "nvarchar"
					},
					{
						"name": "Grout",
						"type": "nvarchar"
					},
					{
						"name": "Signage",
						"type": "nvarchar"
					},
					{
						"name": "silicone",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_FIRELIFTLOBBY_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_GARBAGEROOM_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_garbageroom_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_GARBAGEROOM_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "GARBAGEROOM_MAP_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_GARBAGEROOM_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_GARBAGEROOM_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Outer Wall Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Garbage chute Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Piping Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Pressure test & Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Inner wall Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Marking for Builders Work",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cutting & Chasing of Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Services Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall MEP Services Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Cutting & Chipping",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Sleeve Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bore Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Under Screed Water Proofing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Framing Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "False Ceiling Framing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Boarding Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "False Ceiling Boarding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Under Tile Water Proofing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Threshold",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Floor Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grouting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Hopper Door",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Architrave Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Ironmongery Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Signage",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_garbageroom_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_GARBAGEROOM_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "GARBAGEROOM_RAW_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "varchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "Outer_Wall_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "Garbage_chute_Works",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Piping_Works",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Pressure_test_and_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "Inner_wall_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Marking_for_Builders_Work",
						"type": "nvarchar"
					},
					{
						"name": "Cutting_and_Chasing_of_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Services_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Wall_MEP_Services_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Core_Cutting_and_Chipping",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Sleeve_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Bore_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Under_Screed_Water_Proofing",
						"type": "nvarchar"
					},
					{
						"name": "Screed",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Tile",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Framing_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "False_Ceiling_Framing",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Boarding_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "False_Ceiling_Boarding",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Stucco_1st_and_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Under_Tile_Water_Proofing",
						"type": "nvarchar"
					},
					{
						"name": "Threshold",
						"type": "nvarchar"
					},
					{
						"name": "Floor_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Skirting",
						"type": "nvarchar"
					},
					{
						"name": "Grouting",
						"type": "nvarchar"
					},
					{
						"name": "Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Hopper_Door",
						"type": "nvarchar"
					},
					{
						"name": "Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Architrave_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Shutter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Ironmongery_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Silicone",
						"type": "nvarchar"
					},
					{
						"name": "Signage",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat_Paint",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_GARBAGEROOM_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KEEPOUTS_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PREDECESSOR_DATA",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ENGINEER_RESPONSIBLE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PREDECESSOR_DATA_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PREDECESSOR_DATA_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Predecessor_Activity_allowed_lag",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_keepouts_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KEEPOUTS_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Keepouts_Map_Id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Activity_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sbu_Id",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Sequence",
						"type": "nvarchar"
					},
					{
						"name": "Predecessor_Data",
						"type": "nvarchar"
					},
					{
						"name": "Engineer_Responsible",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Sequence_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Predecessor_Data_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Sequence_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Predecessor_Data_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Predecessor_Activity_Allowed_Lag",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_KEEPOUTS_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Flat No.",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Apartment Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WIR - Final Coat Paint Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WIR - Final Coat Paint Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "F6 / F7 Final Coat Paint - Stamp Closure Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "F6 / F7 Final Coat Paint - Stamp Closure Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Deep Cleaning Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Deep Cleaning Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Stamp Closing Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Stamp Closing Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP T&C Stamps Closure Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP T&C Stamps Closure Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "F7 Stamp Closure Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "F7 Stamp Closure Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP NOC in Draft / Assign to MEP QC Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP NOC in Draft / Assign to MEP QC Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil NOC in Draft / Assign to Civil QC Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil NOC in Draft / Assign to Civil QC Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP NOC Submission Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP NOC Submission Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CIVIL NOC Submission Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CIVIL NOC Submission Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Field report 1st inspection Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Field report 1st inspection Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Field Report assign to MEP Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Field Report assign to MEP Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Stamp Field report 1st inspection Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Stamp Field report 1st inspection Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Field report submission Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Field report submission Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil Field report 1st inspection Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil Field report 1st inspection Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil Field Report Submission Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil Field Report Submission Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SCL Keep-out Stamp (N1) -Into Review Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SCL Keep-out Stamp (N1) -Into Review Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PNCA Keep-out (N1) Into Pending Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PNCA Keep-out (N1) Into Pending Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "QT Inspection Keep-out Stamp (N1) Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "QT Inspection Keep-out Stamp (N1) Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_keepout_detailed_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "KEEPOUT_DETAILED_RAW_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "varchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "Flat_No",
						"type": "nvarchar"
					},
					{
						"name": "Apartment_Type",
						"type": "nvarchar"
					},
					{
						"name": "WIR_Final_Coat_Paint_Plan",
						"type": "nvarchar"
					},
					{
						"name": "WIR_Final_Coat_Paint_Actual",
						"type": "nvarchar"
					},
					{
						"name": "F6_F7_Final_Coat_Paint_Stamp_Closure_Plan",
						"type": "nvarchar"
					},
					{
						"name": "F6_F7_Final_Coat_Paint_Stamp_Closure_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Deep_Cleaning_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Deep_Cleaning_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Stamp_Closing_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Stamp_Closing_Actual",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures_Plan",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures_Actual",
						"type": "nvarchar"
					},
					{
						"name": "MEP_T_and_C_Stamps_Closure_Plan",
						"type": "nvarchar"
					},
					{
						"name": "MEP_T_and_C_Stamps_Closure_Actual",
						"type": "nvarchar"
					},
					{
						"name": "F7_Stamp_Closure_Plan",
						"type": "nvarchar"
					},
					{
						"name": "F7_Stamp_Closure_Actual",
						"type": "nvarchar"
					},
					{
						"name": "MEP_NOC_in_Draft_Assign_to_MEP_QC_Plan",
						"type": "nvarchar"
					},
					{
						"name": "MEP_NOC_in_Draft_Assign_to_MEP_QC_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Civil_NOC_in_Draft_Assign_to_Civil_QC_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Civil_NOC_in_Draft_Assign_to_Civil_QC_Actual",
						"type": "nvarchar"
					},
					{
						"name": "MEP_NOC_Submission_Plan",
						"type": "nvarchar"
					},
					{
						"name": "MEP_NOC_Submission_Actual",
						"type": "nvarchar"
					},
					{
						"name": "CIVIL_NOC_Submission_Plan",
						"type": "nvarchar"
					},
					{
						"name": "CIVIL_NOC_Submission_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Field_report_1st_inspection_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Field_report_1st_inspection_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Field_Report_assign_to_MEP_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Field_Report_assign_to_MEP_Actual",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Stamp_Field_report_1st_inspection_Plan",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Stamp_Field_report_1st_inspection_Actual",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Field_report_submission_Plan",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Field_report_submission_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Civil_Field_report_1st_inspection_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Civil_Field_report_1st_inspection_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Civil_Field_Report_Submission_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Civil_Field_Report_Submission_Actual",
						"type": "nvarchar"
					},
					{
						"name": "SCL_Keep_out_Stamp_N1_Into_Review_Plan",
						"type": "nvarchar"
					},
					{
						"name": "SCL_Keep_out_Stamp_N1_Into_Review_Actual",
						"type": "nvarchar"
					},
					{
						"name": "PNCA_Keep_out_N1_Into_Pending_Plan",
						"type": "nvarchar"
					},
					{
						"name": "PNCA_Keep_out_N1_Into_Pending_Actual",
						"type": "nvarchar"
					},
					{
						"name": "QT_Inspection_Keep_out_Stamp_N1_Plan",
						"type": "nvarchar"
					},
					{
						"name": "QT_Inspection_Keep_out_Stamp_N1_Actual",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_KEEPOUT_DETAILED_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KEEPOUT_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Category",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_keepout_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KEEPOUT_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Keepout_Map_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sbu_Short",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Sequence",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_KEEPOUT_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KEEPOUT_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Flat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat Paint - Dry Area",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat Paint - Wet Area",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Stamp",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bathroom Stamp - MEP (L8)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bathroom Stamp - Civil (L9)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Stamp - MEP (I8)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Stamp - Civil (I9)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Stamp - Civil (F7)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dry Area Stamp - MEP (F8)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP NOC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil NOC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Field Report 1ST Insp",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Field Report 2nd Insp",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Field Report 1st Insp",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Field Report 2nd Insp",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil Field Report 1st Insp",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Civil Field Report 2nd Insp",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SCL Signoff",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PNCA Signoff",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Keep Out (QT)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_keepout_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KEEPOUT_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Keepout_Raw_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_ID",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat_Paint_Dry_Area",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat_Paint_Wet_Area",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Stamp",
						"type": "nvarchar"
					},
					{
						"name": "Bathroom_Stamp_MEP_L8",
						"type": "nvarchar"
					},
					{
						"name": "Bathroom_Stamp_Civil_L9",
						"type": "nvarchar"
					},
					{
						"name": "Kitchen_Stamp_MEP_I8",
						"type": "nvarchar"
					},
					{
						"name": "Kitchen_Stamp_Civil_I9",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Stamp_Civil_F7",
						"type": "nvarchar"
					},
					{
						"name": "Dry_Area_Stamp_MEP_F8",
						"type": "nvarchar"
					},
					{
						"name": "MEP_NOC",
						"type": "nvarchar"
					},
					{
						"name": "Civil_NOC",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Field_Report_1ST_Insp",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Field_Report_2nd_Insp",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Field_Report_1st_Insp",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Field_Report_2nd_Insp",
						"type": "nvarchar"
					},
					{
						"name": "Civil_Field_Report_1st_Insp",
						"type": "nvarchar"
					},
					{
						"name": "Civil_Field_Report_2nd_Insp",
						"type": "nvarchar"
					},
					{
						"name": "SCL_Signoff",
						"type": "nvarchar"
					},
					{
						"name": "PNCA_Signoff",
						"type": "nvarchar"
					},
					{
						"name": "Keep_Out_QT",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_KEEPOUT_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KITCHENAREA_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_kitchenarea_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KITCHENAREA_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "KITCHENAREA_MAP_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Sequence",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_KITCHENAREA_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KITCHENAREA_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Flat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Area Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen / Utility Framing Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen / Utility Framing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen / Utility Boarding Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen / Utility Boarding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Wall Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Box Fixing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Cabinet",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Counter Plywood",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Counter Top",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Counter Top Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Cabinet Grouting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Cabinet Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Fixtures for Kitchen Cabinet",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kitchen Appliances",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_kitchenarea_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_KITCHENAREA_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Kitchenarea_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Id",
						"type": "varchar"
					},
					{
						"name": "Tower",
						"type": "varchar"
					},
					{
						"name": "Sbu_Id",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "Flat",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Area_Plaster",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Utility_Framing",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Utility_Framing_Clearance",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Utility_Boarding",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Utility_Boarding_Clearance",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Wall_Tile",
						"type": "varchar"
					},
					{
						"name": "MEP_Box_Fixing",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Cabinet",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Counter_Plywood",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Counter_Top",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Counter_Top_Skirting",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Cabinet_Grouting",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Cabinet_Silicone",
						"type": "varchar"
					},
					{
						"name": "MEP_Fixtures_For_Kitchen_Cabinet",
						"type": "varchar"
					},
					{
						"name": "Kitchen_Appliances",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_KITCHENAREA_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Group",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Activity",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual %",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_milestone_actuals_temp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Milestone_Actuals_Temp_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_ID",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Sbu_ID",
						"type": "nvarchar"
					},
					{
						"name": "Group",
						"type": "nvarchar"
					},
					{
						"name": "Activity",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Percentage",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_MILESTONE_ACTUALS_TEMP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_MILESTONE_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Sort_Group",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sort_Activity",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Group",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Activity",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Activity_New",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_milestone_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_MILESTONE_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Sort_Group",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sort_Activity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Group",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "Activity_New",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_MILESTONE_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_MILESTONE_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sl. No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Group",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Activity Description",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Baseline Start",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual / Forecast Start",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Baseline Finish",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual / Forecast Finish",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual / Forecast Mitigation Finish",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual %",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Critical",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_milestone"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_MILESTONE_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Milestone_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_ID",
						"type": "varchar"
					},
					{
						"name": "Tower",
						"type": "varchar"
					},
					{
						"name": "Sbu_ID",
						"type": "varchar"
					},
					{
						"name": "Sl_No",
						"type": "nvarchar"
					},
					{
						"name": "Group",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Description",
						"type": "nvarchar"
					},
					{
						"name": "Baseline_Start",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Forecast_Start",
						"type": "nvarchar"
					},
					{
						"name": "Baseline_Finish",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Forecast_Finish",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Forecast_Mitigation_Finish",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Percentage",
						"type": "nvarchar"
					},
					{
						"name": "Critical",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_MILESTONE_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_PROJECTION_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sl.No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Area",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Category",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Activity Description",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Projection for the month",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plan as on date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual as on date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Shortfall Reasons",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_projection_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_PROJECTION_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PROJECTION_RAW_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "varchar"
					},
					{
						"name": "tower",
						"type": "varchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Sl_No",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Description",
						"type": "varchar"
					},
					{
						"name": "Projection_for_the_month",
						"type": "nvarchar"
					},
					{
						"name": "Plan_as_on_date",
						"type": "nvarchar"
					},
					{
						"name": "Actual_as_on_date",
						"type": "nvarchar"
					},
					{
						"name": "Shortfall_Reasons",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_PROJECTION_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STAIRCASE_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "o_pln_staircase_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STAIRCASE_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "STAIRCASE_MAP_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_STAIRCASE_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STAIRCASE_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Stair Case No",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Conduit Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cutting and Chasing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Conduit Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grinding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "POP",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Medium Coat Ceiling Spray Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Two Coat Fine Ceiling Spray Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Texture",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Stucco banding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Pressurization Equipment",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sanding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Handrail Floor Mounted",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Handrail Wall Mounted",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Grinding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Bug Fill",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Base Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Final Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Threshold Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Architrave Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Ironmongery Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door - Silicone Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Signage",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Nosing Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Handrail Painting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Preparation for Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase Pressurization",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_staircase_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STAIRCASE_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "STAIRCASE_RAW_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Stair_Case_No",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Conduit_Marking",
						"type": "nvarchar"
					},
					{
						"name": "Cutting_and_Chasing",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Conduit_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Grinding",
						"type": "nvarchar"
					},
					{
						"name": "POP",
						"type": "nvarchar"
					},
					{
						"name": "Medium_Coat_Ceiling_Spray_Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Two_Coat_Fine_Ceiling_Spray_Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Texture",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Stucco_banding",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Stucco_(1st_and_2nd_Coat)",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Pressurization_Equipment",
						"type": "nvarchar"
					},
					{
						"name": "Sanding",
						"type": "nvarchar"
					},
					{
						"name": "Wall_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Handrail_Floor_Mounted",
						"type": "nvarchar"
					},
					{
						"name": "Handrail_Wall_Mounted",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Grinding",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Bug_Fill",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Base_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Final_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Threshold_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Architrave_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Shutter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Ironmongery_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Silicone_Works",
						"type": "nvarchar"
					},
					{
						"name": "Signage",
						"type": "nvarchar"
					},
					{
						"name": "Nosing_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Handrail_Painting",
						"type": "nvarchar"
					},
					{
						"name": "Preparation_for_Final_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_Pressurization",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_STAIRCASE_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STRUCTURES_POUR_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "ID_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "area",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sequence_of_Appearance",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Pour_count",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "type_of_pour",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_structures_pour_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STRUCTURES_POUR_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "STRUCTURES_POUR_MAP_ID_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "area",
						"type": "nvarchar"
					},
					{
						"name": "Sequence_of_Appearance",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Pour_count",
						"type": "nvarchar"
					},
					{
						"name": "type_of_pour",
						"type": "nvarchar"
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_STRUCTURES_POUR_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STRUCTURE_POURING_STG_SP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "STRUCTURE_POURING_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_1",
						"type": "nvarchar"
					},
					{
						"name": "Slab_1",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_1",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_2",
						"type": "nvarchar"
					},
					{
						"name": "Slab_2",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_2",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_3",
						"type": "nvarchar"
					},
					{
						"name": "Slab_3",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_3",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_4",
						"type": "nvarchar"
					},
					{
						"name": "Slab_4",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_4",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_5",
						"type": "nvarchar"
					},
					{
						"name": "Slab_5",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_5",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_6",
						"type": "nvarchar"
					},
					{
						"name": "Slab_6",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_6",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_7",
						"type": "nvarchar"
					},
					{
						"name": "Slab_7",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_7",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_8",
						"type": "nvarchar"
					},
					{
						"name": "Slab_8",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_8",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_9",
						"type": "nvarchar"
					},
					{
						"name": "Slab_9",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_9",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_10",
						"type": "nvarchar"
					},
					{
						"name": "Slab_10",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_10",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_11",
						"type": "nvarchar"
					},
					{
						"name": "Slab_11",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_11",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_12",
						"type": "nvarchar"
					},
					{
						"name": "Slab_12",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_13",
						"type": "nvarchar"
					},
					{
						"name": "Slab_13",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_13",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_14",
						"type": "nvarchar"
					},
					{
						"name": "Slab_14",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_14",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_15",
						"type": "nvarchar"
					},
					{
						"name": "Slab_15",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_15",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_16",
						"type": "nvarchar"
					},
					{
						"name": "Slab_16",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_16",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_17",
						"type": "nvarchar"
					},
					{
						"name": "Slab_17",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_17",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_18",
						"type": "nvarchar"
					},
					{
						"name": "Slab_18",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_18",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_19",
						"type": "nvarchar"
					},
					{
						"name": "Slab_19",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_19",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_20",
						"type": "nvarchar"
					},
					{
						"name": "Slab_20",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_20",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_21",
						"type": "nvarchar"
					},
					{
						"name": "Slab_21",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_21",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_22",
						"type": "nvarchar"
					},
					{
						"name": "Slab_22",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_22",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_23",
						"type": "nvarchar"
					},
					{
						"name": "Slab_23",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_23",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_24",
						"type": "nvarchar"
					},
					{
						"name": "Slab_24",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_24",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_25",
						"type": "nvarchar"
					},
					{
						"name": "Slab_25",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_25",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_26",
						"type": "nvarchar"
					},
					{
						"name": "Slab_26",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_26",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_27",
						"type": "nvarchar"
					},
					{
						"name": "Slab_27",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_27",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_28",
						"type": "nvarchar"
					},
					{
						"name": "Slab_28",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_28",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_29",
						"type": "nvarchar"
					},
					{
						"name": "Slab_29",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_29",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_30",
						"type": "nvarchar"
					},
					{
						"name": "Slab_30",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_12",
						"type": "nvarchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STRUCTURE_POURING_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 28",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 28",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 28",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 29",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 29",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 29",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Wall 30",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Slab 30",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase 12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_structure_pouring"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_STRUCTURE_POURING_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "STRUCTURE_POURING_id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_1",
						"type": "nvarchar"
					},
					{
						"name": "Slab_1",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_1",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_2",
						"type": "nvarchar"
					},
					{
						"name": "Slab_2",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_2",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_3",
						"type": "nvarchar"
					},
					{
						"name": "Slab_3",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_3",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_4",
						"type": "nvarchar"
					},
					{
						"name": "Slab_4",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_4",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_5",
						"type": "nvarchar"
					},
					{
						"name": "Slab_5",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_5",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_6",
						"type": "nvarchar"
					},
					{
						"name": "Slab_6",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_6",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_7",
						"type": "nvarchar"
					},
					{
						"name": "Slab_7",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_7",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_8",
						"type": "nvarchar"
					},
					{
						"name": "Slab_8",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_8",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_9",
						"type": "nvarchar"
					},
					{
						"name": "Slab_9",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_9",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_10",
						"type": "nvarchar"
					},
					{
						"name": "Slab_10",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_10",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_11",
						"type": "nvarchar"
					},
					{
						"name": "Slab_11",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_11",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_12",
						"type": "nvarchar"
					},
					{
						"name": "Slab_12",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_13",
						"type": "nvarchar"
					},
					{
						"name": "Slab_13",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_13",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_14",
						"type": "nvarchar"
					},
					{
						"name": "Slab_14",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_14",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_15",
						"type": "nvarchar"
					},
					{
						"name": "Slab_15",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_15",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_16",
						"type": "nvarchar"
					},
					{
						"name": "Slab_16",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_16",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_17",
						"type": "nvarchar"
					},
					{
						"name": "Slab_17",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_17",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_18",
						"type": "nvarchar"
					},
					{
						"name": "Slab_18",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_18",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_19",
						"type": "nvarchar"
					},
					{
						"name": "Slab_19",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_19",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_20",
						"type": "nvarchar"
					},
					{
						"name": "Slab_20",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_20",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_21",
						"type": "nvarchar"
					},
					{
						"name": "Slab_21",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_21",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_22",
						"type": "nvarchar"
					},
					{
						"name": "Slab_22",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_22",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_23",
						"type": "nvarchar"
					},
					{
						"name": "Slab_23",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_23",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_24",
						"type": "nvarchar"
					},
					{
						"name": "Slab_24",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_24",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_25",
						"type": "nvarchar"
					},
					{
						"name": "Slab_25",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_25",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_26",
						"type": "nvarchar"
					},
					{
						"name": "Slab_26",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_26",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_27",
						"type": "nvarchar"
					},
					{
						"name": "Slab_27",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_27",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_28",
						"type": "nvarchar"
					},
					{
						"name": "Slab_28",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_28",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_29",
						"type": "nvarchar"
					},
					{
						"name": "Slab_29",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_29",
						"type": "nvarchar"
					},
					{
						"name": "Core_Wall_30",
						"type": "nvarchar"
					},
					{
						"name": "Slab_30",
						"type": "nvarchar"
					},
					{
						"name": "Staircase_12",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_STRUCTURE_POURING_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_SUBCONTRACTOR_MANPOWER_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Contractor",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Activity",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SCL Engineer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PM & Engineers_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PM & Engineers_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PM & Engineers_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Supervisor_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Supervisor_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Supervisor_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Foreman / Staff_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Foreman / Staff_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Foreman / Staff_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Chargehand_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Chargehand_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Chargehand_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Carpenter_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Carpenter_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Carpenter_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Mason_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Mason_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Mason_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Steel Fitter_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Steel Fitter_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Steel Fitter_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Scaffolder_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Scaffolder_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Scaffolder_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Operator_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Operator_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Operator_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Security_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Security_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Security_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Helper_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Helper_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Helper_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Steel Fixers_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Steel Fixers_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Steel Fixers_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Masons_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Masons_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Masons_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Welder_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Welder_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Welder_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Rigger_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Rigger_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Rigger_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Painter_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Painter_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Painter_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tile Mason_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tile Mason_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tile Mason_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Gypsum Carpenter_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Gypsum Carpenter_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Gypsum Carpenter_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Joinery Carpenter_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Joinery Carpenter_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Joinery Carpenter_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed Mason_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed Mason_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed Mason_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Marble / Stone Mason_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Marble / Stone Mason_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Marble / Stone Mason_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electrician_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electrician_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electrician_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plumber_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plumber_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plumber_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HVAC_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HVAC_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HVAC_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Contractor_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Contractor_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Contractor_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Technicians_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Technicians_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Facade Technicians_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "POP Mason_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "POP Mason_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "POP Mason_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Joinery Polisher_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Joinery Polisher_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Joinery Polisher_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fitter_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fitter_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fitter_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Deep Cleaning_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Deep Cleaning_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Deep Cleaning_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OTHERS_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OTHERS_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OTHERS_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Total_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Total_N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Total_D/N",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sub Total_",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_subcontractor_manpower"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_SUBCONTRACTOR_MANPOWER_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Project",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Contractor",
						"type": "nvarchar"
					},
					{
						"name": "Activity",
						"type": "nvarchar"
					},
					{
						"name": "SCL_Engineer",
						"type": "nvarchar"
					},
					{
						"name": "PM_And_Engineers_D",
						"type": "nvarchar"
					},
					{
						"name": "PM_And_Engineers_N",
						"type": "nvarchar"
					},
					{
						"name": "PM_And_Engineers_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Supervisor_D",
						"type": "nvarchar"
					},
					{
						"name": "Supervisor_N",
						"type": "nvarchar"
					},
					{
						"name": "Supervisor_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Foreman_Staff_D",
						"type": "nvarchar"
					},
					{
						"name": "Foreman_Staff_N",
						"type": "nvarchar"
					},
					{
						"name": "Foreman_Staff_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Chargehand_D",
						"type": "nvarchar"
					},
					{
						"name": "Chargehand_N",
						"type": "nvarchar"
					},
					{
						"name": "Chargehand_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Carpenter_D",
						"type": "nvarchar"
					},
					{
						"name": "Carpenter_N",
						"type": "nvarchar"
					},
					{
						"name": "Carpenter_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Mason_D",
						"type": "nvarchar"
					},
					{
						"name": "Mason_N",
						"type": "nvarchar"
					},
					{
						"name": "Mason_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Steel_Fitter_D",
						"type": "nvarchar"
					},
					{
						"name": "Steel_Fitter_N",
						"type": "nvarchar"
					},
					{
						"name": "Steel_Fitter_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Scaffolder_D",
						"type": "nvarchar"
					},
					{
						"name": "Scaffolder_N",
						"type": "nvarchar"
					},
					{
						"name": "Scaffolder_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Operator_D",
						"type": "nvarchar"
					},
					{
						"name": "Operator_N",
						"type": "nvarchar"
					},
					{
						"name": "Operator_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Security_D",
						"type": "nvarchar"
					},
					{
						"name": "Security_N",
						"type": "nvarchar"
					},
					{
						"name": "Security_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Helper_D",
						"type": "nvarchar"
					},
					{
						"name": "Helper_N",
						"type": "nvarchar"
					},
					{
						"name": "Helper_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Steel_Fixers_D",
						"type": "nvarchar"
					},
					{
						"name": "Steel_Fixers_N",
						"type": "nvarchar"
					},
					{
						"name": "Steel_Fixers_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Masons_D",
						"type": "nvarchar"
					},
					{
						"name": "Masons_N",
						"type": "nvarchar"
					},
					{
						"name": "Masons_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Welder_D",
						"type": "nvarchar"
					},
					{
						"name": "Welder_N",
						"type": "nvarchar"
					},
					{
						"name": "Welder_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Rigger_D",
						"type": "nvarchar"
					},
					{
						"name": "Rigger_N",
						"type": "nvarchar"
					},
					{
						"name": "Rigger_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Painter_D",
						"type": "nvarchar"
					},
					{
						"name": "Painter_N",
						"type": "nvarchar"
					},
					{
						"name": "Painter_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Tile_Mason_D",
						"type": "nvarchar"
					},
					{
						"name": "Tile_Mason_N",
						"type": "nvarchar"
					},
					{
						"name": "Tile_Mason_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Gypsum_Carpenter_D",
						"type": "nvarchar"
					},
					{
						"name": "Gypsum_Carpenter_N",
						"type": "nvarchar"
					},
					{
						"name": "Gypsum_Carpenter_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Joinery_Carpenter_D",
						"type": "nvarchar"
					},
					{
						"name": "Joinery_Carpenter_N",
						"type": "nvarchar"
					},
					{
						"name": "Joinery_Carpenter_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Screed_Mason_D",
						"type": "nvarchar"
					},
					{
						"name": "Screed_Mason_N",
						"type": "nvarchar"
					},
					{
						"name": "Screed_Mason_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Marble_Stone_Mason_D",
						"type": "nvarchar"
					},
					{
						"name": "Marble_Stone_Mason_N",
						"type": "nvarchar"
					},
					{
						"name": "Marble_Stone_Mason_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Electrician_D",
						"type": "nvarchar"
					},
					{
						"name": "Electrician_N",
						"type": "nvarchar"
					},
					{
						"name": "Electrician_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Plumber_D",
						"type": "nvarchar"
					},
					{
						"name": "Plumber_N",
						"type": "nvarchar"
					},
					{
						"name": "Plumber_D_N",
						"type": "nvarchar"
					},
					{
						"name": "HVAC_D",
						"type": "nvarchar"
					},
					{
						"name": "HVAC_N",
						"type": "nvarchar"
					},
					{
						"name": "HVAC_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Contractor_D",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Contractor_N",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Contractor_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Technicians_D",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Technicians_N",
						"type": "nvarchar"
					},
					{
						"name": "Facade_Technicians_D_N",
						"type": "nvarchar"
					},
					{
						"name": "POP_Mason_D",
						"type": "nvarchar"
					},
					{
						"name": "POP_Mason_N",
						"type": "nvarchar"
					},
					{
						"name": "POP_Mason_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Joinery_Polisher_D",
						"type": "nvarchar"
					},
					{
						"name": "Joinery_Polisher_N",
						"type": "nvarchar"
					},
					{
						"name": "Joinery_Polisher_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Fitter_D",
						"type": "nvarchar"
					},
					{
						"name": "Fitter_N",
						"type": "nvarchar"
					},
					{
						"name": "Fitter_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Deep_Cleaning_D",
						"type": "nvarchar"
					},
					{
						"name": "Deep_Cleaning_N",
						"type": "nvarchar"
					},
					{
						"name": "Deep_Cleaning_D_N",
						"type": "nvarchar"
					},
					{
						"name": "OTHERS_D",
						"type": "nvarchar"
					},
					{
						"name": "OTHERS_N",
						"type": "nvarchar"
					},
					{
						"name": "OTHERS_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Total_D",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Total_N",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Total_D_N",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Total",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_SUBCONTRACTOR_MANPOWER_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_TELEPHONEROOM_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_telephoneroom_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_TELEPHONEROOM_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TELEPHONEROOM_MAP_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar"
					},
					{
						"name": "SBU_ID",
						"type": "varchar"
					},
					{
						"name": "CATEGORY",
						"type": "varchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_TELEPHONEROOM_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_TELEPHONEROOM_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork Layout",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Marking for Builders Work",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cutting & Chasing of Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Services Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall MEP Services Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Installation of cable tray and trunking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Installation of Panels",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cable laying and glanding works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Dressing and termination of SMDB",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bus bar with Tap off Box completion",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Sealant",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Grinding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Bug Fill",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy First Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Final Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Floor Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "POP",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grout",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Threshold",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Architrave Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Ironmongery Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Signage",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL26",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL27",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_telephoneroom_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_TELEPHONEROOM_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TELEPHONEROOM_RAW_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork_Layout",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Marking_for_Builders_Work",
						"type": "nvarchar"
					},
					{
						"name": "Cutting_&_Chasing_of_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Services_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Wall_MEP_Services_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Screed",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Stucco_(1st_and_2nd_Coat)",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Stucco_(1st_and_2nd_Coat)",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Wall_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Installation_of_cable_tray_and_trunking",
						"type": "nvarchar"
					},
					{
						"name": "Installation_of_Panels",
						"type": "nvarchar"
					},
					{
						"name": "Cable_laying_and_glanding_works",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Sealant",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Grinding",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Bug_Fill",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_First_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Final_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Floor_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Skirting",
						"type": "nvarchar"
					},
					{
						"name": "POP",
						"type": "nvarchar"
					},
					{
						"name": "Grout",
						"type": "nvarchar"
					},
					{
						"name": "Threshold",
						"type": "nvarchar"
					},
					{
						"name": "Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Architrave_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Shutter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Ironmongery_Installation",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat_Paint",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_TELEPHONEROOM_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_TOWER_PODIUM_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Project",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Area",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_tower_podium_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_TOWER_PODIUM_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Project",
						"type": "nvarchar"
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_TOWER_PODIUM_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_WATERROOM_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_waterroom_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_WATERROOM_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "O_PLN_WATERROOM_MAP_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar"
					},
					{
						"name": "SBU_ID",
						"type": "varchar"
					},
					{
						"name": "CATEGORY",
						"type": "varchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_WATERROOM_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_WATERROOM_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork Layout",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Marking for Builders Work",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cutting & Chasing of Blockwork",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Services Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall MEP Services Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plaster",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Core Cutting & Chipping",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Sleeve Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bore Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Installation of PPR pipes",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Manifold & Valve installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PRV installation & connections",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Testing of Pipes",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire Sealant Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Framing Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "False Ceiling Framing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Boarding Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "False Ceiling Boarding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Stucco (1st and 2nd Coat)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Threshold",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Architrave Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Door-Ironmongery Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Grinding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Bug Fill",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy First Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Epoxy Final Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Skirting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "POP Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grouting",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Silicone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PSV Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Water Meter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Final Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_waterroom_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_WATERROOM_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "WATERROOM_RAW_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "sbu_id",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork_Layout",
						"type": "nvarchar"
					},
					{
						"name": "Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Marking_for_Builders_Work",
						"type": "nvarchar"
					},
					{
						"name": "Cutting_and_Chasing_of_Blockwork",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Services_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Wall_MEP_Services_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Plaster",
						"type": "nvarchar"
					},
					{
						"name": "Core_Cutting_and_Chipping",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Sleeve_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Bore_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Screed",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Wall_Stucco_1st_and_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Wall_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Installation_of_PPR_pipes",
						"type": "nvarchar"
					},
					{
						"name": "Manifold_and_Valve_installation",
						"type": "nvarchar"
					},
					{
						"name": "PRV_installation_and_connections",
						"type": "nvarchar"
					},
					{
						"name": "Testing_of_Pipes",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Sealant_Works",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Framing_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "False_Ceiling_Framing",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Boarding_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "False_Ceiling_Boarding",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Stucco_1st_and_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "Threshold",
						"type": "nvarchar"
					},
					{
						"name": "Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Architrave_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Shutter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Ironmongery_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Grinding",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Bug_Fill",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_First_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Epoxy_Final_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Skirting",
						"type": "nvarchar"
					},
					{
						"name": "POP_Works",
						"type": "nvarchar"
					},
					{
						"name": "Grouting",
						"type": "nvarchar"
					},
					{
						"name": "Silicone",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "PSV_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Water_Meter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Final_Coat_Paint",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_WATERROOM_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_WETAREA_MAP_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_SHORT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CATEGORY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_wetarea_map"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_WETAREA_MAP_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "WETAREA_MAP_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_SHORT",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_SEQUENCE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_WETAREA_MAP_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_WETAREA_RAW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Level",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Flat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Plastering Clearance with 1 Mtr Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area Tile Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Marking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area Cutting & Chasing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Pex pipe installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Re packing of MEP Services",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Pipe installation - Borepacking",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area Bore Packing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Cistern installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Drywall framing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Pex Elbow & Connections",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bottom Boarding Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bottom boarding",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Under Screed Waterproofing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area Screed",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ledge Wall Full Board Closure Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP HL Water Supply & Drainage",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP HL Ducting & FCU Works",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP HL Electrical Services Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP HL Works & Testing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP HL Packing Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Packing for all builders work opening",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area MEP H/L Fire Sealent & Framing Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet area Wall Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area FC Framing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area MEP H/L Boarding Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FC Boarding & Joint Taping",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Paint Primer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ceiling Paint Stucco 1st Coat & 2nd Coat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area Ceiling First Coat Paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Grill & Diffuser Installtion",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Shower Threshold",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Linear Drain Supply",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Linear Drain Fixing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Under Tile Waterproofing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bathroom Door Threshold",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area Floor Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wall tile bottom Tile",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grouting - Wall & Floor",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Silicone - Wall & Floor Corners",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Shower Partition - U channel",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Shower Partition - Glass",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Accessories & Silicon",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bathroom Door - Frame Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bathroom Door - Architrave Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bathroom Door - Shutter Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bathroom Door - Ironmongery Installation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Vanity Cabinet",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Vanity Cabinet Counter top",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Final Fixtures (Sanitary ,CP fittings & Lights,WB)",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MEP Ledge Wall Clearance",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ledge Wall Closing",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Silicone around MEP Fixtures",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Wet Area Final Coat paint",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL11",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL12",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL13",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL14",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL15",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL16",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL17",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL18",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL19",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL20",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL21",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL22",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL23",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL24",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TEMPCOL25",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_wetarea_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_PLN_WETAREA_RAW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "WetArea_Raw_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "nvarchar"
					},
					{
						"name": "Plastering_Clearance_with_1_Mtr_Marking",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_Tile_Marking",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Marking",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_Cutting_And_Chasing",
						"type": "nvarchar"
					},
					{
						"name": "Pex_pipe_installation",
						"type": "nvarchar"
					},
					{
						"name": "Re_packing_of_MEP_Services",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Pipe_installation_Borepacking",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_Bore_Packing",
						"type": "nvarchar"
					},
					{
						"name": "Cistern_installation",
						"type": "nvarchar"
					},
					{
						"name": "Drywall_framing",
						"type": "nvarchar"
					},
					{
						"name": "Pex_Elbow_Connections",
						"type": "nvarchar"
					},
					{
						"name": "Bottom_Boarding_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "Bottom_boarding",
						"type": "nvarchar"
					},
					{
						"name": "Under_Screed_Waterproofing",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_Screed",
						"type": "nvarchar"
					},
					{
						"name": "Ledge_Wall_Full_Board_Closure_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "MEP_HL_Water_Supply_Drainage",
						"type": "nvarchar"
					},
					{
						"name": "MEP_HL_Ducting_FCU_Works",
						"type": "nvarchar"
					},
					{
						"name": "MEP_HL_Electrical_Services_Installation",
						"type": "nvarchar"
					},
					{
						"name": "MEP_HL_Works_Testing",
						"type": "nvarchar"
					},
					{
						"name": "MEP_HL_Packing_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "Packing_for_all_builders_work_opening",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_MEP_H_L_Fire_Sealent_Framing_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "Wet_area_Wall_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_FC_Framing",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_MEP_H_L_Boarding_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "FC_Boarding_Joint_Taping",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Paint_Primer",
						"type": "nvarchar"
					},
					{
						"name": "Ceiling_Paint_Stucco_1st_Coat_2nd_Coat",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_Ceiling_First_Coat_Paint",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Grill_Diffuser_Installtion",
						"type": "nvarchar"
					},
					{
						"name": "Shower_Threshold",
						"type": "nvarchar"
					},
					{
						"name": "Linear_Drain_Supply",
						"type": "nvarchar"
					},
					{
						"name": "Linear_Drain_Fixing",
						"type": "nvarchar"
					},
					{
						"name": "Under_Tile_Waterproofing",
						"type": "nvarchar"
					},
					{
						"name": "Bathroom_Door_Threshold",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_Floor_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Wall_tile_bottom_Tile",
						"type": "nvarchar"
					},
					{
						"name": "Grouting_Wall_Floor",
						"type": "nvarchar"
					},
					{
						"name": "Silicone_Wall_Floor_Corners",
						"type": "nvarchar"
					},
					{
						"name": "Shower_Partition_U_channel",
						"type": "nvarchar"
					},
					{
						"name": "Shower_Partition_Glass",
						"type": "nvarchar"
					},
					{
						"name": "Accessories_Silicon",
						"type": "nvarchar"
					},
					{
						"name": "Bathroom_Door_Frame_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Bathroom_Door_Architrave_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Bathroom_Door_Shutter_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Bathroom_Door_Ironmongery_Installation",
						"type": "nvarchar"
					},
					{
						"name": "Vanity_Cabinet",
						"type": "nvarchar"
					},
					{
						"name": "Vanity_Cabinet_Counter_top",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Final_Fixtures_Sanitary_CP_fittings_Lights_WB",
						"type": "nvarchar"
					},
					{
						"name": "MEP_Ledge_Wall_Clearance",
						"type": "nvarchar"
					},
					{
						"name": "Ledge_Wall_Closing",
						"type": "nvarchar"
					},
					{
						"name": "Silicone_around_MEP_Fixtures",
						"type": "nvarchar"
					},
					{
						"name": "Wet_Area_Final_Coat_paint",
						"type": "nvarchar"
					},
					{
						"name": "Upload_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_WETAREA_RAW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_SBU_MAPPING_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "mapping_id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_identifier",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_shorts",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_description",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_sbu_mapping"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_O_SBU_MAPPING_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SBU_MAPPING_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mapping_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sbu_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Sbu_Shorts",
						"type": "nvarchar"
					},
					{
						"name": "Sbu_Description",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_SBU_MAPPING_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_PLANGRID_MAPPING_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Act_Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Project_Cluster",
						"type": "nvarchar"
					},
					{
						"name": "Project_Status",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PG_PLANGRID_MAPPING_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_PLANGRID_PROJECT_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_PG_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Project_Short_Code",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Plangrid_Project"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_PG_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_PLANGRID_PROJECT_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Project_Short_Code",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "PG_PLANGRID_PROJECT_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_PROJECT_MASTER_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_PG_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Project_id",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Project_Created_ON",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Project_Master"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_PG_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_PROJECT_MASTER_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_id",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Project_Created_ON",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Status",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PG_PROJECT_MASTER_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Plangrid_Cluster_Mapping_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_PG_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Stamp_First",
						"type": "nvarchar"
					},
					{
						"name": "Stamp",
						"type": "nvarchar"
					},
					{
						"name": "Cluster_Short",
						"type": "nvarchar"
					},
					{
						"name": "Cluster_Full",
						"type": "nvarchar"
					},
					{
						"name": "Works",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Approval",
						"type": "nvarchar"
					},
					{
						"name": "Clearance",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Plangrid_Cluster_Mapping"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_PG_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Plangrid_Cluster_Mapping_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Stamp_First",
						"type": "nvarchar"
					},
					{
						"name": "Stamp",
						"type": "nvarchar"
					},
					{
						"name": "Cluster_Short",
						"type": "nvarchar"
					},
					{
						"name": "Cluster_Full",
						"type": "nvarchar"
					},
					{
						"name": "Works",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Approval",
						"type": "nvarchar"
					},
					{
						"name": "Clearance",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "PG_Plangrid_Cluster_Mapping_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Plangrid_Cluster_Mapping_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stamp_First",
						"type": "nvarchar"
					},
					{
						"name": "Stamp",
						"type": "nvarchar"
					},
					{
						"name": "Cluster_Short",
						"type": "nvarchar"
					},
					{
						"name": "Cluster_Full",
						"type": "nvarchar"
					},
					{
						"name": "Works",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Approval",
						"type": "nvarchar"
					},
					{
						"name": "Clearance",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PG_Plangrid_Cluster_Mapping_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Plangrid_Mapping_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_PG_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Act_Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Project_Cluster",
						"type": "nvarchar"
					},
					{
						"name": "Project_Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Plangrid_Mapping"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_PG_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Plangrid_Mapping_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Act_Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Project_Cluster",
						"type": "nvarchar"
					},
					{
						"name": "Project_Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "PG_Plangrid_Mapping_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Plangrid_Project_DIM_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_PG_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Project_Short_Code",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Plangrid_Project"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_PG_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Plangrid_Project_DIM_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Short_Code",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PG_Plangrid_Project_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Project_Master_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_PG_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Project_id",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Project_Created_ON",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Project_Master"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_PG_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Project_Master_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Project_id",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Project_Created_ON",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "PG_Project_Master_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_TASK_REPORT_FACT_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Task_ID",
						"type": "nvarchar"
					},
					{
						"name": "Stamp",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Sheet",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "Root_Cause",
						"type": "nvarchar"
					},
					{
						"name": "Created_By",
						"type": "nvarchar"
					},
					{
						"name": "Assigned_To",
						"type": "nvarchar"
					},
					{
						"name": "Watchers",
						"type": "nvarchar"
					},
					{
						"name": "Photos",
						"type": "nvarchar"
					},
					{
						"name": "Archived",
						"type": "nvarchar"
					},
					{
						"name": "Start_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Due_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Cost_Impact",
						"type": "nvarchar"
					},
					{
						"name": "Cost_Impact_Amount",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Schedule_Impact",
						"type": "nvarchar"
					},
					{
						"name": "Schedule_Impact_Amount_Days",
						"type": "nvarchar"
					},
					{
						"name": "Last_Updated_On",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Closed_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Task_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Task_Ref_No",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PG_TASK_REPORT_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Task_Report_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_PG_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Project_ID",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Task_ID",
						"type": "nvarchar"
					},
					{
						"name": "Stamp",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Sheet",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "Root_Cause",
						"type": "nvarchar"
					},
					{
						"name": "Created_By",
						"type": "nvarchar"
					},
					{
						"name": "Assigned_To",
						"type": "nvarchar"
					},
					{
						"name": "Watchers",
						"type": "nvarchar"
					},
					{
						"name": "Photos",
						"type": "nvarchar"
					},
					{
						"name": "Archived",
						"type": "nvarchar"
					},
					{
						"name": "Start_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Due_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Cost_Impact",
						"type": "nvarchar"
					},
					{
						"name": "Cost_Impact_Amount",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Schedule_Impact",
						"type": "nvarchar"
					},
					{
						"name": "Schedule_Impact_Amount_Days",
						"type": "nvarchar"
					},
					{
						"name": "Last_Updated_On",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Closed_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Task_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Task_Ref_No",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Task_Report"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_PG_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PG_Task_Report_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Project_ID",
						"type": "nvarchar"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "Task_ID",
						"type": "nvarchar"
					},
					{
						"name": "Stamp",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Sheet",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "Root_Cause",
						"type": "nvarchar"
					},
					{
						"name": "Created_By",
						"type": "nvarchar"
					},
					{
						"name": "Assigned_To",
						"type": "nvarchar"
					},
					{
						"name": "Watchers",
						"type": "nvarchar"
					},
					{
						"name": "Photos",
						"type": "nvarchar"
					},
					{
						"name": "Archived",
						"type": "nvarchar"
					},
					{
						"name": "Start_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Due_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Cost_Impact",
						"type": "nvarchar"
					},
					{
						"name": "Cost_Impact_Amount",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Schedule_Impact",
						"type": "nvarchar"
					},
					{
						"name": "Schedule_Impact_Amount_Days",
						"type": "nvarchar"
					},
					{
						"name": "Last_Updated_On",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Closed_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Task_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Task_Ref_No",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "PG_Task_Report_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_BALCONYAREA_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_BALCONYAREA_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_BUSINESS_PLAN_1_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_date",
						"type": "date"
					},
					{
						"name": "Project_Name",
						"type": "nvarchar"
					},
					{
						"name": "project_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "SBU_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Month",
						"type": "nvarchar"
					},
					{
						"name": "value",
						"type": "nvarchar"
					},
					{
						"name": "DENSE_RANK",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "sbu_sort",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "month_sort",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "year_sort",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Cummulative",
						"type": "float",
						"precision": 15
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_BUSINESS_PLAN_1_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_BUSINESS_PLAN_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "project_id",
						"type": "varchar"
					},
					{
						"name": "Sbu_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "SBU",
						"type": "varchar"
					},
					{
						"name": "SBU_Custom_Sort",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Month",
						"type": "varchar"
					},
					{
						"name": "ORDER_Month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "value",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Cummulative",
						"type": "decimal",
						"precision": 32,
						"scale": 0
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_BUSINESS_PLAN_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_CORRIDOR_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Scilicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "decimal",
						"precision": 14,
						"scale": 4
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Category_Sort",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_CORRIDOR_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_CRITICAL_ISSUE_TRACKER_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Reference_Number",
						"type": "nvarchar"
					},
					{
						"name": "PR_PO_Other_Ref_No",
						"type": "nvarchar"
					},
					{
						"name": "Pending_With",
						"type": "nvarchar"
					},
					{
						"name": "Issue_Description",
						"type": "nvarchar"
					},
					{
						"name": "Current_Status",
						"type": "nvarchar"
					},
					{
						"name": "Impact_On",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "Project",
						"type": "nvarchar"
					},
					{
						"name": "Raised_On",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Closure_Date",
						"type": "nvarchar"
					},
					{
						"name": "Target_Closure_Date",
						"type": "nvarchar"
					},
					{
						"name": "Ageing",
						"type": "nvarchar"
					},
					{
						"name": "Agetub",
						"type": "nvarchar"
					},
					{
						"name": "Agetub_sort",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_CRITICAL_ISSUE_TRACKER_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_DRYAREA_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "nvarchar"
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_DRYAREA_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_ELECTRICROOM_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Indentifer",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Update_date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_ELECTRICROOM_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_ENGINEERING_DRAWING_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Villa_Type",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Drawing_Number",
						"type": "nvarchar"
					},
					{
						"name": "Drawing_Title",
						"type": "nvarchar"
					},
					{
						"name": "Scheduled_Date",
						"type": "nvarchar"
					},
					{
						"name": "PNCA_commitment",
						"type": "nvarchar"
					},
					{
						"name": "R0",
						"type": "nvarchar"
					},
					{
						"name": "R0_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R1",
						"type": "nvarchar"
					},
					{
						"name": "R1_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R2",
						"type": "nvarchar"
					},
					{
						"name": "R2_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R3",
						"type": "nvarchar"
					},
					{
						"name": "R3_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R4",
						"type": "nvarchar"
					},
					{
						"name": "R4_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R5",
						"type": "nvarchar"
					},
					{
						"name": "R5_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R6",
						"type": "nvarchar"
					},
					{
						"name": "R6_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R7",
						"type": "nvarchar"
					},
					{
						"name": "R7_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R8",
						"type": "nvarchar"
					},
					{
						"name": "R8_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R9",
						"type": "nvarchar"
					},
					{
						"name": "R9_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R10",
						"type": "nvarchar"
					},
					{
						"name": "R10_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R11",
						"type": "nvarchar"
					},
					{
						"name": "R11_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R12",
						"type": "nvarchar"
					},
					{
						"name": "R12_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R13",
						"type": "nvarchar"
					},
					{
						"name": "R13_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R14",
						"type": "nvarchar"
					},
					{
						"name": "R14_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R15",
						"type": "nvarchar"
					},
					{
						"name": "R15_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R16",
						"type": "nvarchar"
					},
					{
						"name": "R16_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R17",
						"type": "nvarchar"
					},
					{
						"name": "R17_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R18",
						"type": "nvarchar"
					},
					{
						"name": "R18_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R19",
						"type": "nvarchar"
					},
					{
						"name": "R19_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R20",
						"type": "nvarchar"
					},
					{
						"name": "R20_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R21",
						"type": "nvarchar"
					},
					{
						"name": "R21_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R22",
						"type": "nvarchar"
					},
					{
						"name": "R22_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R23",
						"type": "nvarchar"
					},
					{
						"name": "R23_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R24",
						"type": "nvarchar"
					},
					{
						"name": "R24_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "R25",
						"type": "nvarchar"
					},
					{
						"name": "R25_Trans_Id",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_ENGINEERING_DRAWING_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_FIRELIFTLOBBY_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_FIRELIFTLOBBY_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_FLATFINISHES_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "project_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Level_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "value",
						"type": "decimal",
						"precision": 14,
						"scale": 4
					},
					{
						"name": "Type_of_work",
						"type": "varchar"
					},
					{
						"name": "Category",
						"type": "varchar"
					},
					{
						"name": "sort_type_of_work",
						"type": "varchar"
					},
					{
						"name": "Category_Sort",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_FLATFINISHES_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_GARBAGEROOM_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_GARBAGEROOM_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_KEEPOUT2_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "project_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat_No",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Apartment_Type",
						"type": "nvarchar"
					},
					{
						"name": "ACTIVITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Engineer_Responsible",
						"type": "nvarchar"
					},
					{
						"name": "Activity",
						"type": "nvarchar"
					},
					{
						"name": "delay_pln",
						"type": "date"
					},
					{
						"name": "Plan",
						"type": "date"
					},
					{
						"name": "Count_Pln",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Predecessor_Plan",
						"type": "date"
					},
					{
						"name": "Predecessor_Plan_Work_Front",
						"type": "date"
					},
					{
						"name": "Predecessor",
						"type": "nvarchar"
					},
					{
						"name": "delay_act",
						"type": "date"
					},
					{
						"name": "Actual",
						"type": "date"
					},
					{
						"name": "Count_Act",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Predecessor_Actual",
						"type": "date"
					},
					{
						"name": "Predecessor_Actual_Work_Front",
						"type": "date"
					},
					{
						"name": "SLA_Planned",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SLA_Actual",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SLA",
						"type": "nvarchar"
					},
					{
						"name": "Actual_SLA_Title",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_KEEPOUT_2_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_KEEPOUT_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Sbu_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Real_Value",
						"type": "date"
					},
					{
						"name": "Value",
						"type": "decimal",
						"precision": 14,
						"scale": 4
					},
					{
						"name": "CATEGORY_SORT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_KEEPOUT_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_KITCHENAREA_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_KITCHENAREA_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_LEVEL_MAP_ALL_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_Map_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_LEVEL_MAP_ALL_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_MANPOWER_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SL_NO",
						"type": "nvarchar"
					},
					{
						"name": "EMP_ID_NO",
						"type": "nvarchar"
					},
					{
						"name": "TECHNICIAN_NAME",
						"type": "nvarchar"
					},
					{
						"name": "ACTUAL_DOJ",
						"type": "nvarchar"
					},
					{
						"name": "TRADE_AS_PER_ADMIN",
						"type": "nvarchar"
					},
					{
						"name": "TRADE_GROUP",
						"type": "nvarchar"
					},
					{
						"name": "WORK_STATUS_COST_HEAD",
						"type": "nvarchar"
					},
					{
						"name": "DIVISION",
						"type": "nvarchar"
					},
					{
						"name": "UNIT",
						"type": "nvarchar"
					},
					{
						"name": "WORK_STATUS",
						"type": "nvarchar"
					},
					{
						"name": "SHIFT",
						"type": "nvarchar"
					},
					{
						"name": "COMPANY",
						"type": "nvarchar"
					},
					{
						"name": "SOURCE",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "Emp_ID",
						"type": "nvarchar"
					},
					{
						"name": "Login_Time",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_MANPOWER_MERGE_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_MILESTONE_ACTUALS_TEMP_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Milestone_Actuals_Temp_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Group",
						"type": "nvarchar"
					},
					{
						"name": "Activity",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Percentage",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_MILESTONE_ACTUALS_TEMP_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_PROCUREMENT_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SBU",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Classification",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Description",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Category",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Issuance of Drawings_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Issuance of Drawings_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PR_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PR_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Vendor Finalization_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Vendor Finalization_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Prequalification Submission_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Prequalification Submission_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Prequalification Approval_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Prequalification Approval_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Release of contract documents_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Release of contract documents_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Drawing/Technical Submission_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Drawing/Technical Submission_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Drawing/Technical Submission Approval_Plan",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Drawing/Technical Submission Approval_Actual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Required at site by",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual delivery at site",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol3",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol4",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol5",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol6",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol7",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol8",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol9",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tempcol10",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "o_pln_procurement_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_PROCUREMENT_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Procurement_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_ID",
						"type": "varchar"
					},
					{
						"name": "Tower",
						"type": "varchar"
					},
					{
						"name": "SBU_ID",
						"type": "varchar"
					},
					{
						"name": "SBU",
						"type": "varchar"
					},
					{
						"name": "Classification",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Category",
						"type": "varchar"
					},
					{
						"name": "Issuance_of_Drawings_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Issuance_of_Drawings_Actual",
						"type": "nvarchar"
					},
					{
						"name": "PR_Plan",
						"type": "nvarchar"
					},
					{
						"name": "PR_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Vendor_Finalization_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Vendor_Finalization_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Prequalification_Submission_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Prequalification_Submission_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Prequalification_Approval_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Prequalification_Approval_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Release_of_Contract_documents_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Release_of_Contract_documents_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Drawing_Technical_Submission_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Drawing_Technical_Submission_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Drawing_Technical_Submission_Approval_Plan",
						"type": "nvarchar"
					},
					{
						"name": "Drawing_Technical_Submission_Approval_Actual",
						"type": "nvarchar"
					},
					{
						"name": "Required_at_site_by",
						"type": "nvarchar"
					},
					{
						"name": "Actual_Delivery_at_site",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_PROCUREMENT_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_PROCUREMENT_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "nvarchar"
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Classification",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Issuance_of_Drawings_Plan",
						"type": "date"
					},
					{
						"name": "Issuance_of_Drawings_Actual",
						"type": "date"
					},
					{
						"name": "PR_Plan",
						"type": "date"
					},
					{
						"name": "PR_Actual",
						"type": "date"
					},
					{
						"name": "Vendor_Finalization_Plan",
						"type": "date"
					},
					{
						"name": "Vendor_Finalization_Actual",
						"type": "date"
					},
					{
						"name": "Required_at_site_by",
						"type": "date"
					},
					{
						"name": "Actual_delivery_at_site",
						"type": "date"
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_PROCUREMENT_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_PROJECTION_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Description",
						"type": "nvarchar"
					},
					{
						"name": "Projection_for_the_month",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Yesterday",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Plan_Yesterday",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Plan_as_on_date",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Actual_Yesterday",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Actual_as_on_date",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Shortfall_Reasons",
						"type": "nvarchar"
					},
					{
						"name": "SBU_Custom_Sort",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Achived",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Achived_90",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Update_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_PROJECTION_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_PROJECTS_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Sort_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project_Identifier",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FLAT_COUNT",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project_Short",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total_Floors",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total_Podiums",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total_Typical_Floor",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Typical_Floor_Slab",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Podium_Slab",
						"type": "int",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "projects"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_PROJECTS_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Project_Short",
						"type": "nvarchar"
					},
					{
						"name": "Flat_Count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Floors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Podiums",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Typical_Floor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Typical_Floor_Slab",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Podium_Slab",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "PROJECTS_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_PROJECTS_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Project_Short",
						"type": "nvarchar"
					},
					{
						"name": "Flat_Count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Floors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Podiums",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Typical_Floor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Typical_Floor_Slab",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Podium_Slab",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_PROJECTS_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_PROJECT_PROGRESS_SUMMARY_FACT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "Project",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_ID",
						"type": "nvarchar"
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Progress_Type",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Activity_Sequence",
						"type": "nvarchar"
					},
					{
						"name": "Flats",
						"type": "char"
					},
					{
						"name": "Total_Floors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Scheduled_Activities",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sum_Achived",
						"type": "decimal",
						"precision": 36,
						"scale": 4
					},
					{
						"name": "Count_Achived",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Average_Achived",
						"type": "decimal",
						"precision": 38,
						"scale": 3
					},
					{
						"name": "Completed",
						"type": "decimal",
						"precision": 23,
						"scale": 0
					},
					{
						"name": "In_Progress",
						"type": "decimal",
						"precision": 38,
						"scale": 3
					},
					{
						"name": "Yet_To_Start",
						"type": "decimal",
						"precision": 38,
						"scale": 3
					},
					{
						"name": "Yet_To_Start_Manual",
						"type": "decimal",
						"precision": 25,
						"scale": 0
					},
					{
						"name": "Sort_Main",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_PROJECT_PROGRESS_SUMMARY_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_SBU_MAPPING_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_Map_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_Shorts",
						"type": "nvarchar"
					},
					{
						"name": "SBU_Description",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_SBU_MAPPING_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_SERVICEROOMS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Project_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sbu_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Value",
						"type": "decimal",
						"precision": 14,
						"scale": 4
					},
					{
						"name": "Activity_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Category_Map",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Load_Date_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_SERVICEROOMS_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_STAIRCASE_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Stair_Case_No",
						"type": "nvarchar"
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Category_Sort",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_STAIRCASE_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_STRACTURE_FACT_TEMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Project_Id",
						"type": "nvarchar"
					},
					{
						"name": "Level_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sbu_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Pour_count",
						"type": "nvarchar"
					},
					{
						"name": "Pour",
						"type": "varchar"
					},
					{
						"name": "Sequence_of_Appearance",
						"type": "int",
						"precision": 10
					},
					{
						"name": "value",
						"type": "nvarchar"
					},
					{
						"name": "Next_Date",
						"type": "nvarchar"
					},
					{
						"name": "Avg_days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "View_Map",
						"type": "int",
						"precision": 10
					},
					{
						"name": "value_Average",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "O_PLN_STRUCTURE_POURING_STG2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_STRACTURE_FACT_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "Project_Id",
						"type": "nvarchar"
					},
					{
						"name": "Level_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sbu_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Area",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Pour_count",
						"type": "nvarchar"
					},
					{
						"name": "Pour",
						"type": "varchar"
					},
					{
						"name": "Sequence_of_Appearance",
						"type": "int",
						"precision": 10
					},
					{
						"name": "value",
						"type": "nvarchar"
					},
					{
						"name": "Next_Date",
						"type": "nvarchar"
					},
					{
						"name": "Avg_days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "View_Map",
						"type": "int",
						"precision": 10
					},
					{
						"name": "value_Average",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_STRUCTURE_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_SUBCONTRACT_MANPOWER_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Sbu_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Project",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Sub_Contractor",
						"type": "nvarchar"
					},
					{
						"name": "Activity",
						"type": "nvarchar"
					},
					{
						"name": "SCL_Engineer",
						"type": "nvarchar"
					},
					{
						"name": "Trade",
						"type": "nvarchar"
					},
					{
						"name": "Shift",
						"type": "nvarchar"
					},
					{
						"name": "Count",
						"type": "nvarchar"
					},
					{
						"name": "LoadDate_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_SUBCONTRACTOR_MANPOWER_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_TELEPHONEROOM_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_TELEPHONEROOM_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_WATERROOM_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_WATERROOM_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PLN_WETAREA_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "SBU_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sclicer",
						"type": "nvarchar"
					},
					{
						"name": "Activity_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "nvarchar"
					},
					{
						"name": "Type_of_work",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Update_Date",
						"type": "date"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_WETAREA_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PROJECTS_NEW_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Sort_ID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project_Identifier",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FLAT_COUNT",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project_Short",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total_Floors",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total_Podiums",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total_Typical_Floor",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Typical_Floor_Slab",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Podium_Slab",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "1_BHK",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "2_BHK",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "1_5_BHK",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "2_5_BHK",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "3_BHK",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "4_BHK",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "5_BHK",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Actual_Start",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BOQ_Value",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Bathrooms",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Center_Tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Built_Up_Area",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Chairman_Lift",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Delay",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Duplex",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fire_Lifts",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Forecast_Duration",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Forecast_Finish",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Lat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Long",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Office_Space",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Office_Use_Lift",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Parkings",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Pent_House",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Passenger_Lift",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project_Configuration",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project_Duration",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project_Finish",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Project_Start",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Residence_Use_Lift",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Retail",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Service_Lift",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase_GF_L1",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Staircase_GF_Roof",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Total_Units",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tower_A",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tower_B",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tower_C",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Tower_D",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Towers",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Image_Link",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Render_Image",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "projects_new"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PROJECTS_NEW_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Sort_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "FLAT_COUNT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Short",
						"type": "nvarchar"
					},
					{
						"name": "Total_Floors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Podiums",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Typical_Floor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Typical_Floor_Slab",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Podium_Slab",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ONE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TWO_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ONE_FIVE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TWO_FIVE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "THEREE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FOUR_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FIVE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Actual_Start",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "BOQ_Value",
						"type": "nvarchar"
					},
					{
						"name": "Bathrooms",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Center_Tower",
						"type": "nvarchar"
					},
					{
						"name": "Built_Up_Area",
						"type": "nvarchar"
					},
					{
						"name": "Chairman_Lift",
						"type": "nvarchar"
					},
					{
						"name": "Delay",
						"type": "nvarchar"
					},
					{
						"name": "Duplex",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Lifts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Forecast_Duration",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Forecast_Finish",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Lat",
						"type": "nvarchar"
					},
					{
						"name": "Long",
						"type": "nvarchar"
					},
					{
						"name": "Office_Space",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Office_Use_Lift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Parkings",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Pent_House",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Passenger_Lift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Configuration",
						"type": "nvarchar"
					},
					{
						"name": "Project_Duration",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Finish",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Start",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Residence_Use_Lift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Retail",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Service_Lift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Staircase_GF_L1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Staircase_GF_Roof",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Units",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower_A",
						"type": "nvarchar"
					},
					{
						"name": "Tower_B",
						"type": "nvarchar"
					},
					{
						"name": "Tower_C",
						"type": "nvarchar"
					},
					{
						"name": "Tower_D",
						"type": "nvarchar"
					},
					{
						"name": "Towers",
						"type": "nvarchar"
					},
					{
						"name": "Image_Link",
						"type": "nvarchar"
					},
					{
						"name": "Render_Image",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "PROJECTS_NEW_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PROJECTS_NEW_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sort_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "FLAT_COUNT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Short",
						"type": "nvarchar"
					},
					{
						"name": "Total_Floors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Podiums",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Typical_Floor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Typical_Floor_Slab",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Podium_Slab",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ONE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TWO_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ONE_FIVE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TWO_FIVE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "THEREE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FOUR_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FIVE_BHK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Actual_Start",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "BOQ_Value",
						"type": "nvarchar"
					},
					{
						"name": "Bathrooms",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Center_Tower",
						"type": "nvarchar"
					},
					{
						"name": "Built_Up_Area",
						"type": "nvarchar"
					},
					{
						"name": "Chairman_Lift",
						"type": "nvarchar"
					},
					{
						"name": "Delay",
						"type": "nvarchar"
					},
					{
						"name": "Duplex",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Lifts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Forecast_Duration",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Forecast_Finish",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Lat",
						"type": "nvarchar"
					},
					{
						"name": "Long",
						"type": "nvarchar"
					},
					{
						"name": "Office_Space",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Office_Use_Lift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Parkings",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Pent_House",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Passenger_Lift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Configuration",
						"type": "nvarchar"
					},
					{
						"name": "Project_Duration",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Finish",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_Start",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Residence_Use_Lift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Retail",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Service_Lift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Staircase_GF_L1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Staircase_GF_Roof",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Units",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tower_A",
						"type": "nvarchar"
					},
					{
						"name": "Tower_B",
						"type": "nvarchar"
					},
					{
						"name": "Tower_C",
						"type": "nvarchar"
					},
					{
						"name": "Tower_D",
						"type": "nvarchar"
					},
					{
						"name": "Towers",
						"type": "nvarchar"
					},
					{
						"name": "Image_Link",
						"type": "nvarchar"
					},
					{
						"name": "Render_Image",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PROJECTS_NEW_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_DIM_USERINFO_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_Azure_Attendance",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "userid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "badgenumber",
						"type": "nvarchar"
					},
					{
						"name": "defaultdeptid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "Password",
						"type": "nvarchar"
					},
					{
						"name": "Card",
						"type": "nvarchar"
					},
					{
						"name": "Privilege",
						"type": "nvarchar"
					},
					{
						"name": "AccGroup",
						"type": "nvarchar"
					},
					{
						"name": "TimeZones",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "Birthday",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "street",
						"type": "nvarchar"
					},
					{
						"name": "zip",
						"type": "nvarchar"
					},
					{
						"name": "ophone",
						"type": "nvarchar"
					},
					{
						"name": "FPHONE",
						"type": "nvarchar"
					},
					{
						"name": "pager",
						"type": "nvarchar"
					},
					{
						"name": "minzu",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "SN",
						"type": "nvarchar"
					},
					{
						"name": "SSN",
						"type": "nvarchar"
					},
					{
						"name": "UTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "State",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "SECURITYFLAGS",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "DelTag",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "RegisterOT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AutoSchPlan",
						"type": "nvarchar"
					},
					{
						"name": "MinAutoSchInterval",
						"type": "nvarchar"
					},
					{
						"name": "Image_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Last_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_userinfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_Azure_Attendance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_DIM_USERINFO_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "UserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Badgenumber",
						"type": "nvarchar"
					},
					{
						"name": "DefaultdeptID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Password",
						"type": "nvarchar"
					},
					{
						"name": "Card",
						"type": "nvarchar"
					},
					{
						"name": "Privilege",
						"type": "nvarchar"
					},
					{
						"name": "AccGroup",
						"type": "nvarchar"
					},
					{
						"name": "TimeZones",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "Birthday",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "street",
						"type": "nvarchar"
					},
					{
						"name": "zip",
						"type": "nvarchar"
					},
					{
						"name": "ophone",
						"type": "nvarchar"
					},
					{
						"name": "FPHONE",
						"type": "nvarchar"
					},
					{
						"name": "pager",
						"type": "nvarchar"
					},
					{
						"name": "minzu",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "SN",
						"type": "nvarchar"
					},
					{
						"name": "SSN",
						"type": "nvarchar"
					},
					{
						"name": "UTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "State",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "SECURITYFLAGS",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "DelTag",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "RegisterOT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AutoSchPlan",
						"type": "nvarchar"
					},
					{
						"name": "MinAutoSchInterval",
						"type": "nvarchar"
					},
					{
						"name": "Image_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Last_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "SA_DIM_USERINFO_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_DIM_USERINFO_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Badgenumber",
						"type": "nvarchar"
					},
					{
						"name": "DefaultdeptID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Password",
						"type": "nvarchar"
					},
					{
						"name": "Card",
						"type": "nvarchar"
					},
					{
						"name": "Privilege",
						"type": "nvarchar"
					},
					{
						"name": "AccGroup",
						"type": "nvarchar"
					},
					{
						"name": "TimeZones",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "Birthday",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "street",
						"type": "nvarchar"
					},
					{
						"name": "zip",
						"type": "nvarchar"
					},
					{
						"name": "ophone",
						"type": "nvarchar"
					},
					{
						"name": "FPHONE",
						"type": "nvarchar"
					},
					{
						"name": "pager",
						"type": "nvarchar"
					},
					{
						"name": "minzu",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "SN",
						"type": "nvarchar"
					},
					{
						"name": "SSN",
						"type": "nvarchar"
					},
					{
						"name": "UTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "State",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "SECURITYFLAGS",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "DelTag",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "RegisterOT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AutoSchPlan",
						"type": "nvarchar"
					},
					{
						"name": "MinAutoSchInterval",
						"type": "nvarchar"
					},
					{
						"name": "Image_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Last_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "SA_DIM_USERINFO_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_FACT_CHECKINOUT_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sobha_Azure_Attendance",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "userid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "checktime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "checktype",
						"type": "nvarchar"
					},
					{
						"name": "verifycode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SN",
						"type": "nvarchar"
					},
					{
						"name": "sensorid",
						"type": "nvarchar"
					},
					{
						"name": "WorkCode",
						"type": "nvarchar"
					},
					{
						"name": "Reserved",
						"type": "nvarchar"
					},
					{
						"name": "Last_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Fact_Checkinout"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sobha_Azure_Attendance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_FACT_CHECKINOUT_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Fact_CheckinoutID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Userid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Checktime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Checktype",
						"type": "nvarchar"
					},
					{
						"name": "Verifycode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SN",
						"type": "nvarchar"
					},
					{
						"name": "SensorID",
						"type": "nvarchar"
					},
					{
						"name": "WorkCode",
						"type": "nvarchar"
					},
					{
						"name": "Reserved",
						"type": "nvarchar"
					},
					{
						"name": "Last_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "SA_FACT_CHECKINOUT_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_FACT_CHECKINOUT_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Facts"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fact_CheckinoutID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Userid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Checktime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Checktype",
						"type": "nvarchar"
					},
					{
						"name": "Verifycode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SN",
						"type": "nvarchar"
					},
					{
						"name": "SensorID",
						"type": "nvarchar"
					},
					{
						"name": "WorkCode",
						"type": "nvarchar"
					},
					{
						"name": "Reserved",
						"type": "nvarchar"
					},
					{
						"name": "Last_Refresh_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "SA_FACT_CHECKINOUT_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_MANPOWER_MASTER_STG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_MySQL_DL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id_",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "upload_time",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "project_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tower",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sbu_id",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SL NO",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EMP ID NO.",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TECHNICIAN NAME",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ACTUAL DOJ",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TRADE AS PER ADMIN",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TRADE GROUP",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WORK STATUS/COST HEAD",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DIVISION",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "UNIT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WORK STATUS",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SHIFT",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "COMPANY",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SOURCE",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "manpower_master"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_MySQL_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_MANPOWER_MASTER_STG_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Manpower_Master_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_id",
						"type": "varchar"
					},
					{
						"name": "Tower",
						"type": "varchar"
					},
					{
						"name": "Sbu_id",
						"type": "varchar"
					},
					{
						"name": "SL_NO",
						"type": "varchar"
					},
					{
						"name": "EMP_ID_NO",
						"type": "varchar"
					},
					{
						"name": "TECHNICIAN_NAME",
						"type": "varchar"
					},
					{
						"name": "ACTUAL_DOJ",
						"type": "varchar"
					},
					{
						"name": "TRADE_AS_PER_ADMIN",
						"type": "varchar"
					},
					{
						"name": "TRADE_GROUP",
						"type": "varchar"
					},
					{
						"name": "WORK_STATUS_COST_HEAD",
						"type": "varchar"
					},
					{
						"name": "DIVISION",
						"type": "varchar"
					},
					{
						"name": "UNIT",
						"type": "varchar"
					},
					{
						"name": "WORK_STATUS",
						"type": "varchar"
					},
					{
						"name": "SHIFT",
						"type": "varchar"
					},
					{
						"name": "COMPANY",
						"type": "varchar"
					},
					{
						"name": "SOURCE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "SA_MANPOWER_MASTER_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SA_MANPOWER_MASTER_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH/Dimensions"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Manpower_Master_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Project_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project",
						"type": "nvarchar"
					},
					{
						"name": "SBU",
						"type": "nvarchar"
					},
					{
						"name": "Tower",
						"type": "nvarchar"
					},
					{
						"name": "Sbu_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SL_NO",
						"type": "nvarchar"
					},
					{
						"name": "EMP_ID_NO",
						"type": "nvarchar"
					},
					{
						"name": "TECHNICIAN_NAME",
						"type": "nvarchar"
					},
					{
						"name": "ACTUAL_DOJ",
						"type": "nvarchar"
					},
					{
						"name": "TRADE_AS_PER_ADMIN",
						"type": "nvarchar"
					},
					{
						"name": "TRADE_GROUP",
						"type": "nvarchar"
					},
					{
						"name": "WORK_STATUS_COST_HEAD",
						"type": "nvarchar"
					},
					{
						"name": "DIVISION",
						"type": "nvarchar"
					},
					{
						"name": "UNIT",
						"type": "nvarchar"
					},
					{
						"name": "WORK_STATUS",
						"type": "nvarchar"
					},
					{
						"name": "SHIFT",
						"type": "nvarchar"
					},
					{
						"name": "COMPANY",
						"type": "nvarchar"
					},
					{
						"name": "SOURCE",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "SA_MANPOWER_MASTER_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_WOODEN_DOOR_FACT_TRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_DW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Upload_Date",
						"type": "date"
					},
					{
						"name": "project_id",
						"type": "nvarchar"
					},
					{
						"name": "SBU_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Level_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Project_Identifier",
						"type": "nvarchar"
					},
					{
						"name": "tower",
						"type": "nvarchar"
					},
					{
						"name": "Building",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Flat_No",
						"type": "nvarchar"
					},
					{
						"name": "Door_Type",
						"type": "nvarchar"
					},
					{
						"name": "Jamb_Width",
						"type": "nvarchar"
					},
					{
						"name": "Orientation",
						"type": "nvarchar"
					},
					{
						"name": "Door_Id",
						"type": "nvarchar"
					},
					{
						"name": "Fire_Rating",
						"type": "nvarchar"
					},
					{
						"name": "Frame",
						"type": "nvarchar"
					},
					{
						"name": "Foam",
						"type": "nvarchar"
					},
					{
						"name": "Architrave",
						"type": "nvarchar"
					},
					{
						"name": "Shutter",
						"type": "nvarchar"
					},
					{
						"name": "Ironmongery",
						"type": "nvarchar"
					},
					{
						"name": "Installer",
						"type": "nvarchar"
					},
					{
						"name": "level_map",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total",
						"type": "varchar"
					},
					{
						"name": "SC_Short",
						"type": "nvarchar"
					},
					{
						"name": "SC_NAME",
						"type": "nvarchar"
					},
					{
						"name": "DATE_WISE_SPLIT",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "PLN_WOODEN_DOOR_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nexgen_Local')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "NexgenLocalUserinfo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "userid",
						"type": "Int32"
					},
					{
						"name": "badgenumber",
						"type": "String"
					},
					{
						"name": "defaultdeptid",
						"type": "Int32"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "Password",
						"type": "String"
					},
					{
						"name": "Card",
						"type": "String"
					},
					{
						"name": "Privilege",
						"type": "String"
					},
					{
						"name": "AccGroup",
						"type": "String"
					},
					{
						"name": "TimeZones",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Birthday",
						"type": "DateTime"
					},
					{
						"name": "street",
						"type": "String"
					},
					{
						"name": "zip",
						"type": "String"
					},
					{
						"name": "ophone",
						"type": "String"
					},
					{
						"name": "FPHONE",
						"type": "String"
					},
					{
						"name": "pager",
						"type": "String"
					},
					{
						"name": "minzu",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "SN",
						"type": "String"
					},
					{
						"name": "SSN",
						"type": "String"
					},
					{
						"name": "UTime",
						"type": "DateTime"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "SECURITYFLAGS",
						"type": "Int16"
					},
					{
						"name": "DelTag",
						"type": "Int16"
					},
					{
						"name": "RegisterOT",
						"type": "Int32"
					},
					{
						"name": "AutoSchPlan",
						"type": "String"
					},
					{
						"name": "MinAutoSchInterval",
						"type": "String"
					},
					{
						"name": "Image_id",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[userinfo]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NexgenLocalUserinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nexgen_Local_Checkinout')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "NexgenLocalUserinfo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "id",
						"type": "Int32"
					},
					{
						"name": "userid",
						"type": "Int32"
					},
					{
						"name": "checktime",
						"type": "DateTime"
					},
					{
						"name": "checktype",
						"type": "String"
					},
					{
						"name": "verifycode",
						"type": "Int32"
					},
					{
						"name": "SN",
						"type": "String"
					},
					{
						"name": "sensorid",
						"type": "String"
					},
					{
						"name": "WorkCode",
						"type": "String"
					},
					{
						"name": "Reserved",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[checkinout]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NexgenLocalUserinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nexgen_Local_Userinfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "NexgenLocalUserinfo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "userid",
						"type": "Int32"
					},
					{
						"name": "badgenumber",
						"type": "String"
					},
					{
						"name": "defaultdeptid",
						"type": "Int32"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "Password",
						"type": "String"
					},
					{
						"name": "Card",
						"type": "String"
					},
					{
						"name": "Privilege",
						"type": "String"
					},
					{
						"name": "AccGroup",
						"type": "String"
					},
					{
						"name": "TimeZones",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Birthday",
						"type": "DateTime"
					},
					{
						"name": "street",
						"type": "String"
					},
					{
						"name": "zip",
						"type": "String"
					},
					{
						"name": "ophone",
						"type": "String"
					},
					{
						"name": "FPHONE",
						"type": "String"
					},
					{
						"name": "pager",
						"type": "String"
					},
					{
						"name": "minzu",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "SN",
						"type": "String"
					},
					{
						"name": "SSN",
						"type": "String"
					},
					{
						"name": "UTime",
						"type": "DateTime"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "SECURITYFLAGS",
						"type": "Int16"
					},
					{
						"name": "DelTag",
						"type": "Int16"
					},
					{
						"name": "RegisterOT",
						"type": "Int32"
					},
					{
						"name": "AutoSchPlan",
						"type": "String"
					},
					{
						"name": "MinAutoSchInterval",
						"type": "String"
					},
					{
						"name": "Image_id",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[userinfo]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NexgenLocalUserinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Attendance_Nexgen_Checkinout')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Attendance_Nexgen_Checkinout_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SobhaattendanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SobhaattendanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Attendance_Server_Nex_gen')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Attendance_Server_Nex_gen_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSqlMI_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlMI",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSqlMI_SRC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSynapseAnalytics_DW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSynapseAnalytics_DW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Azure_MySQL_DL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('LS_Azure_MySQL_DL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Azure_MySQL_FL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('LS_Azure_MySQL_FL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NexgenLocalUserinfo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('NexgenLocalUserinfo_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SobhaattendanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SobhaattendanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nexgen_Local_Premise')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Nexgen_Local_Premise_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzIntegrationAttendance",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzIntegrationAttendance')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sobha_Azure_Attendance')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Sobha_Azure_Attendance_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sobha_PG_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Sobha_PG_DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_ADHOC_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Pln_Daily",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-01-16T23:02:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							],
							"weekDays": [
								"Sunday",
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday",
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Pln_Daily')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_ADHOC_Daily_ES')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Pln_Daily_Except_Sunday",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-01-16T22:51:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday",
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Pln_Daily_Except_Sunday')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_ADHOC_Weekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Pln_Weekly",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-01-16T22:25:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							],
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Pln_Weekly')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_ADHOC_WeeklyTwice')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Pln_WeeklyTwice",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-01-16T21:56:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							],
							"weekDays": [
								"Sunday",
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Pln_WeeklyTwice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_Daily_Except_Sunday')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Flatfinishes_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ServiceRoom_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "KeepOut_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Staircase_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Corridor_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Drawing_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Checkinout_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Taskreport_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-02-10T10:07:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday",
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Flatfinishes_Master')]",
				"[concat(variables('factoryId'), '/pipelines/ServiceRoom_Master')]",
				"[concat(variables('factoryId'), '/pipelines/KeepOut_Master')]",
				"[concat(variables('factoryId'), '/pipelines/Staircase_Master')]",
				"[concat(variables('factoryId'), '/pipelines/Corridor_Master')]",
				"[concat(variables('factoryId'), '/pipelines/Drawing_Master')]",
				"[concat(variables('factoryId'), '/pipelines/Checkinout_Master')]",
				"[concat(variables('factoryId'), '/pipelines/Taskreport_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_Monthly_10th_Day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs every 10th of the month. Refreshes Business Plan tables. ",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "BusinessPlan_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2023-02-22T10:44:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							],
							"monthDays": [
								10
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/BusinessPlan_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trg_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Dim_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "DoorDelivery_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "WoodenDoor_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Struncture_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Projection_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-02-10T10:56:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							],
							"weekDays": [
								"Sunday",
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday",
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Dim_Master')]",
				"[concat(variables('factoryId'), '/pipelines/DoorDelivery_Master')]",
				"[concat(variables('factoryId'), '/pipelines/WoodenDoor_Master')]",
				"[concat(variables('factoryId'), '/pipelines/Struncture_Master')]",
				"[concat(variables('factoryId'), '/pipelines/Projection_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trg_Weekly_Once_Sunday')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Milestone_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Procurement_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-02-13T08:24:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							],
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Milestone_Master')]",
				"[concat(variables('factoryId'), '/pipelines/Procurement_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trg_Weekly_Twice_Wed_Sunday')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Critical_Issue_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-02-13T08:36:00",
						"timeZone": "Arabian Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							],
							"weekDays": [
								"Sunday",
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Critical_Issue_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzIntegrationAttendance')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "UAE North",
						"dataFlowProperties": {
							"computeType": "MemoryOptimized",
							"coreCount": 32,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-DataFlow-8')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "UAE North",
						"dataFlowProperties": {
							"computeType": "MemoryOptimized",
							"coreCount": 16,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SobhaattendanceIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DOOR_DELIVERY_M')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_DOOR_DELIVERY_M_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_DOOR_DELIVERY_M_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Upload_Date as date,",
						"          PROJECT_ID as integer,",
						"          SBU_ID as integer,",
						"          Delivery_Order_No as string,",
						"          Delivery_Date as string,",
						"          Door_Type as string,",
						"          Element as string,",
						"          Vendor as string,",
						"          SUM_ASA as integer,",
						"          MIN_ASA as integer,",
						"          Used_Data as string,",
						"          MIN_ASA_DELIVERED as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n        Upload_Date,\\n          --sbu_id,\\n          P.Sort_ID as PROJECT_ID,\\n          SM.SBU_MAP_ID AS SBU_ID,\\n        Delivery_Order_No,\\n        Delivery_Date,\\n        Door_Type,\\n          Element,\\n        Vendor,\\n        sum(ASA) AS \\'SUM_ASA\\',\\n        MIN(ASA) AS \\'MIN_ASA\\',\\n       \\'Dates_Used\\' AS Used_Data,\\n       Convert(int,NULL ) AS \\'MIN_ASA_DELIVERED\\'\\n  FROM (\\nSELECT \\n    CAST(upload_time AS DATE) AS Upload_Date,\\n    project_id,\\n    tower,\\n    sbu_id,\\n    [Sr_No],\\n    Building,\\n    NULLIF(Delivery_Order_No,\\'\\') AS Delivery_Order_No,\\n    NULLIF(Delivery_Date,\\'\\') AS Delivery_Date,\\n    Door_Type,\\n    Element,\\n    Fire_Rating,\\n    Orientation,\\n    CASE \\n        WHEN TRIM(Element) = \\'Architrave\\' AND Quantity_Nos NOT IN (\\'\\') THEN Quantity_Nos/2\\n        WHEN TRIM(Element) = \\'Architrave\\' AND Quantity_Nos IN (\\'\\') THEN Quantity_Sets\\n        WHEN TRIM(Element) != \\'Architrave\\' THEN Quantity_Nos\\n    END AS ASA,    \\n    Remarks,\\n    Vendor,\\n    DENSE_RANK () OVER(PARTITION BY project_id ORDER BY CAST(upload_time AS DATE) DESC) AS AASD\\nFROM STG.O_PLN_DOOR_DELIVERY_RAW_STG  \\n) AA\\n\\nLEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          AA.PROJECT_ID=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          AA.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE AASD = 1 AND Delivery_Order_No IS NOT NULL\\n    GROUP BY Upload_Date,P.Sort_ID,SM.SBU_MAP_ID,Delivery_Order_No,Delivery_Date,Door_Type,Element,Vendor,PROJECT_IDENTIFIER\\n     \\nUNION ALL\\n\\nSELECT\\n            Upload_Date,\\n\\n   --         project_id,\\n               --sbu_id,\\n               P.Sort_ID as PROJECT_ID,\\n               SM.SBU_MAP_ID AS SBU_ID,\\n            Delivery_Order_No,\\n            Delivery_Date,\\n            Door_Type,\\n            [Element],\\n             Vendor,\\n            Qty_Delivered AS \\'sum(ASA)\\',\\n            Final_Delivery AS \\'MIN(ASA)\\',\\n            \\'Total_Used\\'   AS Used_Data,\\n               Case     when ROW_RANK = 1 Then MIN(Final_Delivery_Element)OVER(PARTITION BY project_id,Door_Type ORDER BY project_id)\\n                         Else NULL \\n               End AS \\'MIN(ASA) Fixed\\'\\nFROM (\\nSELECT\\n                Upload_Date,\\n                project_id,\\n                    sbu_id,\\n                Door_Type,\\n                [Element],\\n                Vendor,\\n                Delivery_Order_No,\\n                Delivery_Date,\\n                Qty_Delivered,\\n                LAG(Total_Delivery,2) OVER (PARTITION BY Sort_Data ORDER BY Total_Delivery,[Element]) Final_Delivery,\\n\\n                    Case when [Element] =\\'Architrave\\' Then SUM(case when  [Element] =\\'Architrave\\' Then Qty_Delivered else 0 end )  OVER (PARTITION BY project_id,Door_Type ORDER BY [Element]) \\n                         when [Element] =\\'Frame\\' Then SUM(case when  [Element] =\\'Frame\\' Then Qty_Delivered else 0 end ) OVER (PARTITION BY project_id,Door_Type ORDER BY [Element]) \\n                     when [Element] =\\'Shutter\\' Then SUM(case when  [Element] =\\'Shutter\\' Then Qty_Delivered else 0 end )OVER (PARTITION BY project_id,Door_Type ORDER BY [Element]) \\n                     else 0 \\n                     end Final_Delivery_Element,\\n\\n                    ROW_NUMBER () OVER (PARTITION BY project_id, Door_Type ORDER BY Delivery_Date) ROW_RANK\\nFROM (\\nSELECT \\n                Upload_Date,\\n                --Door_Type,\\n                    Sort_Data,\\n                    Element,\\n                Vendor,\\n                Delivery_Order_No,\\n                Delivery_Date,\\n                Qty_Delivered,\\n                    project_id,\\n                    sbu_id,\\n                Door_Type,\\n                MIN(Qty_Delivered) AS Total_Delivery\\nFROM (\\nSELECT\\n                Upload_Date,\\n                project_id,sbu_id,\\n                Door_Type,\\n                    CASE WHEN Door_Type= \\'TD1\\' THEN \\'1\\'\\n                     WHEN Door_Type= \\'TD2\\' THEN \\'2\\'\\n                     WHEN Door_Type= \\'TD3\\' THEN \\'3\\'\\n                     WHEN Door_Type= \\'TD4\\' THEN \\'4\\'\\n                     WHEN Door_Type= \\'TD5\\' THEN \\'5\\'\\n                     WHEN Door_Type= \\'TD6\\' THEN \\'6\\'\\n                     WHEN Door_Type= \\'TD7\\' THEN \\'7\\'\\n                ELSE \\'0\\' End AS Sort_Data, \\n                Element,\\n                Vendor,\\n                Delivery_Order_No,\\n                Delivery_Date,\\n                SUM(Set_C + Qty_S) AS Qty_Delivered\\nFROM (\\nSELECT\\n                D.Upload_Date,\\n                D.project_id,D.sbu_id,\\n                D.Door_Type,\\n                D.Element,\\n                D.Vendor,\\n                D.Delivery_Order_No,\\n                D.Delivery_Date,\\n                SUM(CAST(D.Quantity_Sets AS INT)) AS Set_C,\\n                SUM(CAST(D.Quantity_Nos AS INT)) AS Qty_C,\\n                    CASE WHEN Element = (\\'Architrave\\') THEN SUM(CAST(D.Quantity_Nos AS INT))/2 ELSE SUM(CAST(D.Quantity_Nos AS INT)) END AS Qty_S\\nFROM (\\nSELECT \\n        CAST(DD.Upload_time AS DATE) AS Upload_Date,\\n        DD.project_id,DD.sbu_id,\\n        DD.Door_Type,\\n        DD.Element,\\n        DD.Vendor,\\n        DD.Delivery_Order_No,\\n        DD.Delivery_Date,\\n        DD.Quantity_Sets,\\n        DD.Quantity_Nos, DENSE_RANK () OVER(PARTITION BY DD.project_id ORDER BY CAST(DD.Upload_time AS DATE) desc) AS KASD\\n    FROM STG.O_PLN_DOOR_DELIVERY_RAW_STG DD\\n        WHERE Door_Type NOT IN (\\'\\',\\'-\\')\\n) D\\nWHERE KASD = 1 Group by D.Upload_Date,D.project_id,D.sbu_id,D.Door_Type,D.Element, D.Vendor,D.Delivery_Order_No,D.Delivery_Date\\n) A\\nGROUP BY Upload_Date,project_id,sbu_id,Door_Type,Element,Vendor,Delivery_Order_No,Delivery_Date\\n)AA\\nGROUP BY Upload_Date,project_id,sbu_id,Door_Type,Sort_Data,Element,Vendor,Delivery_Order_No,Delivery_Date,Qty_Delivered,project_id,Door_Type\\n)A1\\n)BB\\nLEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          BB.PROJECT_ID=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          BB.SBU_ID=SM.SBU_IDENTIFIER\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          SBU_ID as integer,",
						"          Delivery_Order_No as string,",
						"          Delivery_Date as string,",
						"          Door_Type as string,",
						"          Element as string,",
						"          Vendor as string,",
						"          SUM_ASA as string,",
						"          MIN_ASA as string,",
						"          Used_Data as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp,",
						"          MIN_ASA_DELIVERED as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[DOOR_DELIVERY_M_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          SBU_ID,",
						"          Delivery_Order_No,",
						"          Delivery_Date,",
						"          Door_Type,",
						"          Element,",
						"          Vendor,",
						"          SUM_ASA,",
						"          MIN_ASA,",
						"          Used_Data,",
						"          Update_Date = Upload_Date,",
						"          LoadDateTime,",
						"          MIN_ASA_DELIVERED",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_DOOR_DELIVERY_M_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_EXECUTIVE_SUMMARY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_BUSINESS_PLN_1_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_EXECUTIVE_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          upload_time as timestamp,",
						"          project_id as string,",
						"          SBU as string,",
						"          Type as string,",
						"          Achieved_Revenue_Till_2022 as string,",
						"          Total_Revenue_BOQ as string,",
						"          Balance_Revenue_to_Execute_From_2023 as string,",
						"          Actuals_From_Business_Plan as integer,",
						"          Update_Date as timestamp,",
						"          Project as string,",
						"          Latest_Actuals as decimal(38,2),",
						"          Total_to_be_considered as decimal(38,2)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT bp.upload_time,\\n       bp.project_id,\\n       bp.SBU,\\n       bp.Type,\\n       bp.[Achieved_Revenue_Till_2022],\\n       bp.[Total_Revenue_BOQ],\\n       bp.[Balance_Revenue_to_Execute_From_2023],\\n       bp.Actuals_From_Business_Plan,\\n       pv.Update_Date,\\n       pv.Project,\\n       pv.Latest_Actuals,\\n       replace(replace(bp.[Achieved_Revenue_Till_2022],\\',\\',\\'\\'),\\'-\\',\\'\\') + bp.Actuals_From_Business_Plan + pv.Latest_Actuals as Total_to_be_considered\\nFROM (\\n  SELECT opbp.upload_time,\\n         opbp.project_id,\\n         opbp.SBU,\\n         opbp.Type,\\n         opbp.[Achieved_Revenue_Till_2022],\\n         opbp.[Total_Revenue_BOQ],\\n         opbp.[Balance_Revenue_to_Execute_From_2023],\\n         CAST(replace(replace(opbp.[Jan_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) \\n           + CAST(replace(replace(opbp.[Feb_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[Mar_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[Apr_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[May_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[Jun_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[Jul_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           \\n           \\n           CAST(replace(replace(opbp.[Aug_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[Sep_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[Oct_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[Nov_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) + \\n           CAST(replace(replace(opbp.[Dec_23], \\',\\', \\'\\'), \\'-\\', \\'\\') AS INT) AS Actuals_From_Business_Plan,\\n         MAX(opbp.upload_time) OVER (PARTITION BY opbp.project_id) AS Max_BP_date\\n  FROM  [STG].[O_PLN_BUSINESS_PLAN_1_RAW_STG] opbp\\n  WHERE opbp.SBU IN (\\' Overall \\',\\'Overall\\',\\'Overall \\',\\' Overall\\')\\n    AND opbp.Type NOT IN (\\'Forecast\\', \\'Type\\',\\'Plan\\',\\' Forecast \\', \\' Type \\',\\' Plan \\')\\n) bp\\nLEFT JOIN (\\n  SELECT fpp2.Update_Date,\\n         fpp2.[Project_Identifier] AS Project,\\n         SUM(fpp2.[Actual_as_on_date]) AS Latest_Actuals\\n  FROM [DWH].[PLN_PROJECTION_FACT] fpp2\\n  WHERE MONTH(fpp2.Update_Date) = MONTH(GETDATE())\\n  GROUP BY fpp2.Update_Date,\\n           fpp2.[Project_Identifier]\\n) pv ON bp.project_id = pv.Project\\nWHERE bp.Max_BP_date = bp.upload_time',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          upload_time as timestamp,",
						"          project_id as string,",
						"          SBU as string,",
						"          Type as string,",
						"          Achieved_Revenue_Till_2022 as string,",
						"          Total_Revenue_BOQ as string,",
						"          Balance_Revenue_to_Execute_From_2023 as string,",
						"          Actuals_From_Business_Plan as string,",
						"          Upload_Date as date,",
						"          Project as string,",
						"          Latest_Actuals as decimal(32,2),",
						"          Total_to_be_considered as decimal(32,2),",
						"          LoadDateTime as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_EXECUTIVE_SUMMARY_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          upload_time,",
						"          project_id,",
						"          SBU,",
						"          Type,",
						"          Achieved_Revenue_Till_2022,",
						"          Total_Revenue_BOQ,",
						"          Balance_Revenue_to_Execute_From_2023,",
						"          Actuals_From_Business_Plan,",
						"          Upload_Date = Update_Date,",
						"          Project,",
						"          Latest_Actuals,",
						"          Total_to_be_considered,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BUSINESS_PLN_1_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_EXECUTIVE_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Gaant_Hurry')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "MILESTONEMAINTABLE",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "DRYAREAGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "WETAREAGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "CORRIDORGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "KITCHENGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "BALCONYGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "SLIDINGDOORGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "KITCHENCABINETGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "KEEPOUTGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "BLOCKWORKGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "BALUSTRADEWORKSGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "STRUCTUREGAANTFINAL",
							"description": "Import data from DS_Gaant_Hurry_Src"
						},
						{
							"dataset": {
								"referenceName": "DS_PROJECTS_NEW_TRG",
								"type": "DatasetReference"
							},
							"name": "PLNPROJECTSDIM"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "MILESTONEMAINTABLEPlan",
							"description": "Add data to MILESTONE_MAIN_TABLE_Plan"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "ManualActuals"
						},
						{
							"dataset": {
								"referenceName": "DS_Gaant_Hurry_Src",
								"type": "DatasetReference"
							},
							"name": "OPLNMILESTONEMAPSTG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_GAANT_HURRY_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_GAANT_HURRY_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "union1"
						},
						{
							"name": "ACTUALSCOLLECTOR"
						},
						{
							"name": "joinwithProjectsDim",
							"description": "leftjoinMILESTONEMAINTABLEwithPLNPROJECTSDIM"
						},
						{
							"name": "joinwithACTUALSCOLLECTOR",
							"description": "left join with ACTUALS_COLLECTOR"
						},
						{
							"name": "select1"
						},
						{
							"name": "ActualAchivedColumn"
						},
						{
							"name": "OUTPUTPlan"
						},
						{
							"name": "LegendderivedColumnForOutputplan"
						},
						{
							"name": "selectListforMILESTONEMAINTABLEPlan"
						},
						{
							"name": "LegendderivedColumnForMILESTONEMAINTABLEPlan"
						},
						{
							"name": "UnionAllFinal"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "ActualAchivedderivedColumn"
						},
						{
							"name": "ActualAchivedderivedColumn2"
						},
						{
							"name": "PLNACTderivedColumn"
						},
						{
							"name": "ActivityNewfilter"
						},
						{
							"name": "AUGGAANTTEST"
						},
						{
							"name": "SEPTGAANTTESTTemp"
						},
						{
							"name": "SEPTGAANTTEST"
						},
						{
							"name": "ManualAdditionToCode"
						},
						{
							"name": "FinalFinalderivedColumn"
						},
						{
							"name": "PLNACTNewderivedColumn"
						},
						{
							"name": "Finalselect"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Upload_Time as date,",
						"          project_id as string,",
						"          Group as string,",
						"          Activity_Description as string,",
						"          Actual_Start_Date as date,",
						"          Actual_Finish_Date as date,",
						"          Total_days as integer,",
						"          Days_elapsed as integer,",
						"          Source_Templet as string,",
						"          Sort_Group as integer,",
						"          Sort_Activity as integer,",
						"          Activity_New as string,",
						"          FLAT_COUNT as integer,",
						"          Actual_Percentage as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: '\\n \\n SELECT DC.Upload_Time as Upload_Time,\\n        DC.project_id as project_id,\\n        DC.[Group] as [Group],\\n        DC.[Activity_Description] as [Activity_Description],\\n        DC.[Actual_Start_Date] as [Actual_Start_Date],\\n        DC.[Actual_Finish_Date] as [Actual_Finish_Date],\\n          DATEDIFF(DAY,DC.[Actual_Finish_Date], DC.[Actual_Start_Date]) AS Total_days,\\n        DATEDIFF(DAY,GETDATE(), DC.[Actual_Start_Date]) AS Days_elapsed,\\n       CASE \\n            WHEN DC.[Group] = \\'Structural Works\\' AND DC.[Activity_Description] IN (\\'Pile Cap\\',\\'Pile\\')  THEN \\'MANUAL_ENTRY\\'\\n            WHEN DC.[Group] = \\'External Elevation\\' AND DC.[Activity_Description] IN (\\'ACP Works\\')  THEN \\'MANUAL_ENTRY\\'\\n            WHEN DC.[Group] = \\'Other & Specialist\\' AND DC.[Activity_Description] IN (\\'Lift - CTU\\',\\'Lift - Balance passenger lifts\\',\\'Swimming Pool\\',\\'Kids Play Area/ Outdoor Play Area\\',\\n               \\'Changing Rooms / GYM\\',\\'Wooden Decking\\')  THEN \\'MANUAL_ENTRY\\'\\n            WHEN DC.[Group] = \\'Authority Approvals\\' AND DC.[Activity_Description] IN (\\'Transformer payment\\',\\'LV Inspection & Approval\\',\\'BCC - Inspection & Approval\\',\\'Power on\\') THEN \\'MANUAL_ENTRY\\'\\n            WHEN DC.[Group] = \\'Structural Works\\' AND DC.[Activity_Description] IN (\\'Grade Slab\\',\\'Podium Slabs\\',\\'Typical Floor Slabs\\')  THEN \\'PLN_STRUCTURE_FACT\\'\\n            WHEN DC.[Group] = \\'Structural Works\\' AND DC.[Activity_Description] NOT IN (\\'Pile\\',\\'Pile Cap\\',\\'Grade Slab\\',\\'Podium Slabs\\',\\'Typical Floor Slabs\\')  THEN \\'TBD\\'\\n            WHEN DC.[Group] = \\'Masonary Works\\' AND DC.[Activity_Description] IN (\\'Blockworks\\')  THEN \\'PLN_DRYAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Finishes - Dry Area\\' THEN \\'PLN_DRYAREA_FACT\\'\\n            WHEN DC.[Group] = \\'External Elevation\\' AND DC.[Activity_Description] IN (\\'Sliding Door\\')  THEN \\'PLN_DRYAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Finishes - Wet Area\\' THEN \\'PLN_WETAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Joinery Works\\' AND DC.[Activity_Description] IN (\\'Vanity Cabinet\\')  THEN \\'PLN_WETAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Finishes - Corridor\\' THEN \\'PLN_CORRIDOR_FACT\\'\\n            WHEN DC.[Group] = \\'External Elevation\\' AND DC.[Activity_Description] IN (\\'EIFS\\',\\'Balustrade Works\\')  THEN \\'PLN_BALCONYAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Other & Specialist\\' AND DC.[Activity_Description] IN (\\'Kitchen Appliances\\')  THEN \\'PLN_KITCHENAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Joinery Works\\' AND DC.[Activity_Description] IN (\\'Kitchen Cabinet\\')  THEN \\'PLN_KITCHENAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Keepout\\' THEN \\'PLN_KEEPOUT_FACT\\'\\n            WHEN DC.[Group] = \\'Authority Approvals\\' AND DC.[Activity_Description] NOT IN (\\'Transformer payment\\',\\'LV Inspection & Approval\\',\\'BCC - Inspection & Approval\\',\\'Power on\\') THEN \\'TBD\\'\\n            WHEN DC.[Group] = \\'External Elevation\\' AND DC.[Activity_Description] NOT IN (\\'Sliding Door\\',\\'EIFS\\',\\'Balustrade Works\\',\\'ACP Works\\')  THEN \\'TBD\\'\\n            WHEN DC.[Group] = \\'Other & Specialist\\' AND DC.[Activity_Description] NOT IN (\\n                                                                                    \\'Kitchen Appliances\\',\\n                                                                                    \\'Lift - CTU\\',\\n                                                                                    \\'Lift - Balance passenger lifts\\',\\n                                                                                    \\'Swimming Pool\\',\\n                                                                                    \\'Kids Play Area/ Outdoor Play Area\\',\\n                                                                                    \\'Changing Rooms / GYM\\',\\n                                                                                    \\'Wooden Decking\\')  THEN \\'TBD\\'\\n            WHEN DC.[Group] = \\'Joinery Works\\' AND DC.[Activity_Description] NOT IN (\\'Vanity Cabinet\\',\\'Kitchen Cabinet\\')  THEN \\'TBD\\'\\n            ELSE \\'MISSING\\'\\n        END AS Source_Templet,\\n        OLMP.Sort_Group as Sort_Group,\\n        OLMP.Sort_Activity as Sort_Activity,\\n        OLMP.Activity_New as Activity_New,\\n        P.FLAT_COUNT as FLAT_COUNT,\\n        DC.[Actual_Percentage] as [Actual_Percentage]\\n--INTO #MILESTONE_MAIN_TABLE\\n FROM  (\\n SELECT Upload_Time,\\n          project_id,\\n          [Group],\\n          [Activity_Description],\\n          CAST(CASE WHEN ISNULL(FC.[Actual_Start_Date],\\'\\') = \\'\\' THEN NULL\\n            WHEN FC.[Actual_Start_Date] LIKE \\'%/19\\' THEN REPLACE(FC.[Actual_Start_Date],\\'/19\\',\\'/2019\\')\\n            WHEN FC.[Actual_Start_Date] LIKE \\'%/20\\' THEN REPLACE(FC.[Actual_Start_Date],\\'/20\\',\\'/2020\\')\\n            WHEN FC.[Actual_Start_Date] LIKE \\'%/21\\' THEN REPLACE(FC.[Actual_Start_Date],\\'/21\\',\\'/2021\\')\\n            WHEN FC.[Actual_Start_Date] LIKE \\'%/22\\' THEN REPLACE(FC.[Actual_Start_Date],\\'/22\\',\\'/2022\\')\\n            WHEN FC.[Actual_Start_Date] LIKE \\'%/23\\' THEN REPLACE(FC.[Actual_Start_Date],\\'/23\\',\\'/2023\\')\\n            WHEN FC.[Actual_Start_Date] LIKE \\'%/24\\' THEN REPLACE(FC.[Actual_Start_Date],\\'/24\\',\\'/2024\\')\\n            ELSE FC.[Actual_Start_Date]\\n        END  AS DATE) [Actual_Start_Date], \\n          CAST(CASE WHEN ISNULL(FC.[Actual_Start_Date],\\'\\') = \\'\\' THEN NULL\\n            WHEN FC.[Actual_Finish_Date] LIKE \\'%/19\\' THEN REPLACE(FC.[Actual_Finish_Date],\\'/19\\',\\'/2019\\')\\n            WHEN FC.[Actual_Finish_Date] LIKE \\'%/20\\' THEN REPLACE(FC.[Actual_Finish_Date],\\'/20\\',\\'/2020\\')\\n            WHEN FC.[Actual_Finish_Date] LIKE \\'%/21\\' THEN REPLACE(FC.[Actual_Finish_Date],\\'/21\\',\\'/2021\\')\\n            WHEN FC.[Actual_Finish_Date] LIKE \\'%/22\\' THEN REPLACE(FC.[Actual_Finish_Date],\\'/22\\',\\'/2022\\')\\n            WHEN FC.[Actual_Finish_Date] LIKE \\'%/23\\' THEN REPLACE(FC.[Actual_Finish_Date],\\'/23\\',\\'/2023\\')\\n            WHEN FC.[Actual_Finish_Date] LIKE \\'%/24\\' THEN REPLACE(FC.[Actual_Finish_Date],\\'/24\\',\\'/2024\\')\\n            ELSE FC.[Actual_Finish_Date]\\n        END  AS DATE) [Actual_Finish_Date],\\n          [Actual_Percentage]\\n FROM  ( \\n SELECT\\n        CAST(OPM.upload_time AS DATE) AS Upload_Time,\\n        OPM.project_id,\\n        OPM.[Group],\\n        OPM.[Activity_Description],\\n        CASE \\n            WHEN OPM.[Actual_Forecast_Start] IS NULL OR TRIM(OPM.[Actual_Forecast_Start]) IN (\\'\\',\\'-\\',\\' \\') THEN REPLACE(OPM.[Baseline_Start],\\'-\\',\\'/\\')\\n            ELSE REPLACE(OPM.[Actual_Forecast_Start],\\'-\\',\\'/\\')\\n        END AS [Actual_Start_Date],\\n        CASE \\n            WHEN OPM.[Actual_Forecast_Start] IS NULL OR TRIM(OPM.[Actual_Forecast_Start]) IN (\\'\\',\\'-\\',\\' \\') THEN REPLACE(OPM.[Baseline_Start],\\'-\\',\\'/\\')\\n            ELSE REPLACE(OPM.[Actual_Forecast_Start],\\'-\\',\\'/\\')\\n        END [Actual_Finish_Date],\\n        DENSE_RANK() OVER( PARTITION BY OPM.project_id ORDER BY CAST(OPM.upload_time AS DATE) DESC) DENSERANK,\\n        OPM.[Actual_Percentage]\\n    FROM\\n        STG.O_PLN_MILESTONE_STG OPM \\n        WHERE \\n(OPM.[Group] IS NOT NULL AND TRIM(OPM.[Group]) NOT IN (\\'\\')\\n                AND OPM.[Activity_Description] IS NOT NULL AND TRIM(OPM.[Activity_Description]) NOT IN (\\'\\'))\\n) FC\\nWHERE FC.DENSERANK = 1\\n ) DC\\n LEFT JOIN STG.O_PLN_MILESTONE_MAP_STG OLMP\\n                ON DC.[Group] = OLMP.[Group] \\n                AND DC.[Activity_Description] = OLMP.Activity\\n LEFT JOIN STG.PROJECTS_STG P\\n                ON DC.project_id = P.Project_Identifier\\n',",
						"     format: 'query',",
						"     staged: true) ~> MILESTONEMAINTABLE",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,0),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: '\\nSELECT      DAR.project_id,\\n            DAR.Type_of_work,\\n            --DENSE_RANK() OVER(PARTITION BY DAR.project_id ORDER BY DAR.tower) AS RANKER,\\n            SUM(DAR.value) AS SUM_ALL,\\n               \\'PLN_DRYAREA_FACT\\' AS Source_Table\\n--INTO #DRYAREA_GAANT_FINAL\\nFROM (\\nSELECT \\n            FPD.project_id,\\n            FPD.tower,\\n            FPD.[Level_ID],\\n            FPD.Flat,\\n            --FPD.sclicer,\\n            CAST(REPLACE(FPD.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n            FPD.Type_of_work,\\n            FPD.ACTIVITY_ID\\nFROM [DWH].[PLN_DRYAREA_FACT] FPD\\nWHERE\\n            LOWER(FPD.Type_of_work) IN (\\n                                        \\'Plaster\\',\\n                                        \\'Screed\\',\\n                                        \\'Floor Tile\\',\\n                                        \\'FC Framing\\',\\n                                        \\'FC Boarding with Joint Taping\\',\\n                                        \\'Floor Tiling\\'\\n                                        )\\n            AND (FPD.value LIKE \\'1%\\'\\n                OR FPD.value LIKE \\'2%\\'\\n                OR FPD.value LIKE \\'3%\\'\\n                OR FPD.value LIKE \\'4%\\'\\n                OR FPD.value LIKE \\'5%\\'\\n                OR FPD.value LIKE \\'6%\\'\\n                OR FPD.value LIKE \\'7%\\'\\n                OR FPD.value LIKE \\'8%\\'\\n                OR FPD.value LIKE \\'9%\\'\\n                ) \\n                    \\n) DAR\\nGROUP BY project_id,Type_of_work          \\n',",
						"     format: 'query',",
						"     staged: true) ~> DRYAREAGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,0),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT          WAR.project_id,\\n                WAR.Type_of_work,\\n                SUM(WAR.value) AS SUM_ALL,\\n                    \\'PLN_WETAREA_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n                WPD.project_id,\\n                WPD.tower,\\n                WPD.[Level_ID],\\n                WPD.Flat,\\n                --WPD.sclicer,\\n                CAST(REPLACE(WPD.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n                WPD.Type_of_work,\\n                WPD.ACTIVITY_ID\\n            FROM [DWH].[PLN_WETAREA_FACT] WPD \\n            WHERE\\n                LOWER(WPD.Type_of_work) IN (\\n                                            \\'Wet Area Screed\\',\\n                                            \\'Wet Area MEP H/L Boarding Clearance\\',\\n                                            \\'Wall tile bottom Tile\\',\\n                                            \\'Wet Area FC Framing\\',\\n                                            \\'FC Boarding & Joint Taping\\',\\n                                            \\'Floor Tile\\',\\n                                            \\'Wet Area Final Fixtures Installation\\',\\n                                            \\'Vanity Cabinet\\'\\n                                            )\\n                AND (WPD.value LIKE \\'1%\\'\\n                    OR WPD.value LIKE \\'2%\\'\\n                    OR WPD.value LIKE \\'3%\\'\\n                    OR WPD.value LIKE \\'4%\\'\\n                    OR WPD.value LIKE \\'5%\\'\\n                    OR WPD.value LIKE \\'6%\\'\\n                    OR WPD.value LIKE \\'7%\\'\\n                    OR WPD.value LIKE \\'8%\\'\\n                    OR WPD.value LIKE \\'9%\\'\\n                    ) \\n) WAR\\nGROUP BY project_id,Type_of_work\\n',",
						"     format: 'query',",
						"     staged: true) ~> WETAREAGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,0),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n                CAR.project_id,\\n                CAR.Type_of_work,\\n                SUM(CAR.value) AS SUM_ALL,\\n                    \\'PLN_CORRIDOR_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n            FPC.project_id,\\n            FPC.tower,\\n            FPC.[Level_ID],\\n            --FPC.sclicer,\\n            CAST(REPLACE(FPC.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n            FPC.Type_of_work,\\n            FPC.ACTIVITY_ID\\n        FROM [DWH].[PLN_CORRIDOR_FACT] FPC \\n        WHERE\\n            LOWER(FPC.Type_of_work) IN (\\n                                        \\'CORRIDOR Floor Tile\\',\\n                                        \\'CORRIDOR Wall Tile\\',\\n                                        \\'CORRIDOR FC Boarding\\'\\n                                        )\\n            AND (FPC.value LIKE \\'1%\\'\\n                OR FPC.value LIKE \\'2%\\'\\n                OR FPC.value LIKE \\'3%\\'\\n                OR FPC.value LIKE \\'4%\\'\\n                OR FPC.value LIKE \\'5%\\'\\n                OR FPC.value LIKE \\'6%\\'\\n                OR FPC.value LIKE \\'7%\\'\\n                OR FPC.value LIKE \\'8%\\'\\n                OR FPC.value LIKE \\'9%\\'\\n                ) \\n) CAR\\nGROUP BY project_id,Type_of_work\\n',",
						"     format: 'query',",
						"     staged: true) ~> CORRIDORGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,0),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n                KAR.project_id,\\n                KAR.Type_of_work,\\n                SUM(KAR.value) AS SUM_ALL,\\n                    \\'PLN_KITCHENAREA_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n                FPK.project_id,\\n                FPK.tower,\\n                FPK.[Level_ID],\\n                FPK.Flat,\\n               -- FPK.sclicer,\\n                CAST(REPLACE(CASE WHEN FPK.value= \\'#N/A\\' THEN NULL ELSE FPK.value END ,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n                FPK.Type_of_work,\\n                FPK.ACTIVITY_ID\\n            FROM [DWH].[PLN_KITCHENAREA_FACT] FPK \\n            WHERE\\n                LOWER(FPK.Type_of_work) IN (\\n                                            \\'Kitchen Appliances\\'\\n                                            )\\n                AND (FPK.value LIKE \\'1%\\'\\n                    OR FPK.value LIKE \\'2%\\'\\n                    OR FPK.value LIKE \\'3%\\'\\n                    OR FPK.value LIKE \\'4%\\'\\n                    OR FPK.value LIKE \\'5%\\'\\n                    OR FPK.value LIKE \\'6%\\'\\n                    OR FPK.value LIKE \\'7%\\'\\n                    OR FPK.value LIKE \\'8%\\'\\n                    OR FPK.value LIKE \\'9%\\'\\n                    )\\n) KAR\\nGROUP BY project_id,Type_of_work\\n',",
						"     format: 'query',",
						"     staged: true) ~> KITCHENGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,0),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n                BAR.project_id,\\n                BAR.Type_of_work,\\n                SUM(BAR.value) AS SUM_ALL,\\n                    \\'PLN_BALCONYAREA_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n                FPB.project_id,\\n                FPB.tower,\\n                FPB.[Level_ID],\\n                FPB.Flat,\\n                --FPB.sclicer,\\n                CAST(REPLACE(FPB.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n                FPB.Type_of_work,\\n                FPB.ACTIVITY_ID\\n            FROM [DWH].[PLN_BALCONYAREA_FACT] FPB \\n            WHERE\\n                LOWER(FPB.Type_of_work) IN (\\n                                            \\'EIFS Installation\\'\\n                                            )\\n                AND (FPB.value LIKE \\'1%\\'\\n                    OR FPB.value LIKE \\'2%\\'\\n                    OR FPB.value LIKE \\'3%\\'\\n                    OR FPB.value LIKE \\'4%\\'\\n                    OR FPB.value LIKE \\'5%\\'\\n                    OR FPB.value LIKE \\'6%\\'\\n                    OR FPB.value LIKE \\'7%\\'\\n                    OR FPB.value LIKE \\'8%\\'\\n                    OR FPB.value LIKE \\'9%\\'\\n                    )\\n) BAR\\nGROUP BY project_id,Type_of_work\\n',",
						"     format: 'query',",
						"     staged: true) ~> BALCONYGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,2),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n                SGS.project_id,\\n                \\'Sliding Door\\' AS Type_of_work,\\n                SUM(Multiply_Factor*SUM_ALL) AS SUM_ALL,\\n                \\'PLN_DRYAREA_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n                SDR.project_id,\\n                SDR.Type_of_work,\\n                    CASE \\n                    WHEN Type_of_work = \\'Sliding Door Box Installation\\'     THEN 0.1\\n                    WHEN Type_of_work = \\'Sliding Door Frame Installation\\'     THEN 0.2\\n                    WHEN Type_of_work = \\'Sliding Door Glass Installation\\'     THEN 0.45\\n                    WHEN Type_of_work = \\'Sliding Door Internal Silicone\\'     THEN 0.1\\n                    WHEN Type_of_work = \\'Sliding Door Alignment\\'             THEN 0.05\\n                    WHEN Type_of_work = \\'Sliding Door External Silicone\\'     THEN 0.1\\n                END AS Multiply_Factor,\\n                SUM(SDR.value) AS SUM_ALL\\nFROM (\\nSELECT \\n            FPD.project_id,\\n            FPD.tower,\\n            FPD.[Level_ID],\\n            FPD.Flat,\\n            --FPD.sclicer,\\n            CAST(REPLACE(FPD.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n            FPD.Type_of_work,\\n            FPD.ACTIVITY_ID\\n        FROM [DWH].[PLN_DRYAREA_FACT] FPD \\n        WHERE\\n            LOWER(FPD.Type_of_work) IN (\\n                                        \\'Sliding Door Box Installation\\',\\n                                        \\'Sliding Door Frame Installation\\',\\n                                        \\'Sliding Door Glass Installation\\',\\n                                        \\'Sliding Door Internal Silicone\\',\\n                                        \\'Sliding Door Alignment\\',\\n                                        \\'Sliding Door External Silicone\\'\\n                                        )\\n            AND (FPD.value LIKE \\'1%\\'\\n                OR FPD.value LIKE \\'2%\\'\\n                OR FPD.value LIKE \\'3%\\'\\n                OR FPD.value LIKE \\'4%\\'\\n                OR FPD.value LIKE \\'5%\\'\\n                OR FPD.value LIKE \\'6%\\'\\n                OR FPD.value LIKE \\'7%\\'\\n                OR FPD.value LIKE \\'8%\\'\\n                OR FPD.value LIKE \\'9%\\'\\n                )\\n) SDR\\nGROUP BY project_id,Type_of_work\\n)SGS\\nGROUP BY project_id\\n',",
						"     format: 'query',",
						"     staged: true) ~> SLIDINGDOORGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,2),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n                SGS.project_id,\\n                \\'Kitchen Cabinet\\' AS Type_of_work,\\n                SUM(Multiply_Factor*SUM_ALL) AS SUM_ALL,\\n                \\'PLN_KITCHENAREA_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n                SDR.project_id,\\n                SDR.Type_of_work,\\n                SUM(SDR.value) AS SUM_ALL,\\n                    CASE \\n                    WHEN Type_of_work = \\'Kitchen Cabinet\\'                 THEN 0.5\\n                    WHEN Type_of_work = \\'Kitchen Counter Plywood\\'         THEN 0.1\\n                    WHEN Type_of_work = \\'Kitchen Counter Top\\'             THEN 0.2\\n                    WHEN Type_of_work = \\'Kitchen Counter Top Skirting\\'     THEN 0.1\\n                    WHEN Type_of_work = \\'Kitchen Cabinet Grouting\\'         THEN 0.05\\n                    WHEN Type_of_work = \\'Kitchen Cabinet Silicone\\'         THEN 0.05\\n                END AS Multiply_Factor\\nFROM (\\nSELECT \\n            FPK.project_id,\\n            FPK.tower,\\n            FPK.[Level_ID],\\n            FPK.Flat,\\n           -- FPK.sclicer,\\n            CAST(REPLACE(FPK.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n            FPK.Type_of_work,\\n            FPK.ACTIVITY_ID\\n        FROM [DWH].[PLN_KITCHENAREA_FACT] FPK \\n        WHERE\\n            LOWER(FPK.Type_of_work) IN (\\n                                        \\'Kitchen Cabinet\\',\\n                                        \\'Kitchen Counter Plywood\\',\\n                                        \\'Kitchen Counter Top\\',\\n                                        \\'Kitchen Counter Top Skirting\\',\\n                                        \\'Kitchen Cabinet Grouting\\',\\n                                        \\'Kitchen Cabinet Silicone\\'\\n                                        )\\n            AND (FPK.value LIKE \\'1%\\'\\n                OR FPK.value LIKE \\'2%\\'\\n                OR FPK.value LIKE \\'3%\\'\\n                OR FPK.value LIKE \\'4%\\'\\n                OR FPK.value LIKE \\'5%\\'\\n                OR FPK.value LIKE \\'6%\\'\\n                OR FPK.value LIKE \\'7%\\'\\n                OR FPK.value LIKE \\'8%\\'\\n                OR FPK.value LIKE \\'9%\\'\\n                )\\n) SDR\\nGROUP BY project_id,Type_of_work\\n)SGS\\nGROUP BY project_id\\n',",
						"     format: 'query',",
						"     staged: true) ~> KITCHENCABINETGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,0),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n                KAA.project_id,\\n                KAA.Type_of_work,\\n                (KAA.SUM_ALL*100) AS SUM_ALL,\\n                \\'PLN_KEEPOUT_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n                KAR.project_id,\\n                KAR.Type_of_work,\\n                SUM(KAR.value) AS SUM_ALL\\nFROM (\\nSELECT \\n                FPK.project_id,\\n                FPK.tower,\\n                --FPK.[Level_ID],\\n                FPK.Flat,\\n                \\'Keep Out\\' AS sclicer,\\n                CAST(REPLACE(FPK.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n                FPK.Type_of_work,\\n                FPK.ACTIVITY_ID\\n            FROM [DWH].[PLN_KEEPOUT_FACT] FPK \\n            WHERE\\n                LOWER(FPK.Type_of_work) IN (\\n                                            \\'Bathroom Stamp - Civil (L9)\\',\\n                                            \\'Kitchen Stamp - Civil (I9)\\',\\n                                            \\'Keep Out (QT)\\'\\n                                            )\\n                AND (FPK.value LIKE \\'1%\\'\\n                    OR FPK.value LIKE \\'2%\\'\\n                    OR FPK.value LIKE \\'3%\\'\\n                    OR FPK.value LIKE \\'4%\\'\\n                    OR FPK.value LIKE \\'5%\\'\\n                    OR FPK.value LIKE \\'6%\\'\\n                    OR FPK.value LIKE \\'7%\\'\\n                    OR FPK.value LIKE \\'8%\\'\\n                    OR FPK.value LIKE \\'9%\\'\\n                    )\\n) KAR\\nGROUP BY project_id,Type_of_work,tower,ACTIVITY_ID\\n)KAA\\nGROUP BY project_id,Type_of_work,SUM_ALL\\n',",
						"     format: 'query',",
						"     staged: true) ~> KEEPOUTGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,1),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n                BGS.project_id,\\n                \\'Blockwork\\' AS Type_of_work,\\n                SUM(BGS.Multiply_Factor*BGS.SUM_ALL) AS SUM_ALL,\\n                \\'PLN_DRYAREA_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n                BWR.project_id,\\n                BWR.Type_of_work,\\n                SUM(BWR.value) AS SUM_ALL,\\n                    CASE \\n                    WHEN Type_of_work = \\'Blockwork First Layer\\'     THEN 0.2\\n                    WHEN Type_of_work = \\'Blockwork\\'                 THEN 0.4\\n                    WHEN Type_of_work = \\'GI Lintel\\'                 THEN 0.1\\n                    WHEN Type_of_work = \\'Above Lintel Block Work\\'     THEN 0.3\\n                END AS Multiply_Factor\\nFROM (\\nSELECT \\n            FPD.project_id,\\n            FPD.tower,\\n            FPD.[Level_ID],\\n            FPD.Flat,\\n            --FPD.sclicer,\\n            CAST(REPLACE(FPD.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n            FPD.Type_of_work,\\n            FPD.ACTIVITY_ID\\n        FROM [DWH].[PLN_DRYAREA_FACT] FPD \\n        WHERE\\n            LOWER(FPD.Type_of_work) IN (\\'Blockwork First Layer\\',\\'Blockwork\\',\\'GI Lintel\\',\\'Above Lintel Block Work\\')\\n            AND (FPD.value LIKE \\'1%\\'OR FPD.value LIKE \\'2%\\'OR FPD.value LIKE \\'3%\\'OR FPD.value LIKE \\'4%\\'OR FPD.value LIKE \\'5%\\' OR FPD.value LIKE \\'6%\\'OR FPD.value LIKE \\'7%\\'OR FPD.value LIKE \\'8%\\'\\n                OR FPD.value LIKE \\'9%\\' )\\n) BWR\\nGROUP BY project_id,Type_of_work\\n)BGS\\nGROUP BY project_id\\n',",
						"     format: 'query',",
						"     staged: true) ~> BLOCKWORKGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(38,1),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n                BGS.project_id,\\n                \\'Balustrade Works\\' AS Type_of_work,\\n                SUM(BGS.Multiply_Factor*BGS.SUM_ALL) AS SUM_ALL,\\n                \\'PLN_DRYAREA_FACT\\' AS Source_Table\\nFROM (\\nSELECT \\n                BWR.project_id,\\n                BWR.Type_of_work,\\n                SUM(BWR.value) AS SUM_ALL,\\n                    CASE \\n                    WHEN Type_of_work = \\'F channel Installation\\'             THEN 0.2\\n                    WHEN Type_of_work = \\'Top Rail Bracket Installation\\'        THEN 0.2\\n                    WHEN Type_of_work = \\'Balustrade Glass Installation\\'        THEN 0.2\\n                    WHEN Type_of_work = \\'Balustrade Top Rail\\'                 THEN 0.2\\n                    WHEN Type_of_work = \\'Balustrade-Internal Flashing\\'        THEN 0.2\\n                END AS Multiply_Factor\\nFROM (\\nSELECT \\n            FPB.project_id,\\n            FPB.tower,\\n            FPB.[Level_ID],\\n            FPB.Flat,\\n            --FPB.sclicer,\\n            CAST(REPLACE(FPB.value,\\'%\\',\\'\\') AS DECIMAL) AS value,\\n            FPB.Type_of_work,\\n            FPB.ACTIVITY_ID\\n        FROM [DWH].[PLN_DRYAREA_FACT] FPB \\n        WHERE\\n            LOWER(FPB.Type_of_work) IN (\\'F channel Installation\\',\\'Top Rail Bracket Installation\\',\\'Balustrade Glass Installation\\',\\'Balustrade Top Rail\\',\\'Balustrade-Internal Flashing\\')\\n            AND (FPB.value LIKE \\'1%\\'OR FPB.value LIKE \\'2%\\'OR FPB.value LIKE \\'3%\\'OR FPB.value LIKE \\'4%\\'OR FPB.value LIKE \\'5%\\'OR FPB.value LIKE \\'6%\\'OR FPB.value LIKE \\'7%\\'OR FPB.value LIKE \\'8%\\'OR FPB.value LIKE \\'9%\\')\\n) BWR\\nGROUP BY project_id,Type_of_work\\n)BGS\\nGROUP BY project_id\\n',",
						"     format: 'query',",
						"     staged: true) ~> BALUSTRADEWORKSGAANTFINAL",
						"source(output(",
						"          project_id as integer,",
						"          Type_of_work as string,",
						"          SUM_ALL as decimal(30,2),",
						"          Source_Table as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n            P.project_id,\\n            SGF.Type_of_work,\\n            (SGF.SUM_ALL*P.FLAT_COUNT)*100 AS SUM_ALL,\\n            SGF.Source_Table\\nFROM (\\nSELECT \\n            Project_Identifier AS project_id,\\n               --GS_Count,\\n            \\'Grade Slab\\' AS  Type_of_work,\\n            --GS_COMPLETED ,\\n            CAST((GS_COMPLETED/GS_Count) AS DECIMAL(15,2)) AS SUM_ALL,\\n               \\'PLN_STRUCTURE_FACT\\' AS Source_Table\\n--INTO GRADE_SLAB_FINAL\\nFROM (\\nSELECT     \\n            P.Project_Identifier,\\n            COUNT(*) AS GS_Count,GS_COMPLETED\\n        FROM [STG].[O_PLN_STRUCTURES_POUR_MAP_STG]  OSPM \\n            LEFT JOIN [DWH].[PLN_PROJECTS_DIM] P \\n            ON OSPM.project_id  = P.Project_Identifier\\n          LEFT JOIN\\n( SELECT \\n            p.Project_Identifier,\\n            COUNT(FPS.[Level_ID]) AS GS_COMPLETED\\n        FROM [DWH].[PLN_STRUCTURE_FACT] FPS\\n          LEFT JOIN [DWH].[PLN_PROJECTS_DIM] P \\n            ON FPS.project_id  = P.project_id\\n          LEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] L \\n            ON FPS.[Level_ID]  = L.[Level_Map_ID]\\n        WHERE LOWER(L.[Level]) LIKE \\'%grade slab%\\' \\n            AND value IS NOT NULL \\n        GROUP BY p.Project_Identifier\\n)  GSCM ON P.Project_Identifier = GSCM.Project_Identifier\\nWHERE LOWER(OSPM.type_of_pour) LIKE \\'slab%\\'\\n          GROUP BY P.Project_Identifier,GS_COMPLETED\\n) GSCU\\n\\nUNION ALL \\n\\nSELECT \\n        CV.Project_Identifier AS project_id,\\n          CV.Area AS Type_of_work,\\n        --A.Total_Completed,\\n        CAST((A.Total_Completed/CV.Value) AS DECIMAL(15,2)) AS SUM_ALL,\\n          \\'PLN_STRUCTURE_FACT\\' AS Source_Table\\n--INTO OTHER_SLABS_FINAL\\nFROM (\\n SELECT Project_Identifier, Area,Value\\n --INTO COUNT_VALUE\\n FROM (SELECT *,\\n          (Total_Podiums*Podium_Slab) AS PODIUM_COUNT,\\n        (Total_Typical_Floor*Typical_Floor_Slab) AS TYPICAL_FLOOR_COUNT\\nFROM [DWH].[PLN_PROJECTS_DIM] ) p\\n            CROSS APPLY ( \\n                                     SELECT [PODIUM_COUNT],\\'Podium\\' \\n                    UNION ALL SELECT [TYPICAL_FLOOR_COUNT],\\'Typical Floor\\' \\n                                ) AS Virtual_table(Value,Area)\\nWHERE Value IS NOT NULL ) CV\\nLEFT JOIN  (\\nSELECT \\n            P.Project_Identifier,\\n            OPTPM.Area ,\\n            COUNT(FPS.Pour) Total_Completed \\n--INTO ACTUALS_OTHER_SLABS\\n        FROM [DWH].[PLN_STRUCTURE_FACT]  FPS\\n               LEFT JOIN [DWH].[PLN_PROJECTS_DIM] P \\n            ON FPS.project_id  = P.project_id\\n               LEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] L \\n            ON FPS.[Level_ID]  = L.[Level_Map_ID]\\n            LEFT JOIN [STG].[O_PLN_TOWER_PODIUM_MAP_STG]  OPTPM\\n                ON P.Project_Identifier = OPTPM.Project \\n WHERE FPS.Pour LIKE \\'slab%\\' AND\\n             LOWER(TRIM(L.[Level]))!= \\'grade slab\\'\\n        GROUP BY P.Project_Identifier,OPTPM.Area\\n) A ON  CV.Project_Identifier = A.Project_Identifier\\n                        AND CV.Area = A.Area\\n) SGF\\nLEFT JOIN [DWH].[PLN_PROJECTS_DIM] P \\n                ON SGF.project_id = P.Project_Identifier\\n',",
						"     format: 'query',",
						"     staged: true) ~> STRUCTUREGAANTFINAL",
						"source(output(",
						"          ID as integer,",
						"          Sort_ID as integer,",
						"          Project_Identifier as string,",
						"          FLAT_COUNT as integer,",
						"          Project_Short as string,",
						"          Total_Floors as integer,",
						"          Total_Podiums as integer,",
						"          Total_Typical_Floor as integer,",
						"          Typical_Floor_Slab as integer,",
						"          Podium_Slab as integer,",
						"          ONE_BHK as integer,",
						"          TWO_BHK as integer,",
						"          ONE_FIVE_BHK as integer,",
						"          TWO_FIVE_BHK as integer,",
						"          THEREE_BHK as integer,",
						"          FOUR_BHK as integer,",
						"          FIVE_BHK as integer,",
						"          Actual_Start as timestamp,",
						"          BOQ_Value as string,",
						"          Bathrooms as integer,",
						"          Center_Tower as string,",
						"          Built_Up_Area as string,",
						"          Chairman_Lift as string,",
						"          Delay as string,",
						"          Duplex as string,",
						"          Fire_Lifts as integer,",
						"          Forecast_Duration as integer,",
						"          Forecast_Finish as timestamp,",
						"          Lat as string,",
						"          Long as string,",
						"          Office_Space as integer,",
						"          Office_Use_Lift as integer,",
						"          Parkings as integer,",
						"          Pent_House as integer,",
						"          Passenger_Lift as integer,",
						"          Project_Configuration as string,",
						"          Project_Duration as integer,",
						"          Project_Finish as timestamp,",
						"          Project_Start as timestamp,",
						"          Residence_Use_Lift as integer,",
						"          Retail as integer,",
						"          Service_Lift as integer,",
						"          Staircase_GF_L1 as integer,",
						"          Staircase_GF_Roof as integer,",
						"          Total_Units as integer,",
						"          Tower_A as string,",
						"          Tower_B as string,",
						"          Tower_C as string,",
						"          Tower_D as string,",
						"          Towers as string,",
						"          Image_Link as string,",
						"          Render_Image as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> PLNPROJECTSDIM",
						"source(output(",
						"          Upload_Time as date,",
						"          project_id as integer,",
						"          Group as string,",
						"          Activity_Description as string,",
						"          Baseline_Start_Date as date,",
						"          Baseline_Finish_Date as date,",
						"          Total_days as integer,",
						"          Days_elapsed as integer,",
						"          Completion_plan as integer,",
						"          Source_Templet as string,",
						"          Sort_Group as integer,",
						"          Sort_Activity as integer,",
						"          Activity_New as string,",
						"          FLAT_COUNT as integer,",
						"          Actual_Percentage as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: '\\n\\nSELECT \\n        DC.Upload_Time,\\n        P.project_id,\\n        DC.[Group],\\n        DC.[Activity_Description],\\n        DC.[Baseline_Start_Date],\\n        DC.[Baseline_Finish_Date],\\n        DATEDIFF(DAY,DC.[Baseline_Finish_Date], DC.[Baseline_Start_Date]) AS Total_days,\\n        DATEDIFF(DAY,GETDATE(), DC.[Baseline_Start_Date]) AS Days_elapsed,\\n        CASE WHEN DATEDIFF(DAY,DC.[Baseline_Finish_Date], DC.[Baseline_Start_Date]) = 0 THEN 0\\n            WHEN (DATEDIFF(DAY,GETDATE(), DC.[Baseline_Start_Date])/ DATEDIFF(DAY,DC.[Baseline_Finish_Date], DC.[Baseline_Start_Date])) < 1\\n                AND (DATEDIFF(DAY,GETDATE(), DC.[Baseline_Start_Date])/ DATEDIFF(DAY,DC.[Baseline_Finish_Date], DC.[Baseline_Start_Date])) > 0 \\n                THEN (DATEDIFF(DAY,GETDATE(), DC.[Baseline_Start_Date])/ DATEDIFF(DAY,DC.[Baseline_Finish_Date], DC.[Baseline_Start_Date]))\\n            WHEN (DATEDIFF(DAY,GETDATE(), DC.[Baseline_Start_Date])/ DATEDIFF(DAY,DC.[Baseline_Finish_Date], DC.[Baseline_Start_Date])) < 0 THEN 0\\n                ELSE 1\\n            END AS Completion_plan,\\n        CASE\\n--             For Manual Entry\\n            WHEN DC.[Group] = \\'Structural Works\\' AND DC.[Activity_Description] IN (\\'Pile Cap\\',\\'Pile\\')  THEN \\'MANUAL_ENTRY\\'\\n            WHEN DC.[Group] = \\'External Elevation\\' AND DC.[Activity_Description] IN (\\'ACP Works\\')  THEN \\'MANUAL_ENTRY\\'\\n            WHEN DC.[Group] = \\'Other & Specialist\\' AND DC.[Activity_Description] IN (\\n                                                                                    \\'Lift - CTU\\',\\n                                                                                    \\'Lift - Balance passenger lifts\\',\\n                                                                                    \\'Swimming Pool\\',\\n                                                                                    \\'Kids Play Area/ Outdoor Play Area\\',\\n                                                                                    \\'Changing Rooms / GYM\\',\\n                                                                                    \\'Wooden Decking\\'\\n                                                                                    )  THEN \\'MANUAL_ENTRY\\'\\n            WHEN DC.[Group] = \\'Authority Approvals\\' AND DC.[Activity_Description] IN ( \\n                                                                                    \\'Transformer payment\\',\\n                                                                                    \\'LV Inspection & Approval\\',\\n                                                                                    \\'BCC - Inspection & Approval\\',\\n                                                                                    \\'Power on\\'\\n                                                                                    ) THEN \\'MANUAL_ENTRY\\'\\n--         For Structures\\n            WHEN DC.[Group] = \\'Structural Works\\' AND DC.[Activity_Description] IN (\\'Grade Slab\\',\\'Podium Slabs\\',\\'Typical Floor Slabs\\')  THEN \\'PLN_STRUCTURE_FACT\\'\\n            WHEN DC.[Group] = \\'Structural Works\\' AND DC.[Activity_Description] NOT IN (\\'Pile\\',\\'Pile Cap\\',\\'Grade Slab\\',\\'Podium Slabs\\',\\'Typical Floor Slabs\\')  THEN \\'TBD\\'\\n--         For Dry Area\\n            WHEN DC.[Group] = \\'Masonary Works\\' AND DC.[Activity_Description] IN (\\'Blockworks\\')  THEN \\'PLN_DRYAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Finishes - Dry Area\\' THEN \\'PLN_DRYAREA_FACT\\'\\n            WHEN DC.[Group] = \\'External Elevation\\' AND DC.[Activity_Description] IN (\\'Sliding Door\\')  THEN \\'PLN_DRYAREA_FACT\\'\\n--         For Wet Area    \\n            WHEN DC.[Group] = \\'Finishes - Wet Area\\' THEN \\'PLN_WETAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Joinery Works\\' AND DC.[Activity_Description] IN (\\'Vanity Cabinet\\')  THEN \\'PLN_WETAREA_FACT\\'\\n--         For Corridor Area\\n            WHEN DC.[Group] = \\'Finishes - Corridor\\' THEN \\'PLN_CORRIDOR_FACT\\'\\n--         For Balcony Area\\n            WHEN DC.[Group] = \\'External Elevation\\' AND DC.[Activity_Description] IN (\\'EIFS\\',\\'Balustrade Works\\')  THEN \\'PLN_BALCONYAREA_FACT\\'\\n--         For Kitchen Area\\n            WHEN DC.[Group] = \\'Other & Specialist\\' AND DC.[Activity_Description] IN (\\'Kitchen Appliances\\')  THEN \\'PLN_KITCHENAREA_FACT\\'\\n            WHEN DC.[Group] = \\'Joinery Works\\' AND DC.[Activity_Description] IN (\\'Kitchen Cabinet\\')  THEN \\'PLN_KITCHENAREA_FACT\\'\\n--         For KeepOut Area\\n            WHEN DC.[Group] = \\'Keepout\\' THEN \\'PLN_KEEPOUT_FACT\\'\\n--         Yet to be Decided\\n            WHEN DC.[Group] = \\'Authority Approvals\\' AND DC.[Activity_Description] NOT IN ( \\n                                                                                    \\'Transformer payment\\',\\n                                                                                    \\'LV Inspection & Approval\\',\\n                                                                                    \\'BCC - Inspection & Approval\\',\\n                                                                                    \\'Power on\\'\\n                                                                                    ) THEN \\'TBD\\'\\n            WHEN DC.[Group] = \\'External Elevation\\' AND DC.[Activity_Description] NOT IN (\\'Sliding Door\\',\\'EIFS\\',\\'Balustrade Works\\',\\'ACP Works\\')  THEN \\'TBD\\'\\n            WHEN DC.[Group] = \\'Other & Specialist\\' AND DC.[Activity_Description] NOT IN (\\n                                                                                    \\'Kitchen Appliances\\',\\n                                                                                    \\'Lift - CTU\\',\\n                                                                                    \\'Lift - Balance passenger lifts\\',\\n                                                                                    \\'Swimming Pool\\',\\n                                                                                    \\'Kids Play Area/ Outdoor Play Area\\',\\n                                                                                    \\'Changing Rooms / GYM\\',\\n                                                                                    \\'Wooden Decking\\')  THEN \\'TBD\\'\\n            WHEN DC.[Group] = \\'Joinery Works\\' AND DC.[Activity_Description] NOT IN (\\'Vanity Cabinet\\',\\'Kitchen Cabinet\\')  THEN \\'TBD\\'\\n            ELSE \\'MISSING\\'\\n        END AS Source_Templet,\\n        OLMP.Sort_Group,\\n        OLMP.Sort_Activity,\\n        OLMP.Activity_New,\\n        P.FLAT_COUNT,\\n        DC.[Actual_Percentage]\\n--INTO #MILESTONE_MAIN_TABLE_Plan\\nFROM (\\nSELECT\\n        CAST(OPM.upload_time AS DATE) AS Upload_Time,\\n        OPM.project_id,\\n        OPM.[Group],\\n        OPM.[Activity_Description],\\n       -- REPLACE(OPM.[Baseline_Start],\\'-\\',\\'/\\') AS  [Baseline_Start_Date],\\n          CAST(REPLACE(OPM.[Baseline_Start],\\'-\\',\\'/\\') AS DATE) AS  [Baseline_Start_Date],[Baseline_Start],[Baseline_Finish],\\n          CAST(REPLACE(OPM.[Baseline_Finish],\\'-\\',\\'/\\') AS DATE) AS [Baseline_Finish_Date],\\n        DENSE_RANK() OVER( PARTITION BY OPM.project_id ORDER BY CAST(OPM.upload_time AS DATE) DESC) DENSERANK,\\n        OPM.[Actual_Percentage]\\n    FROM\\n        [STG].[O_PLN_MILESTONE_STG] OPM\\n        WHERE \\n        (OPM.[Group] IS NOT NULL AND TRIM(OPM.[Group]) NOT IN (\\'\\')\\n                AND OPM.[Activity_Description] IS NOT NULL AND TRIM(OPM.[Activity_Description]) NOT IN (\\'\\')\\n                AND OPM.[Baseline_Start] IS NOT NULL AND TRIM(OPM.[Baseline_Start]) NOT IN (\\'\\')\\n                AND OPM.[Baseline_Finish] IS NOT NULL AND TRIM(OPM.[Baseline_Finish]) NOT IN (\\'\\')\\n                )\\n) DC\\nLEFT JOIN [STG].[O_PLN_MILESTONE_MAP_STG] OLMP\\n                ON DC.[Group] = OLMP.[Group] \\n     AND DC.[Activity_Description] = OLMP.Activity\\nLEFT JOIN [DWH].[PLN_PROJECTS_DIM] P\\n                ON DC.project_id = P.Project_Identifier\\nWHERE DC.DENSERANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> MILESTONEMAINTABLEPlan",
						"source(output(",
						"          Upload_Date as date,",
						"          project_id as integer,",
						"          Actual_Percentage as decimal(24,6),",
						"          Legend as string,",
						"          Sort_Group as integer,",
						"          Sort_Activity as integer,",
						"          Group as string,",
						"          Activity as string,",
						"          Activity_New as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n        Upload_Time AS Upload_Date,\\n        project_id,\\n        --Description,\\n        [Actual_Percentage],\\n        \\'Actuals\\' AS Legend,\\n        OPMP.*\\n--INTO #Manual_Actuals\\nFROM (\\nSELECT \\n    CAST(OPM.upload_time AS DATE) AS Upload_Time,\\n    project_id,\\n    tower,\\n    sbu_id,\\n     [Activity],\\n    --Description,\\n    CASE \\n        WHEN [Actual_Percentage] IS NULL OR TRIM([Actual_Percentage]) IN (\\'\\') THEN 0\\n        ELSE ISNULL(CAST(REPLACE([Actual_Percentage],\\'%\\',\\'\\') AS DECIMAL),0.00)/100 \\n    END AS [Actual_Percentage],\\n    DENSE_RANK () OVER (PARTITION BY project_id ORDER BY CAST(OPM.upload_time AS DATE) DESC)  DenseRanker\\nFROM  [DWH].[PLN_MILESTONE_ACTUALS_TEMP_FACT] OPM\\n) C1\\nLEFT JOIN STG.O_PLN_MILESTONE_MAP_STG OPMP ON C1.[Activity] = OPMP.[Activity]\\n    WHERE DenseRanker = 1',",
						"     format: 'query',",
						"     staged: true) ~> ManualActuals",
						"source(output(",
						"          Sort_Group as integer,",
						"          Sort_Activity as decimal(12,1),",
						"          Group as string,",
						"          Activity as string,",
						"          Activity_New as string,",
						"          Legend as string,",
						"          NEW_ACT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    Sort_Group,\\n    Sort_Activity+0.1 AS Sort_Activity,\\n    [Group],\\n    Activity,\\n    Activity_New,\\n    \\'Actuals\\' AS Legend,\\n    CONCAT(Activity_New,\\' : (A)\\') AS NEW_ACT  \\nFROM STG.O_PLN_MILESTONE_MAP_STG opmm \\nUNION ALL \\nSELECT \\n    Sort_Group,\\n    Sort_Activity,\\n    [Group],\\n    Activity,\\n    Activity_New,\\n    \\'Plan\\' AS Legend,\\n    CONCAT(Activity_New,\\' : (P)\\') AS NEW_ACT  \\nFROM STG.O_PLN_MILESTONE_MAP_STG opmm',",
						"     format: 'query',",
						"     staged: true) ~> OPLNMILESTONEMAPSTG",
						"Finalselect keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"DRYAREAGAANTFINAL, WETAREAGAANTFINAL, CORRIDORGAANTFINAL, KITCHENGAANTFINAL, BALCONYGAANTFINAL, SLIDINGDOORGAANTFINAL, KITCHENCABINETGAANTFINAL, KEEPOUTGAANTFINAL, BLOCKWORKGAANTFINAL, BALUSTRADEWORKSGAANTFINAL, STRUCTUREGAANTFINAL union(byName: true)~> union1",
						"union1 derive(Milestone_Activity_Map = case(     \r",
						"     trim(Type_of_work) == 'FC BOARDING WITH JOINT TAPING' && Source_Table == 'PLN_DRYAREA_FACT','False Ceiling - Boarding',\r",
						"     trim(Type_of_work) == 'Plaster' && Source_Table == 'PLN_DRYAREA_FACT','Plaster',\r",
						"     trim(Type_of_work) == 'Screed' && Source_Table == 'PLN_DRYAREA_FACT','Screed',\r",
						"     trim(Type_of_work) == 'Floor Tiling' && Source_Table == 'PLN_DRYAREA_FACT','Floor Tiles',\r",
						"     trim(Type_of_work) == 'FC Framing' && Source_Table == 'PLN_DRYAREA_FACT','False Ceiling - Framing',\r",
						"     trim(Type_of_work) == 'Kitchen Cabinet' && Source_Table == 'PLN_KITCHENAREA_FACT','Kitchen Cabinet',\r",
						"     trim(Type_of_work) == 'KITCHEN APPLIANCES' && Source_Table == 'PLN_KITCHENAREA_FACT','Kitchen Appliances',\r",
						"     trim(Type_of_work) == 'Sliding Door' && Source_Table == 'PLN_DRYAREA_FACT','Sliding Door',\r",
						"     trim(Type_of_work) == 'Blockwork' && Source_Table == 'PLN_DRYAREA_FACT','Blockwork',\r",
						"     trim(Type_of_work) == 'Balustrade Works' && Source_Table == 'PLN_DRYAREA_FACT','Balustrade Works',\r",
						"     trim(Type_of_work) == 'Floor Tile' && Source_Table == 'PLN_CORRIDOR_FACT','Floor Tiles',\r",
						"    trim(Type_of_work) == 'CORRIDOR FLOOR TILE' && Source_Table == 'PLN_CORRIDOR_FACT','Floor Tiles',\r",
						"     trim(Type_of_work) == 'Wall Tile'  && Source_Table == 'PLN_CORRIDOR_FACT','Wall Tiles',\r",
						"    trim(Type_of_work) == 'CORRIDOR WALL TILE'  && Source_Table == 'PLN_CORRIDOR_FACT','Wall Tiles',\r",
						"     trim(Type_of_work) == 'FC Boarding' && Source_Table == 'PLN_CORRIDOR_FACT','False Ceiling - Boarding',\r",
						"    trim(Type_of_work) == 'CORRIDOR FC BOARDING' && Source_Table == 'PLN_CORRIDOR_FACT','False Ceiling - Boarding',\r",
						"     trim(Type_of_work)  == 'WET AREA SCREED'&& Source_Table == 'PLN_WETAREA_FACT','Screed',\r",
						"     trim(Type_of_work)  == 'Wet Area MEP H/L Boarding Clearance'&& Source_Table == 'PLN_WETAREA_FACT','MEP High Lvl',\r",
						"     trim(Type_of_work)  == 'WALL TILE BOTTOM TILE'&& Source_Table == 'PLN_WETAREA_FACT','Wall Tiles',\r",
						"     trim(Type_of_work)  == 'WET AREA FC FRAMING'&& Source_Table == 'PLN_WETAREA_FACT','False Ceiling - Framing',\r",
						"     trim(Type_of_work)  == 'FC BOARDING & JOINT TAPING'&& Source_Table == 'PLN_WETAREA_FACT','False Ceiling - Boarding',\r",
						"     trim(Type_of_work)  == 'Floor Tile'&& Source_Table == 'PLN_WETAREA_FACT','Floor Tiles',\r",
						"     trim(Type_of_work)  == 'Wet Area Final Fixtures Installation'&& Source_Table == 'PLN_WETAREA_FACT','MEP Final Fix',\r",
						"     trim(Type_of_work)  == 'Vanity Cabinet'&& Source_Table == 'PLN_WETAREA_FACT','Vanity Cabinet',\r",
						"     trim(Type_of_work)  == 'EIFS INSTALLATION'&& Source_Table == 'PLN_BALCONYAREA_FACT','EIFS',\r",
						"     trim(Type_of_work)  == 'Keep Out (QT)'&& Source_Table == 'PLN_KEEPOUT_FACT','CAP^Q Unit QT Keep-out approvals',\r",
						"     trim(Type_of_work)  == 'Kitchen Stamp - Civil (I9)'&& Source_Table == 'PLN_KEEPOUT_FACT','CAP^Q (Stamp - I9) Kitchen Keep-',\r",
						"     trim(Type_of_work)  == 'Bathroom Stamp - Civil (L9)'&& Source_Table == 'PLN_KEEPOUT_FACT','CAP^Q (Stamp - L9) Bathroom Keep',\r",
						"     trim(Type_of_work)  == 'Podium'&& Source_Table == 'PLN_STRUCTURE_FACT','Podium Slabs',\r",
						"     trim(Type_of_work)  == 'Grade Slab'&& Source_Table == 'PLN_STRUCTURE_FACT','Grade Slab',\r",
						"     trim(Type_of_work)  == 'Typical Floor'&& Source_Table == 'PLN_STRUCTURE_FACT','Typical Floor Slabs'\r",
						"     )) ~> ACTUALSCOLLECTOR",
						"MILESTONEMAINTABLE, PLNPROJECTSDIM join(project_id == Project_Identifier,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinwithProjectsDim",
						"joinwithProjectsDim, ACTUALSCOLLECTOR join(Sort_ID == union1@project_id",
						"     && Activity_Description == Milestone_Activity_Map",
						"     && Source_Templet == Source_Table,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinwithACTUALSCOLLECTOR",
						"joinwithACTUALSCOLLECTOR select(mapColumn(",
						"          Upload_Date = Upload_Time,",
						"          Project_ID = Sort_ID,",
						"          Group,",
						"          Activity_Description,",
						"          Activity_New,",
						"          Actual_Start_Date,",
						"          Actual_Finish_Date,",
						"          Total_days,",
						"          Days_elapsed,",
						"          Source_Templet,",
						"          Source_Table,",
						"          Sort_Group,",
						"          Sort_Activity,",
						"          Actual_Percentage,",
						"          FLAT_COUNT = MILESTONEMAINTABLE@FLAT_COUNT,",
						"          SUM_ALL,",
						"          Project_Identifier",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(Actual_Achived = toDecimal(SUM_ALL/FLAT_COUNT,12,4)) ~> ActualAchivedColumn",
						"ActualAchivedColumn select(mapColumn(",
						"          Upload_Date,",
						"          Project_ID,",
						"          Group,",
						"          Activity_Description,",
						"          Activity_New,",
						"          Actual_Start_Date,",
						"          Actual_Finish_Date,",
						"          Total_days,",
						"          Days_elapsed,",
						"          Source_Templet,",
						"          Source_Table,",
						"          Sort_Group,",
						"          Sort_Activity,",
						"          Actual_Percentage,",
						"          FLAT_COUNT,",
						"          SUM_ALL,",
						"          Project_Identifier,",
						"          Actual_Achived",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OUTPUTPlan",
						"OUTPUTPlan derive(Legend = 'Actuals') ~> LegendderivedColumnForOutputplan",
						"MILESTONEMAINTABLEPlan select(mapColumn(",
						"          Upload_Date = Upload_Time,",
						"          Project_ID = project_id,",
						"          Group,",
						"          Activity_Description,",
						"          Activity_New,",
						"          Actual_Achived = Completion_plan,",
						"          Actual_Start_Date = Baseline_Start_Date,",
						"          Actual_Finish_Date = Baseline_Finish_Date,",
						"          Total_days,",
						"          Days_elapsed,",
						"          Source_Templet,",
						"          Source_Table = Source_Templet,",
						"          Sort_Group,",
						"          Sort_Activity,",
						"          Actual_Percentage",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectListforMILESTONEMAINTABLEPlan",
						"select1 derive(Legend = 'Plan') ~> LegendderivedColumnForMILESTONEMAINTABLEPlan",
						"LegendderivedColumnForOutputplan, LegendderivedColumnForMILESTONEMAINTABLEPlan union(byName: true)~> UnionAllFinal",
						"UnionAllFinal, ManualActuals join(UnionAllFinal@Activity_New == ManualActuals@Activity_New",
						"     && UnionAllFinal@Project_ID == ManualActuals@project_id",
						"     && UnionAllFinal@Legend == ManualActuals@Legend,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          Upload_Date = UnionAllFinal@Upload_Date,",
						"          Project_ID = UnionAllFinal@Project_ID,",
						"          Group = UnionAllFinal@Group,",
						"          Activity_Description,",
						"          Activity_New = UnionAllFinal@Activity_New,",
						"          Actual_Start_Date,",
						"          Actual_Finish_Date,",
						"          Total_days,",
						"          Days_elapsed,",
						"          Source_Templet,",
						"          Source_Table,",
						"          Sort_Group = UnionAllFinal@Sort_Group,",
						"          Sort_Activity = UnionAllFinal@Sort_Activity,",
						"          Legend = UnionAllFinal@Legend,",
						"          Actual_Percentage = UnionAllFinal@Actual_Percentage,",
						"          Actual_Achived,",
						"          MAActual_Percentage = ManualActuals@Actual_Percentage,",
						"          Project_Identifier",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 derive(Actual_Achived = case((Legend == 'Actuals') && in (['BCC - Inspection & Approval','Power on','LV Inspection & Approval','Wooden Decking','ACP Works','Kids Play Area/ Outdoor Play Area','Swimming Pool','Changing Rooms / GYM','Lift - Balance passenger lifts','Lift - CTU','Pile Cap','Transformer payment','Pile'],trim (Activity_New))  , MAActual_Percentage,Actual_Achived )) ~> ActualAchivedderivedColumn",
						"ActualAchivedderivedColumn derive(Actual_Achived_New = case(iifNull(Actual_Achived,0) >1 ,toDecimal(1) ,iifNull(Actual_Achived,0))) ~> ActualAchivedderivedColumn2",
						"ActualAchivedderivedColumn2 derive(PLN_ACT = concat(Legend,' : ', toString( toDecimal( Actual_Achived_New*100,10,0)),'%')) ~> PLNACTderivedColumn",
						"PLNACTderivedColumn filter(!isNull(Activity_New)) ~> ActivityNewfilter",
						"ActivityNewfilter select(mapColumn(",
						"          Upload_Date,",
						"          Project_ID,",
						"          Group,",
						"          Activity_Description,",
						"          Activity_New,",
						"          Original_Actuals = Actual_Achived,",
						"          Actual_Achived = Actual_Achived_New,",
						"          Actual_Start_Date,",
						"          Actual_Finish_Date,",
						"          Total_days,",
						"          Days_elapsed,",
						"          Source_Templet,",
						"          Source_Table,",
						"          Sort_Group,",
						"          Sort_Activity,",
						"          Legend,",
						"          Actual_Percentage,",
						"          PLN_ACT,",
						"          Project_Identifier",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AUGGAANTTEST",
						"AUGGAANTTEST, OPLNMILESTONEMAPSTG join(AUGGAANTTEST@Legend == OPLNMILESTONEMAPSTG@Legend",
						"     && AUGGAANTTEST@Activity_New == OPLNMILESTONEMAPSTG@Activity_New",
						"     && Activity_Description == Activity",
						"     && AUGGAANTTEST@Group == OPLNMILESTONEMAPSTG@Group,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> SEPTGAANTTESTTemp",
						"SEPTGAANTTESTTemp select(mapColumn(",
						"          Upload_Date,",
						"          Project_ID,",
						"          Group = AUGGAANTTEST@Group,",
						"          Activity_Description,",
						"          Activity_New = AUGGAANTTEST@Activity_New,",
						"          Original_Actuals,",
						"          Actual_Achived,",
						"          Actual_Start_Date,",
						"          Actual_Finish_Date,",
						"          Total_days,",
						"          Days_elapsed,",
						"          Source_Templet,",
						"          Source_Table,",
						"          Sort_Group = AUGGAANTTEST@Sort_Group,",
						"          Sort_Activity = AUGGAANTTEST@Sort_Activity,",
						"          Legend = AUGGAANTTEST@Legend,",
						"          Actual_Percentage,",
						"          PLN_ACT,",
						"          Project_Identifier,",
						"          Sort_Group = OPLNMILESTONEMAPSTG@Sort_Group,",
						"          Sort_Activity = OPLNMILESTONEMAPSTG@Sort_Activity,",
						"          Group = OPLNMILESTONEMAPSTG@Group,",
						"          Activity,",
						"          Activity_New = OPLNMILESTONEMAPSTG@Activity_New,",
						"          Legend = OPLNMILESTONEMAPSTG@Legend,",
						"          NEW_ACT,",
						"          Project_Identifier",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SEPTGAANTTEST",
						"SEPTGAANTTEST derive(Manual_Values = case( trim(Actual_Percentage) == ' ',toDecimal(0),trim(Actual_Percentage) == '',toDecimal(0),isNull(trim(Actual_Percentage)),toDecimal(0),toDecimal(replace(Actual_Percentage, '%', ''))/100)) ~> ManualAdditionToCode",
						"ManualAdditionToCode derive(Actual_AchivedNew = case(\r",
						"    Actual_Achived <= Manual_Values && Legend == 'Actuals', Manual_Values, Actual_Achived\r",
						")) ~> FinalFinalderivedColumn",
						"FinalFinalderivedColumn derive(PLN_ACT_NEW = concat(Legend,' : ', toString(toDecimal( Actual_AchivedNew * 100,10,0 )),'%' )) ~> PLNACTNewderivedColumn",
						"PLNACTNewderivedColumn select(mapColumn(",
						"          Upload_Date,",
						"          Project_ID,",
						"          Group,",
						"          Activity_Description,",
						"          Activity_New,",
						"          Original_Actuals,",
						"          Actual_Achived,",
						"          Actual_Start_Date,",
						"          Actual_Finish_Date,",
						"          Total_days,",
						"          Days_elapsed,",
						"          Source_Templet,",
						"          Source_Table,",
						"          Sort_Group,",
						"          Sort_Activity,",
						"          Legend,",
						"          Actual_Percentage,",
						"          PLN_ACT,",
						"          Project_Identifier,",
						"          Activity,",
						"          NEW_ACT,",
						"          Manual_Values,",
						"          Actual_AchivedNew,",
						"          PLN_ACT_NEW,",
						"          Project_Identifier",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Finalselect",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Upload_Date as timestamp,",
						"          project_id as integer,",
						"          Project_Identifier as string,",
						"          Group as string,",
						"          Sort_Grp as integer,",
						"          Activity_New as string,",
						"          Activity_Description as string,",
						"          Sort_Activity as string,",
						"          Actual_Start_Date as timestamp,",
						"          Actual_Finish_Date as timestamp,",
						"          Original_Actuals as string,",
						"          Actual_Achived as string,",
						"          Legend as string,",
						"          PLN_ACT as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate table DWH.PLN_GAANT_HURRY_FACT;'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Upload_Date,",
						"          project_id = Project_ID,",
						"          Project_Identifier,",
						"          Group,",
						"          Sort_Grp = Sort_Group,",
						"          Activity_New,",
						"          Activity_Description,",
						"          Sort_Activity,",
						"          Actual_Start_Date,",
						"          Actual_Finish_Date,",
						"          Original_Actuals,",
						"          Actual_Achived,",
						"          Legend,",
						"          PLN_ACT,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Gaant_Hurry_Src')]",
				"[concat(variables('factoryId'), '/datasets/DS_PROJECTS_NEW_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_GAANT_HURRY_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_MANPOWER_MERGE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_MANPOWER_MERGE_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_MANPOWER_MERGE_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          SL_NO as string,",
						"          EMP_ID_NO as string,",
						"          TECHNICIAN_NAME as string,",
						"          ACTUAL_DOJ as string,",
						"          TRADE_AS_PER_ADMIN as string,",
						"          TRADE_GROUP as string,",
						"          WORK_STATUS_COST_HEAD as string,",
						"          DIVISION as string,",
						"          UNIT as string,",
						"          WORK_STATUS as string,",
						"          SHIFT as string,",
						"          COMPANY as string,",
						"          SOURCE as string,",
						"          Type as string,",
						"          name as string,",
						"          Emp_ID as string,",
						"          Login_Time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(Surrogate_Id as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = Surrogate_Id+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SL_NO as string,",
						"          EMP_ID_NO as string,",
						"          TECHNICIAN_NAME as string,",
						"          ACTUAL_DOJ as string,",
						"          TRADE_AS_PER_ADMIN as string,",
						"          TRADE_GROUP as string,",
						"          WORK_STATUS_COST_HEAD as string,",
						"          DIVISION as string,",
						"          UNIT as string,",
						"          WORK_STATUS as string,",
						"          SHIFT as string,",
						"          COMPANY as string,",
						"          SOURCE as string,",
						"          Type as string,",
						"          name as string,",
						"          Emp_ID as string,",
						"          Login_Time as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate Table [DWH].[PLN_MANPOWER_MERGE_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          SL_NO,",
						"          EMP_ID_NO,",
						"          TECHNICIAN_NAME,",
						"          ACTUAL_DOJ,",
						"          TRADE_AS_PER_ADMIN,",
						"          TRADE_GROUP,",
						"          WORK_STATUS_COST_HEAD,",
						"          DIVISION,",
						"          UNIT,",
						"          WORK_STATUS,",
						"          SHIFT,",
						"          COMPANY,",
						"          SOURCE,",
						"          Type,",
						"          name,",
						"          Emp_ID,",
						"          Login_Time,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MANPOWER_MERGE_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_MANPOWER_MERGE_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PG_PLANGRID_MAPPING')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PG_Plangrid_Mapping_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PG_PLANGRID_MAPPING_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Project_Name as string,",
						"          Act_Project_Name as string,",
						"          Project_Cluster as string,",
						"          Project_Status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Project_Name as string,",
						"          Act_Project_Name as string,",
						"          Project_Cluster as string,",
						"          Project_Status as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate table [DWH].[PG_PLANGRID_MAPPING_DIM]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Project_Name,",
						"          Act_Project_Name,",
						"          Project_Cluster,",
						"          Project_Status,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_Plangrid_Mapping_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_PLANGRID_MAPPING_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PG_PLANGRID_PROJECT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PG_PLANGRID_PROJECT_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PG_Plangrid_Project_DIM_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Project_Short_Code as string,",
						"          Project_Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Project_Short_Code as string,",
						"          Project_Name as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate table [DWH].[PG_PLANGRID_PROJECT_DIM]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Project_Short_Code,",
						"          Project_Name,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_PLANGRID_PROJECT_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_Plangrid_Project_DIM_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PG_PROJECT_MASTER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PG_Project_Master_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PG_PROJECT_MASTER_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Project_id as string,",
						"          Project_Name as string,",
						"          Project_Created_ON as timestamp,",
						"          Project_Status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Project_id as string,",
						"          Project_Name as string,",
						"          Project_Created_ON as timestamp,",
						"          Project_Status as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate table [DWH].[PG_PROJECT_MASTER_DIM]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Project_id,",
						"          Project_Name,",
						"          Project_Created_ON,",
						"          Project_Status,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_Project_Master_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_PROJECT_MASTER_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PG_Plangrid_Cluster_Mapping')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PG_Plangrid_Cluster_Mapping_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PG_Plangrid_Cluster_Mapping_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Stamp_First as string,",
						"          Stamp as string,",
						"          Cluster_Short as string,",
						"          Cluster_Full as string,",
						"          Works as string,",
						"          Category as string,",
						"          Approval as string,",
						"          Clearance as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Stamp_First as string,",
						"          Stamp as string,",
						"          Cluster_Short as string,",
						"          Cluster_Full as string,",
						"          Works as string,",
						"          Category as string,",
						"          Approval as string,",
						"          Clearance as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate Table [DWH].[PG_Plangrid_Cluster_Mapping_DIM]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Stamp_First,",
						"          Stamp,",
						"          Cluster_Short,",
						"          Cluster_Full,",
						"          Works,",
						"          Category,",
						"          Approval,",
						"          Clearance,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_Plangrid_Cluster_Mapping_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_Plangrid_Cluster_Mapping_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PG_TASK_REPORT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PG_Task_Report_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PG_TASK_REPORT_FACT_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Project_ID as string,",
						"          Project_Name as string,",
						"          Task_ID as string,",
						"          Stamp as string,",
						"          Title as string,",
						"          Description as string,",
						"          Date as timestamp,",
						"          Status as string,",
						"          Type as string,",
						"          Sheet as string,",
						"          Location as string,",
						"          Root_Cause as string,",
						"          Created_By as string,",
						"          Assigned_To as string,",
						"          Watchers as string,",
						"          Photos as string,",
						"          Archived as string,",
						"          Start_Date as timestamp,",
						"          Due_Date as timestamp,",
						"          Cost_Impact as string,",
						"          Cost_Impact_Amount as decimal(18,3),",
						"          Schedule_Impact as string,",
						"          Schedule_Impact_Amount_Days as string,",
						"          Last_Updated_On as timestamp,",
						"          Closed_on as timestamp,",
						"          Task_Refresh_Date as timestamp,",
						"          Task_Ref_No as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Project_ID as string,",
						"          Project_Name as string,",
						"          Task_ID as string,",
						"          Stamp as string,",
						"          Title as string,",
						"          Description as string,",
						"          Date as timestamp,",
						"          Status as string,",
						"          Type as string,",
						"          Sheet as string,",
						"          Location as string,",
						"          Root_Cause as string,",
						"          Created_By as string,",
						"          Assigned_To as string,",
						"          Watchers as string,",
						"          Photos as string,",
						"          Archived as string,",
						"          Start_Date as timestamp,",
						"          Due_Date as timestamp,",
						"          Cost_Impact as string,",
						"          Cost_Impact_Amount as decimal(18,3),",
						"          Schedule_Impact as string,",
						"          Schedule_Impact_Amount_Days as string,",
						"          Last_Updated_On as timestamp,",
						"          Closed_on as timestamp,",
						"          Task_Refresh_Date as timestamp,",
						"          Task_Ref_No as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate table [DWH].[PG_TASK_REPORT_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Project_ID,",
						"          Project_Name,",
						"          Task_ID,",
						"          Stamp,",
						"          Title,",
						"          Description,",
						"          Date,",
						"          Status,",
						"          Type,",
						"          Sheet,",
						"          Location,",
						"          Root_Cause,",
						"          Created_By,",
						"          Assigned_To,",
						"          Watchers,",
						"          Photos,",
						"          Archived,",
						"          Start_Date,",
						"          Due_Date,",
						"          Cost_Impact,",
						"          Cost_Impact_Amount,",
						"          Schedule_Impact,",
						"          Schedule_Impact_Amount_Days,",
						"          Last_Updated_On,",
						"          Closed_on,",
						"          Task_Refresh_Date,",
						"          Task_Ref_No,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PG_Task_Report_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PG_TASK_REPORT_FACT_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_BALCONYAREA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_BALCONYAREA_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_BALCONYAREA_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          TOWER as string,",
						"          LEVEL as string,",
						"          PROJECT_IDENTIFIER as string,",
						"          FLAT as string,",
						"          Sclicer as string,",
						"          ACTIVITY_ID as integer,",
						"          VALUE as string,",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          UPLOAD_DATE as timestamp",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    BA.TOWER,\\n    BA.[LEVEL],\\n    P.PROJECT_IDENTIFIER ,\\n    BA.FLAT,\\n    \\'Balcony Area\\' as Sclicer,\\n    BA.ACTIVITY_ID,\\n    CASE \\n        WHEN BA.VALUE IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE BA.VALUE\\n    END AS VALUE,\\n    BA.TYPE_OF_WORK,\\n    BA.CATEGORY,\\n    BA.UPLOAD_DATE\\nFROM (\\n     SELECT BR.UPLOAD_TIME AS UPLOAD_DATE,\\n             BR.PROJECT_ID,\\n             BR.TOWER,\\n             BR.[LEVEL],\\n             BR.FLAT,\\n             COLUMN_NAME.*,\\n             BM.ACTIVITY_ID,\\n             BM.SBU_ID,\\n             BM.CATEGORY,\\n             DENSE_RANK () OVER (PARTITION BY  PROJECT_ID,BM.SBU_ID ORDER BY  CAST(UPLOAD_TIME AS DATE) DESC) AS DRANK\\n         FROM [STG].[O_PLN_BALCONYAREA_RAW_STG] BR\\n         CROSS APPLY  (\\n               SELECT        [MARKING_FOR_RAIN_WATER_PIPE] , \\'MARKING FOR RAIN WATER PIPE\\'\\n     UNION ALL SELECT  [RAIN_WATER_PIPE] , \\'RAIN WATER PIPE\\'\\n     UNION ALL SELECT  [RAIN_WATER_PIPE_PACKING] , \\'RAIN WATER PIPE PACKING\\'\\n     UNION ALL SELECT  [BALCONY_BLOCKWORK] , \\'BALCONY BLOCKWORK\\'\\n     UNION ALL SELECT  [BALCONY_PLASTER] , \\'BALCONY PLASTER\\'\\n     UNION ALL SELECT  [F_CHANNEL_INSTALLATION] , \\'F CHANNEL INSTALLATION\\'\\n     UNION ALL SELECT  [NON_SHRINK_GROUT] , \\'NON SHRINK GROUT\\'\\n     UNION ALL SELECT  [TOP_RAIL_BRACKET_INSTALLATION] , \\'TOP RAIL BRACKET INSTALLATION\\'\\n     UNION ALL SELECT  [EIFS_INSTALLATION] , \\'EIFS INSTALLATION\\'\\n     UNION ALL SELECT  [BALCONY_EIFS_PLASTER] , \\'BALCONY EIFS PLASTER\\'\\n     UNION ALL SELECT  [GRINDING_CLEARANCE] , \\'GRINDING CLEARANCE\\'\\n     UNION ALL SELECT  [CEILING_SKIM_COAT_AND_PRIMER] , \\'CEILING SKIM COAT & PRIMER\\'\\n     UNION ALL SELECT  [BALCONY_SCREED] , \\'BALCONY SCREED\\'\\n     UNION ALL SELECT  [DRAIN_FIXING] , \\'DRAIN FIXING\\'\\n     UNION ALL SELECT  [CEILING_BALCONY_BOX_INSTALLATION] , \\'CEILING BALCONY BOX INSTALLATION\\'\\n     UNION ALL SELECT  [LEFT_OVER_SCREED_IF_ANY] , \\'LEFT OVER SCREED (IF ANY)\\'\\n     UNION ALL SELECT  [EIFS_WALL_TEXTURE] , \\'EIFS WALL TEXTURE\\'\\n     UNION ALL SELECT  [BALUSTRADE_GLASS_INSTALLATION] , \\'BALUSTRADE GLASS INSTALLATION\\'\\n     UNION ALL SELECT  [BALUSTRADE_TOP_RAIL] , \\'BALUSTRADE TOP RAIL\\'\\n     UNION ALL SELECT  [BALCONY_UNDER_TILE_WATER_PROOFING] , \\'BALCONY UNDER TILE WATER PROOFING\\'\\n     UNION ALL SELECT  [BALCONY_FLOOR_TILING] , \\'BALCONY FLOOR TILING\\'\\n     UNION ALL SELECT  [BALUSTRADE_INTERNAL_FLASHING] , \\'BALUSTRADE - INTERNAL FLASHING\\'\\n     UNION ALL SELECT  [BALCONY_SKIRTING] , \\'BALCONY SKIRTING\\'\\n     UNION ALL SELECT  [METAL_CEILING] , \\'METAL CEILING\\'\\n     UNION ALL SELECT  [BALCONY_CEILING_TEXTURE] , \\'BALCONY CEILING TEXTURE\\'\\n     UNION ALL SELECT  [COMPLETE_WALL_TEXTURE] , \\'COMPLETE WALL TEXTURE\\'\\n     UNION ALL SELECT  [BALCONY_GROUTING] , \\'BALCONY GROUTING\\'\\n     UNION ALL SELECT  [BALCONY_SILICONE] , \\'BALCONY SILICONE\\'\\n     UNION ALL SELECT  [BALCONY_MEP_FINAL_FIXTURES] , \\'BALCONY MEP FINAL FIXTURES\\'\\n     UNION ALL SELECT  [BALCONY_FINAL_COAT_PAINT] , \\'BALCONY FINAL COAT PAINT\\'\\n     UNION ALL SELECT  [BALCONY_DRAIN_COVER_SUPPLY] , \\'BALCONY DRAIN COVER SUPPLY\\'\\n     UNION ALL SELECT  [COVER_FIXING_FOR_BALCONY_DRAIN] , \\'COVER FIXING FOR BALCONY DRAIN\\'\\n     UNION ALL SELECT  [COVER_PLATE_BW_ACP_AND_EIFS] , \\'COVER PLATE B/W ACP & EIFS\\'\\n             ) AS COLUMN_NAME (VALUE,TYPE_OF_WORK)\\n               \\n     left JOIN  STG.O_PLN_BALCONYAREA_MAP_STG  BM\\n     ON COLUMN_NAME.TYPE_OF_WORK = BM.ACTIVITY_SEQUENCE\\n     WHERE VALUE IS NOT NULL  AND VALUE !=\\'\\') BA\\nLeft JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          BA.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON         BA.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          BA.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          BA.DRANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Flat as integer,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_BALCONYAREA_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level = LEVEL,",
						"          Flat = FLAT,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = VALUE,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Update_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BALCONYAREA_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_BALCONYAREA_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_BUSINESS_PLN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PLN_BUSINESS_PLAN_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_BUSINESS_PLAN_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_BUSINESS_PLAN_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_PLN_BUSINESS_PLAN_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          SBU_ID as integer,",
						"          Upload_Date as date,",
						"          tower as string,",
						"          Type as string,",
						"          SBU as string,",
						"          SBU_Custom_Sort as integer,",
						"          Month as string,",
						"          ORDER_Month as string,",
						"          value as decimal(25,2),",
						"          Cummulative as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n     P.Sort_ID as PROJECT_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n     PF.Upload_Date,\\n     --PF.project_id,\\n     PF.tower,\\n     --PF.sbu_id,\\n     PF.[Type],\\n     PF.SBU,\\n     PF.SBU_Custom_Sort,\\n     PF.[Month],\\n     \\n     PF.ORDER_Month,\\n     PF.[value],\\n     SUM(convert(int ,value)) OVER(PARTITION BY PF.project_id,PF.[Type],PF.SBU_Custom_Sort ORDER BY PF.ORDER_Month ROWS UNBOUNDED PRECEDING) AS Cummulative \\nFROM (\\nSELECT\\n                Upload_Date,\\n                project_id,tower,sbu_id,\\n                [Type],\\n                SBU,\\n                    SBU_Custom_Sort,\\n                    [Month],\\n                CASE\\n                WHEN TRIM([Month]) IN (\\'Total Revenue (BOQ)\\',\\'Achieved Revenue (Till 2021)\\') THEN null\\n                ELSE REPLACE(FORMAT(CAST(concat(\\'01-\\',TRIM([Month])) AS DATE),\\'yyyy-MM\\'),\\'-\\',\\'\\')\\n                 END AS ORDER_Month,\\n                CAST(value AS DECIMAL(25,2)) AS [value]\\n                    \\nFROM (\\nSELECT\\n        CAST(upload_time AS DATE) AS Upload_date,\\n        project_id,\\n        tower,\\n        sbu_id,\\n        [Type],\\n        SBU,\\n          CASE\\n                    WHEN SBU = \\'SBU 1\\' THEN 1\\n                    WHEN SBU = \\'SBU 2\\' THEN 2\\n                    WHEN SBU = \\'SBU 3\\' THEN 3\\n                    WHEN SBU = \\'SBU 4\\' THEN 4\\n                    WHEN SBU = \\'SBU 5\\' THEN 5\\n                    ELSE 6\\n                END AS SBU_Custom_Sort,\\n        Column_Name.[Month],\\n        CASE \\n            WHEN CAST(ISNULL(TRIM(Column_Name.VALUE ),\\'\\') AS VARCHAR(100))  IN (\\'\\',\\' \\',\\'-\\')  AND [Type] = \\'Plan\\'  THEN ISNULL(REPLACE(\\'0\\',\\',\\',\\'\\'),\\'0.00\\')\\n            ELSE ISNULL(REPLACE(CAST(Column_Name.VALUE AS VARCHAR(100)),\\',\\',\\'\\'),\\'0.00\\') \\n        END  AS Value\\n          ,DENSE_RANK() OVER(PARTITION BY project_id ORDER BY CAST(upload_time AS DATE) DESC) AS [DENSE_RANK]\\n        FROM STG.O_PLN_BUSINESS_PLAN_RAW_STG\\n        cross apply (\\n                                     SELECT Jan_22 ,  \\'Jan-22\\'\\n                    UNION ALL SELECT Feb_22 ,  \\'Feb-22\\'\\n                    UNION ALL SELECT Mar_22 ,  \\'Mar-22\\'\\n                    UNION ALL SELECT Apr_22 ,  \\'Apr-22\\'\\n                    UNION ALL SELECT May_22 ,  \\'May-22\\'\\n                    UNION ALL SELECT Jun_22 ,  \\'Jun-22\\'\\n                    UNION ALL SELECT Jul_22 ,  \\'Jul-22\\'\\n                    UNION ALL SELECT Aug_22 ,  \\'Aug-22\\'\\n                    UNION ALL SELECT Sep_22 ,  \\'Sep-22\\'\\n                    UNION ALL SELECT Oct_22 ,  \\'Oct-22\\'\\n                    UNION ALL SELECT Nov_22 ,  \\'Nov-22\\'\\n                    UNION ALL SELECT Dec_22 ,  \\'Dec-22\\'\\n        )as Column_Name(value,[Month])\\n        WHERE\\n         TRIM(value) NOT IN (\\'Jan-22\\',\\'Feb-22\\',\\'Mar-22\\',\\'Apr-22\\',\\'May-22\\',\\'Jun-22\\',\\'Jul-22\\',\\'Aug-22\\',\\'Sep-22\\',\\'Oct-22\\',\\'Nov-22\\',\\'Dec-22\\') AND\\n         TRIM(SBU) NOT IN (\\'\\',\\' \\',\\'Cumulative\\',\\'%\\',\\'Total Revenue (BOQ)\\',\\'Achieved Revenue (Till 2021)\\',\\'Overall\\')\\n    ) PF1\\n     WHERE TRIM(value) NOT IN (\\'\\',\\'-\\',\\' \\')\\n   AND TRIM(SBU) NOT IN (\\'\\',\\' \\',\\'Cumulative\\',\\'%\\',\\'Total Revenue (BOQ)\\',\\'Achieved Revenue (Till 2021)\\',\\'Overall\\')\\n   AND  [DENSE_RANK] = 1 \\n       ) PF \\n     LEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          PF.PROJECT_ID=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          PF.SBU_ID=SM.SBU_IDENTIFIER\\n      \\n     ',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as integer,",
						"          Upload_Date as date,",
						"          project_id as string,",
						"          Sbu_Id as integer,",
						"          Tower as string,",
						"          Type as string,",
						"          SBU as string,",
						"          SBU_Custom_Sort as integer,",
						"          Month as string,",
						"          ORDER_Month as integer,",
						"          value as decimal(10,0),",
						"          Cummulative as decimal(32,0),",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_BUSINESS_PLAN_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = ID,",
						"          Upload_Date,",
						"          project_id = PROJECT_ID,",
						"          Sbu_Id = SBU_ID,",
						"          Tower = tower,",
						"          Type,",
						"          SBU,",
						"          SBU_Custom_Sort,",
						"          Month,",
						"          ORDER_Month,",
						"          value,",
						"          Cummulative,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_BUSINESS_PLAN_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_BUSINESS_PLN_1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_BUSINESS_PLAN_1_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_BUSINESS_PLAN_1_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Upload_date as date,",
						"          Project_Identifier as string,",
						"          PROJECT_ID as integer,",
						"          SBU_ID as integer,",
						"          Type as string,",
						"          Month as string,",
						"          value as string,",
						"          DENSE_RANK as long,",
						"          sbu_sort as integer,",
						"          month_sort as integer,",
						"          year_sort as integer,",
						"          Cummulative as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select \\n  PF.Upload_date  ,\\n  P.Project_Identifier,\\n  P.Sort_ID as PROJECT_ID,\\n  SM.SBU_MAP_ID AS SBU_ID,  \\n  PF.Type   ,  \\n  PF.Month    ,\\n  PF.value     ,\\n  PF.DENSE_RANK   ,\\n  PF.sbu_sort  ,\\n  PF.month_sort   ,\\n  PF.year_sort  ,\\n  PF.Cummulative   \\n  from [STG].[O_PLN_BUSINESS_PLAN_1_STG] PF\\nLEFT join [DWH].[PROJECTS_NEW_DIM] P\\n      ON          PF.PROJECT_ID=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          PF.SBU=SM.SBU_IDENTIFIER\\n\\n\\n     --select * from [STG].[O_PLN_BUSINESS_PLAN_1_STG]\\n     --select * from [DWH].[PLN_PROJECTS_DIM]\\n     --select * from  [DWH].[PLN_SBU_MAPPING_DIM]\\n\\n\\n     -- select * from [DWH].[PLN_PROJECTS_DIM]\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(Id = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Upload_date as date,",
						"          Project_Name as string,",
						"          project_id as integer,",
						"          Type as string,",
						"          SBU_Id as integer,",
						"          Month as string,",
						"          value as string,",
						"          DENSE_RANK as long,",
						"          sbu_sort as long,",
						"          month_sort as long,",
						"          year_sort as long,",
						"          Cummulative as double,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate table [DWH].[PLN_BUSINESS_PLAN_1_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID = Id,",
						"          Upload_date,",
						"          Project_Name = Project_Identifier,",
						"          project_id = PROJECT_ID,",
						"          Type,",
						"          SBU_Id = SBU_ID,",
						"          Month,",
						"          value,",
						"          DENSE_RANK,",
						"          sbu_sort,",
						"          month_sort,",
						"          year_sort,",
						"          Cummulative,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_BUSINESS_PLAN_1_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_BUSINESS_PLAN_1_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_CORRIDOR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_CORRIDOR_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_CORRIDOR_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          TOWER as string,",
						"          Activity_Id as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          LEVEL as string,",
						"          Scilicer as string,",
						"          value as decimal(24,6),",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          CATEGORY_SORT as integer,",
						"          UPLOAD_DATE as date",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    A.TOWER    ,\\n     A.Activity_Id,\\n     P.PROJECT_IDENTIFIER,\\n     A.LEVEL,\\n     \\'Corridor\\' as Scilicer,\\n  \\n  CAST(REPLACE(CASE     WHEN TRIM(A.value) IN (\\'\\',\\'NA\\') THEN \\'0%\\' else TRIM(A.value) end, \\'%\\', \\'\\') AS Decimal)/100 AS value,\\n\\n    A.TYPE_OF_WORK    ,\\n    A.CATEGORY   ,\\n\\n          CASE \\n            WHEN TRIM(A.CATEGORY) IN(\\'BUILDERS WORK\\') THEN  2\\n            WHEN TRIM(A.CATEGORY) IN(\\'MEP\\') THEN  12\\n            WHEN TRIM(A.CATEGORY) IN(\\'PLASTER\\') THEN  3\\n            WHEN TRIM(A.CATEGORY) IN(\\'SCREED\\') THEN  5\\n            WHEN TRIM(A.CATEGORY) IN(\\'TILE\\') THEN  9\\n            WHEN TRIM(A.CATEGORY) IN(\\'MARBLE\\') THEN  10\\n            WHEN TRIM(A.CATEGORY) IN(\\'FACADE\\') THEN  11\\n            WHEN TRIM(A.CATEGORY) IN(\\'GYAUM\\') THEN  6\\n            WHEN TRIM(A.CATEGORY) IN(\\'PAINT\\') THEN  8\\n            ELSE 20\\n        END AS CATEGORY_SORT,\\n    A.UPLOAD_DATE  \\n         \\nFROM\\n(\\n        SELECT CAST(O_PLN_CORRIDOR_RAW.UPLOAD_TIME AS DATE) AS UPLOAD_DATE,\\n        O_PLN_CORRIDOR_RAW.PROJECT_ID,\\n        O_PLN_CORRIDOR_RAW.TOWER,\\n        O_PLN_CORRIDOR_RAW.LEVEL,\\n     COLUMN_NAME.* ,\\n        \\'CORRIDOR\\' AS SCLICER,\\n       \\n        O_PLN_CORRIDOR_MAP.ACTIVITY_ID,\\n        O_PLN_CORRIDOR_MAP.SBU_ID,\\n        O_PLN_CORRIDOR_MAP.CATEGORY,\\n\\n        DENSE_RANK () OVER     (PARTITION BY  PROJECT_ID , SBU_ID\\n                            ORDER BY  CAST(UPLOAD_TIME AS DATE) DESC\\n                            )     PROJECT_UDATE_DRANK\\n FROM [STG].[O_PLN_CORRIDOR_RAW_STG]  O_PLN_CORRIDOR_RAW\\nCROSS APPLY (\\n\\nSELECT     CORRIDOR_MEP_MARKING_FOR_BUILDERS_WORK     ,     \\'Corridor MEP Marking for Builders Work\\'\\nUNION ALL SELECT CORRIDOR_CUTTING_AND_CHASING_OF_BLOCKWORK     ,    \\'Corridor Cutting & Chasing of Blockwork\\'\\nUNION ALL SELECT CORRIDOR_MEP_SERVICES_INSTALLATION     ,     \\'Corridor MEP Services Installation\\'\\nUNION ALL SELECT CORRIDOR_WALL_MEP_SERVICES_PACKING     ,     \\'Corridor Wall MEP Services Packing\\'\\nUNION ALL SELECT CORRIDOR_PLASTER     ,     \\'Corridor Plaster\\'\\nUNION ALL SELECT CORRIDOR_SCREED     ,     \\'Corridor Screed\\'\\nUNION ALL SELECT GRINDING_CLEARANCE_FOR_TILE     ,     \\'Grinding Clearance for Tile\\'\\nUNION ALL SELECT TILE_MARKING     ,    \\'Tile Marking\\'\\nUNION ALL SELECT BULL_MARKING     ,     \\'Bull Marking\\'\\nUNION ALL SELECT ELECTRICAL_CONDUITS     ,     \\'Electrical Conduits\\'\\nUNION ALL SELECT COLD_WATER_SUPPLY     ,     \\'Cold water supply\\'\\nUNION ALL SELECT FIRE_FIGHTING_PIPE_SUPPORT     ,     \\'Fire Fighting Pipe Support\\'\\nUNION ALL SELECT MODULAR_INSTALATION     ,    \\'Modular Instalation\\'\\nUNION ALL SELECT FRAMING_CLEARANCE_BY_MEP     ,     \\'Framing Clearance by MEP\\'\\nUNION ALL SELECT CENTER_LINE_MARKING_FOR_FACADE_INSTALLATION     ,     \\'Center line marking for Facade Installation\\'\\nUNION ALL SELECT CORRIDOR_CURTAIN_WALL_BOX_INSTALLATION     ,    \\'Corridor Curtain Wall Box Installation\\'\\nUNION ALL SELECT CORRIDOR_CURTAIN_WALL_FRAME_INSTALLATION     ,    \\'Corridor Curtain Wall Frame Installation\\'\\nUNION ALL SELECT CORRIDOR_CURTAIN_WALL_GLASS_INSTALLATION     ,     \\'Corridor Curtain Wall Glass Installation\\'\\nUNION ALL SELECT CORRIDOR_CURTAIN_WALL_FLASHING_INSTALLATION     ,    \\'Corridor Curtain Wall Flashing Installation\\'\\nUNION ALL SELECT CORRIDOR_FLOOR_TILE     ,    \\'Corridor Floor Tile\\'\\nUNION ALL SELECT CORRIDOR_WALL_TILE     ,          \\'Corridor Wall Tile\\'\\nUNION ALL SELECT FIRE_HOSE_REEL_CABINET_INSTALLATION     ,     \\'Fire Hose Reel Cabinet Installation\\'\\nUNION ALL SELECT GROUTING_FOR_FRAMING_CLEARANCE     ,     \\'Grouting for Framing Clearance\\'\\nUNION ALL SELECT CORRIDOR_FC_FRAMING     ,     \\'Corridor FC Framing\\'\\nUNION ALL SELECT MEP_ACCESS_PANEL_MARKINGS_AND_INSPECTION     ,     \\'MEP Access Panel Markings & Inspection\\'\\nUNION ALL SELECT MEP_WORKS_FOR_BOARDING_CLEARANCE     ,    \\'MEP Works for Boarding Clearance \\'\\nUNION ALL SELECT FRAMING_LEVELLING     ,     \\'Framing Levelling\\'\\nUNION ALL SELECT CORRIDOR_FC_BOARDING     ,     \\'Corridor FC Boarding\\'\\nUNION ALL SELECT JOINT_TAPING_AND_SANDING     ,    \\'Joint Taping & Sanding\\'\\nUNION ALL SELECT CORRIDOR_CEILING_PRIMER     ,     \\'Corridor Ceiling Primer\\'\\nUNION ALL SELECT CORRIDOR_CEILING_STUCCO_1ST_AND_2ND_COAT     ,     \\'Corridor Ceiling Stucco (1st and 2nd Coat)\\'\\nUNION ALL SELECT CORRIDOR_CEILING_FIRST_COAT_PAINT     ,    \\'Corridor Ceiling First Coat Paint\\'\\nUNION ALL SELECT CORRIDOR_GROUTING     ,     \\'Corridor Grouting\\'\\nUNION ALL SELECT CORRIDOR_SILICONE     ,     \\'Corridor Silicone\\'\\nUNION ALL SELECT LEFT_OVER_SCREED     ,    \\'Left over Screed\\'\\nUNION ALL SELECT LEFT_OVER_AREA_FLOOR_TILE     ,    \\'Left Over Area Floor Tile\\'\\nUNION ALL SELECT LEFT_OVER_AREA_WALL_TILE     ,    \\'Left Over Area Wall Tile\\'\\nUNION ALL SELECT REMAINING_GROUT_AND_SILICONE_WORKS     ,     \\'Remaining Grout and Silicone Works\\'\\nUNION ALL SELECT CORRIDOR_MEP_FINAL_FIXTURES     ,    \\'Corridor MEP Final Fixtures\\'\\nUNION ALL SELECT CORRIDOR_FINAL_COAT_PAINT     ,    \\'Corridor Final Coat Paint\\'          \\n)AS COLUMN_NAME(VALUE,TYPE_OF_WORK)\\n   JOIN [STG].[O_PLN_CORRIDOR_MAP_STG]  O_PLN_CORRIDOR_MAP\\n    ON TRIM(COLUMN_NAME.TYPE_OF_WORK) = TRIM(O_PLN_CORRIDOR_MAP.ACTIVITY_SEQUENCE)\\n    WHERE VALUE IS NOT NULL) A\\n   \\n   INNER JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM]  LM\\n     ON          A.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          A.PROJECT_ID=P.PROJECT_IDENTIFIER\\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          A.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          A.PROJECT_UDATE_DRANK = 1\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Scilicer as string,",
						"          Activity_ID as integer,",
						"          Value as decimal(14,4),",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Category_Sort as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE DWH.PLN_CORRIDOR_FACT;'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level = LEVEL,",
						"          Scilicer,",
						"          Activity_ID = Activity_Id,",
						"          Value = value,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Category_Sort = CATEGORY_SORT,",
						"          Update_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_CORRIDOR_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_CORRIDOR_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_CRITICAL_ISSUE_TRACKER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_CRITICAL_ISSUE_TRACKER_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_CRITICAL_ISSUE_TRACKER_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_CRITICAL_ISSUE_TRACKER_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_PLN_CRITICAL_ISSUE_TRACKER_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          SBU_ID as integer,",
						"          Upload_Date as date,",
						"          Reference_Number as string,",
						"          PR_PO_Other_Ref_No as string,",
						"          Pending_With as string,",
						"          Issue_Description as string,",
						"          Current_Status as string,",
						"          Impact_On as string,",
						"          Status as string,",
						"          Project as string,",
						"          Tower as string,",
						"          Raised_On as string,",
						"          Actual_Closure_Date as string,",
						"          Target_Closure_Date as string,",
						"          Ageing as integer,",
						"          Agetub as string,",
						"          Agetub_sort as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT      \\n    P.PROJECT_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    A.Upload_Time AS Upload_Date,\\n    A.Reference_Number,\\n    A.PR_PO_Other_Ref_No, \\n    --A.SBU_SCLICER, --we need to Join and get sbu_ID from [DWH].[PLN_SBU_MAPPING_DIM] PowerBI\\n    A.Pending_With,\\n    A.Issue_Description,\\n    A.Current_Status,\\n    A.Impact_On,\\n    A.Status,\\n    A.Project,\\n    --A.citprojectid, --we need to Join and get sbu_ID from [DWH].[PLN_PROJECTS_DIM] PowerBI\\n    A.Tower,\\n    --A.Project_Identifier, --we need to Join and get sbu_ID from [DWH].[PLN_PROJECTS_DIM] PowerBI\\n    A.Raised_On,\\n    A.Actual_Closure_Date,\\n    A.Target_Closure_Date,\\n    A.Ageing,\\n    CASE \\n        WHEN A.Ageing <=7  THEN  \\'(0-7)\\'\\n        WHEN A.Ageing <= 14 THEN \\'(8-14)\\'\\n        WHEN A.Ageing <= 21 THEN \\'(15-21)\\'\\n        WHEN A.Ageing <= 30 THEN \\'(22-30)\\'\\n        WHEN A.Ageing IS NULL THEN NULL\\n        ELSE \\'>30\\' END AS Agetub,\\n    CASE \\n        WHEN A.Ageing <=7  THEN 1\\n        WHEN A.Ageing <=14 THEN 2\\n        WHEN A.Ageing <=21 THEN 3\\n        WHEN A.Ageing <=30 THEN 4\\n        WHEN A.Ageing IS NULL THEN NULL\\n        ELSE 5     END AS Agetub_sort\\nFROM(\\n        SELECT \\n                AC.*,\\n                CASE \\n                    WHEN TRIM(LOWER(AC.Status)) = \\'open\\' AND ISNULL(AC.Raised_On,\\'\\') <> \\'\\' THEN DATEDIFF(day,CAST(substring( AC.Raised_On,charindex(\\'/\\',AC.Raised_On)+1,2)+\\'/\\'+ left(AC.Raised_On,2)+\\'/\\'+right(AC.Raised_On,4) AS DATE ),GETDATE())\\n                    WHEN TRIM(LOWER(AC.Status)) = \\'closed\\' AND ISNULL(AC.Actual_Closure_Date,\\'\\') <> \\'\\' AND ISNULL(AC.Actual_Closure_Date,\\'\\') like (\\'%/%\\') AND ISNULL(AC.Raised_On,\\'\\') <> \\'\\' \\n                        THEN  DATEDIFF(day,cast(substring( AC.Raised_On,charindex(\\'/\\',AC.Raised_On)+1,2)+\\'/\\'+ left(AC.Raised_On,2)+\\'/\\'+right(AC.Raised_On,4) as date),cast(substring( AC.Actual_Closure_Date,charindex(\\'/\\',AC.Actual_Closure_Date)+1,2)+\\'/\\'+ left(AC.Actual_Closure_Date,2)+\\'/\\'+right(AC.Actual_Closure_Date,4) as date))\\n                ELSE NULL END AS Ageing        \\n        FROM(\\n            SELECT      \\n                CAST(upload_time as DATE)  Upload_Time,\\n                CI.Reference_Number,\\n                CI.PR_PO_Other_Ref_No,\\n                CASE\\n                    WHEN CI.SBU_Issue_Raised_by LIKE \\'%SBU 1%\\' THEN \\'SBU 1\\'\\n                    WHEN CI.SBU_Issue_Raised_by LIKE \\'%SBU 2%\\' THEN \\'SBU 2\\'\\n                    WHEN CI.SBU_Issue_Raised_by LIKE \\'%SBU 3%\\' THEN \\'SBU 3\\'\\n                    WHEN CI.SBU_Issue_Raised_by LIKE \\'%SBU 4%\\' THEN \\'SBU 4\\'\\n                    WHEN CI.SBU_Issue_Raised_by LIKE \\'%SBU 5%\\' THEN \\'SBU 5\\'\\n                    ELSE \\'UNKNOWN\\' END AS SBU_SCLICER,\\n                CASE\\n                    WHEN CI.Pending_With IS NULL OR TRIM(CI.Pending_With) = \\'\\' THEN \\'Not Available\\'\\n                    ELSE CI.Pending_With\\n                    END AS Pending_With,\\n                CI.Issue_Description,\\n                CI.Current_Status,\\n                CI.Impact_On,\\n                CI.Status,\\n                CI.Project,\\n                CI.Project_id as CITPROJECTID,\\n                PS.Project_id,\\n                PS.Project_Identifier,\\n                CI.Sbu_ID,\\n                CI.Tower,\\n                --CI.Raised_On,\\n                --CI.Target_Closure_Date,\\n                --CI.Actual_Closure_Date\\n                CASE \\n                    WHEN CI.Raised_On IS NOT NULL AND TRIM(CI.Raised_On) NOT IN (\\'\\',\\'-\\')  and CI.raised_on like \\'%-%\\' then format(cast(CI.raised_on as date),\\'dd/MM/yyyy\\')  \\n                    else CI.raised_on  end AS Raised_On,\\n                CASE \\n                    WHEN CI.Actual_Closure_Date IS NOT NULL AND TRIM(CI.Actual_Closure_Date) NOT IN (\\'\\',\\'-\\')  and CI.Actual_Closure_Date like \\'%-%\\' then format(cast(CI.Actual_Closure_Date as date),\\'dd/MM/yyyy\\')  \\n                    else CI.Actual_Closure_Date  end AS Actual_Closure_Date,\\n                CASE \\n                    WHEN CI.Target_Closure_Date IS NOT NULL AND TRIM( CI.Target_Closure_Date) NOT IN (\\'\\',\\'-\\')  and CI.Target_Closure_Date like \\'%-%\\' then format(cast(CI.Target_Closure_Date as date),\\'dd/MM/yyyy\\')  \\n                    else CI.Target_Closure_Date  end AS Target_Closure_Date\\n            FROM\\n                        STG.O_PLN_CRITICAL_ISSUE_TRACKER_STG CI\\n            LEFT JOIN    STG.PROJECTS_STG AS PS \\n                ON        CI.Project_id = PS.Project_identifier\\n                    --need to understand from where this project_short came.\\n            WHERE        TRIM(CI.Issue_Description) NOT IN (\\'\\')) AC\\n        )A\\nLEFT JOIN    [DWH].[PLN_PROJECTS_DIM] P\\n    ON      A.PROJECT_IDENTIFIER=P.PROJECT_IDENTIFIER \\nLEFT JOIN    [DWH].[PLN_SBU_MAPPING_DIM] SM\\n    ON      A.SBU_ID=SM.SBU_IDENTIFIER',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          SBU_ID as integer,",
						"          Tower as string,",
						"          Reference_Number as string,",
						"          PR_PO_Other_Ref_No as string,",
						"          Pending_With as string,",
						"          Issue_Description as string,",
						"          Current_Status as string,",
						"          Impact_On as string,",
						"          Status as string,",
						"          Project as string,",
						"          Raised_On as string,",
						"          Actual_Closure_Date as string,",
						"          Target_Closure_Date as string,",
						"          Ageing as string,",
						"          Agetub as string,",
						"          Agetub_sort as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_CRITICAL_ISSUE_TRACKER_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          SBU_ID,",
						"          Tower,",
						"          Reference_Number,",
						"          PR_PO_Other_Ref_No,",
						"          Pending_With,",
						"          Issue_Description,",
						"          Current_Status,",
						"          Impact_On,",
						"          Status,",
						"          Project,",
						"          Raised_On,",
						"          Actual_Closure_Date,",
						"          Target_Closure_Date,",
						"          Ageing,",
						"          Agetub,",
						"          Agetub_sort = Agetub,",
						"          Update_Date = Upload_Date,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_CRITICAL_ISSUE_TRACKER_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_CRITICAL_ISSUE_TRACKER_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_DRYAREA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_DRYAREA_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_DRYAREA_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          TOWER as string,",
						"          LEVEL as string,",
						"          FLAT as string,",
						"          Sclicer as string,",
						"          ACTIVITY_ID as integer,",
						"          VALUE as string,",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          UPLOAD_DATE as timestamp",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT\\n    P.Sort_ID as PROJECT_ID,\\n    P.PROJECT_IDENTIFIER ,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n     SM.SBU_MAP_ID AS SBU_ID,\\n    DA.TOWER,\\n    DA.[LEVEL],\\n    DA.FLAT,\\n    \\'Dry Area\\' as Sclicer,\\n     DA.ACTIVITY_ID,\\n    CASE \\n        WHEN DA.VALUE IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE DA.VALUE\\n    END AS VALUE,\\n    DA.TYPE_OF_WORK,\\n    DA.CATEGORY,\\n     DA.UPLOAD_DATE\\nFROM(\\n     SELECT\\n            DR.UPLOAD_TIME AS UPLOAD_DATE,\\n            DR.PROJECT_ID,\\n            DR.TOWER,\\n            DR.[LEVEL],\\n            DR.FLAT,\\n            COLUMN_NAME.*,\\n            DM.ACTIVITY_ID,\\n            DM.SBU_ID,\\n            DM.CATEGORY,\\n            DENSE_RANK() OVER (PARTITION BY  PROJECT_ID , DM.SBU_ID ORDER BY  Convert(Date,UPLOAD_TIME) DESC ) AS DRANK\\n     FROM [STG].[O_PLN_DRYAREA_RAW_STG] DR\\n     CROSS APPLY(\\n                      SELECT  [HSE_CLEARANCE_FOR_DESHUTTERING],\\'HSE CLEARANCE FOR DESHUTTERING\\'\\n          UNION ALL SELECT  [MEP_RISER_WORKS],\\'MEP RISER WORKS\\'\\n          UNION ALL SELECT  [LPG_PIPE],\\'LPG PIPE\\'\\n          UNION ALL SELECT  [BLOCKWORK_LAYOUT_MARKING],\\'BLOCKWORK LAYOUT MARKING\\'\\n          UNION ALL SELECT  [BLOCKWORK_FIRST_LAYER],\\'BLOCKWORK FIRST LAYER\\'\\n          UNION ALL SELECT  [BLOCKWORK_WITH_1MTR_MARKING],\\'BLOCKWORK WITH 1MTR MARKING\\'\\n          UNION ALL SELECT  [GI_LINTEL],\\'GI LINTEL\\'\\n          UNION ALL SELECT  [RCC_LINTEL_STIFFENER] ,\\'RCC LINTEL / STIFFENER\\'\\n          UNION ALL SELECT  [ABOVE_LINTEL_BLOCK_WORK],\\'ABOVE LINTEL BLOCK WORK\\'\\n          UNION ALL SELECT  [HEAD_RESTRAINTS_INSTALLATION],\\'HEAD RESTRAINTS INSTALLATION\\'\\n          UNION ALL SELECT  [FIRE_SEALANT_WORKS_AND_PU_FOAM_WORKS],\\'FIRE SEALANT WORKS & PU FOAM WORKS\\'\\n          UNION ALL SELECT  [MEP_MARKING_FOR_HL_BUILDERS_WORK],\\'MEP MARKING FOR HL BUILDERS WORK\\'\\n          UNION ALL SELECT  [BLOCKWORK_CUTTING_FOR_MEP_SERVICES] ,\\'BLOCKWORK CUTTING FOR MEP SERVICES\\'\\n          UNION ALL SELECT  [MEP_WALL_MARKING_FOR_CUTTING_AND_CHASING],\\'MEP WALL MARKING FOR CUTTING & CHASING\\'\\n          UNION ALL SELECT  [BULL_MARKING_FOR_PLASTER],\\'BULL MARKING FOR PLASTER\\'\\n          UNION ALL SELECT  [SUB_FRAME],\\'SUB FRAME\\'\\n          UNION ALL SELECT  [CORNER_BEAD_FIXING],\\'CORNER BEAD FIXING\\'\\n          UNION ALL SELECT  [CUTTING_AND_CHASING],\\'CUTTING & CHASING\\'\\n          UNION ALL SELECT  [MEP_PLASTERING_CLEARANCE_BOX_FIXING_AND_PIPE_SETTING], \\'MEP PLASTERING CLEARANCE (BOX FIXING & PIPE SETTING)\\'\\n          UNION ALL SELECT  [ONU_DB_AND_ALL_MEP_WORKS_INSTALLATION],\\'ONU, DB & ALL MEP WORKS INSTALLATION\\'\\n          UNION ALL SELECT  [ONU_DB_AND_ALL_MEP_WORKS_PACKING],\\'ONU, DB & ALL MEP WORKS PACKING\\'\\n          UNION ALL SELECT  [DRY_AREA_PLASTER],\\'DRY AREA PLASTER\\'\\n          UNION ALL SELECT  [PLASTERING_CLEARANCE_WITH_1_METER_MARKING], \\'PLASTERING CLEARANCE WITH 1 METER MARKING\\'\\n          UNION ALL SELECT  [CENTER_LINE_MARKING_FOR_FACADE_INSTALLATION], \\'CENTER LINE MARKING FOR FACADE INSTALLATION\\'\\n          UNION ALL SELECT  [UCW_STARTER_GUTTER],\\'UCW-STARTER GUTTER\\'\\n          UNION ALL SELECT  [UCW_BRACKETS],\\'UCW-BRACKETS\\'\\n          UNION ALL SELECT  [UCW_PANELS],\\'UCW-PANELS\\'\\n          UNION ALL SELECT  [UCW_ALIGNMENT],\\'UCW-ALIGNMENT\\'\\n          UNION ALL SELECT  [DRY_AREA_TILE_MARKING],\\'DRY AREA TILE MARKING\\'\\n          UNION ALL SELECT  [DRY_AREA_BORE_PACKING],\\'DRY AREA BORE PACKING\\'\\n          UNION ALL SELECT  [DRY_AREA_SCREED],\\'DRY AREA SCREED\\'\\n          UNION ALL SELECT  [SCREED_CURING],\\'SCREED CURING\\'\\n          UNION ALL SELECT  [PRIMER_STUCCO_BANDING],\\'PRIMER,STUCCO BANDING\\'\\n          UNION ALL SELECT  [BULK_HEAD],\\'BULK HEAD\\'\\n          UNION ALL SELECT  [MEP_H_L_WIRING],\\'MEP H/L WIRING\\'\\n          UNION ALL SELECT  [MEP_H_L_FRAMING_CLEARANCE],\\'MEP H/L FRAMING CLEARANCE\\'\\n          UNION ALL SELECT  [FIRE_SEALANT_WORKS_AROUND_DUCTS],\\'FIRE SEALANT WORKS AROUND DUCTS\\'\\n          UNION ALL SELECT  [DRY_AREA_FC_FRAMING],\\'DRY AREA FC FRAMING\\'\\n          UNION ALL SELECT  [WARDROBE_NIB_WALL],\\'WARDROBE NIB WALL\\'\\n          UNION ALL SELECT  [MEP_H_L_BOARDING_CLEARANCE],\\'MEP H/L BOARDING CLEARANCE\\'\\n          UNION ALL SELECT  [FC_BOARDING_WITH_JOINT_TAPING],\\'FC BOARDING WITH JOINT TAPING\\'\\n          UNION ALL SELECT  [PRIMER_CEILING],\\'PRIMER CEILING\\'\\n          UNION ALL SELECT  [STUCCO_1ST_COAT_CEILING],\\'STUCCO 1ST COAT CEILING\\'\\n          UNION ALL SELECT  [STUCCO_2ND_COAT_CEILING],\\'STUCCO 2ND COAT CEILING\\'\\n          UNION ALL SELECT  [FIRST_COAT_PAINT_CEILING],\\'FIRST COAT PAINT CEILING\\'\\n          UNION ALL SELECT  [MAIN_DOOR_THRESHOLD],\\'MAIN DOOR THRESHOLD\\'\\n          UNION ALL SELECT  [DRY_AREA_FLOOR_TILING],\\'DRY AREA FLOOR TILING\\'\\n          UNION ALL SELECT  [DRY_AREA_SKIRTING],\\'DRY AREA SKIRTING\\'\\n          UNION ALL SELECT  [POP_ABOVE_SKIRTING],\\'POP ABOVE SKIRTING\\'\\n          UNION ALL SELECT  [HINGE_DOOR_BOX_INSTALLATION],\\'HINGE DOOR BOX INSTALLATION\\'\\n          UNION ALL SELECT  [SCREED_NEAR_HINGE_DOOR],\\'SCREED NEAR HINGE DOOR\\'\\n          UNION ALL SELECT  [HINGE_DOOR_FRAME_INSTALLATION],\\'HINGE DOOR FRAME INSTALLATION\\'\\n          UNION ALL SELECT  [CURTAIN_WALL_BOX_SECTION],\\'CURTAIN WALL BOX SECTION\\'\\n          UNION ALL SELECT  [CURTAIN_WALL_FRAME_INSTALLATION],\\'CURTAIN WALL FRAME INSTALLATION\\'\\n          UNION ALL SELECT  [CURTAIN_WALL_GLASS_INSTALLATION],\\'CURTAIN WALL GLASS INSTALLATION\\'\\n          UNION ALL SELECT  [UCW_GI_SHEET_INSTALLATION_WALL],\\'UCW-GI SHEET INSTALLATION - WALL\\'\\n          UNION ALL SELECT  [UCW_GI_SHEET_INSTALLATION_FLOOR],\\'UCW-GI SHEET INSTALLATION - FLOOR\\'\\n          UNION ALL SELECT  [SCREED_NEAR_CURTAIN_WALL],\\'SCREED NEAR CURTAIN WALL\\'\\n          UNION ALL SELECT  [SLIDING_DOOR_BOX_INSTALLATION],\\'SLIDING DOOR BOX INSTALLATION\\'\\n          UNION ALL SELECT  [SLIDING_DOOR_FRAME_INSTALLATION],\\'SLIDING DOOR FRAME INSTALLATION\\'\\n          UNION ALL SELECT  [SCREED_NEAR_SLIDING_DOOR],\\'SCREED NEAR SLIDING DOOR\\'\\n          UNION ALL SELECT  [LEFT_OVER_TILE_INSTALLATION],\\'LEFT OVER TILE INSTALLATION\\'\\n          UNION ALL SELECT  [LEFT_OVER_SKIRTING],\\'LEFT OVER SKIRTING\\'\\n          UNION ALL SELECT  [TILE_GROUTING],\\'TILE GROUTING\\'\\n          UNION ALL SELECT  [TILE_SILICONE_WORKS],\\'TILE SILICONE WORKS\\'\\n          UNION ALL SELECT  [CURTAIN_WALL_MULLION],\\'CURTAIN WALL MULLION\\'\\n          UNION ALL SELECT  [CURTAIN_WALL_FLASHING_INSTALLATION],\\'CURTAIN WALL FLASHING INSTALLATION\\'\\n          UNION ALL SELECT  [CURTAIN_WALL_SILICONE],\\'CURTAIN WALL SILICONE\\'\\n          UNION ALL SELECT  [UCW_FIRESTOP_AND_SILICONE],\\'UCW-FIRESTOP AND SILICONE\\'\\n          UNION ALL SELECT  [UCW_GI_FLASHING],\\'UCW-GI FLASHING\\'\\n          UNION ALL SELECT  [HINGE_DOOR_GLASS_INSTALLATION],\\'HINGE DOOR GLASS INSTALLATION\\'\\n          UNION ALL SELECT  [HINGE_DOOR_INTERNAL_SILICONE],\\'HINGE DOOR INTERNAL SILICONE\\'\\n          UNION ALL SELECT  [HINGE_DOOR_ALIGNMENT],\\'HINGE DOOR ALIGNMENT\\'\\n          UNION ALL SELECT  [HINGE_DOOR_EXTERNAL_SILICONE],\\'HINGE DOOR EXTERNAL SILICONE\\'\\n          UNION ALL SELECT  [SLIDING_DOOR_GLASS_INSTALLATION],\\'SLIDING DOOR GLASS INSTALLATION\\'\\n          UNION ALL SELECT  [SLIDING_DOOR_INTERNAL_SILICONE],\\'SLIDING DOOR INTERNAL SILICONE\\'\\n          UNION ALL SELECT  [SLIDING_DOOR_ALIGNMENT],\\'SLIDING DOOR ALIGNMENT\\'\\n          UNION ALL SELECT  [SLIDING_DOOR_EXTERNAL_SILICONE],\\'SLIDING DOOR EXTERNAL SILICONE\\'\\n          UNION ALL SELECT  [WINDOW_JAMB_CORNER_PELMET_AREA_SHADOW_ANGLE_POP_WORKS],\\'WINDOW JAMB,CORNER,PELMET AREA, SHADOW ANGLE POP WORKS\\'\\n          UNION ALL SELECT  [WALL_STUCCO_1ST_COAT],\\'WALL STUCCO 1ST COAT\\'\\n          UNION ALL SELECT  [WALL_STUCCO_2ND_COAT],\\'WALL STUCCO 2ND COAT\\'\\n          UNION ALL SELECT  [WALL_PAINT_1ST_COAT],\\'WALL PAINT 1ST COAT\\'\\n          UNION ALL SELECT  [DOOR_FRAME_INSTALLATION],\\'DOOR - FRAME INSTALLATION\\'\\n          UNION ALL SELECT  [DOOR_ARCHITRAVE_INSTALLATION],\\'DOOR - ARCHITRAVE INSTALLATION\\'\\n          UNION ALL SELECT  [DOOR_SHUTTER_INSTALLATION],\\'DOOR - SHUTTER INSTALLATION\\'\\n          UNION ALL SELECT  [DOOR_IRONMONGERY_INSTALLATION],\\'DOOR - IRONMONGERY INSTALLATION\\'\\n          UNION ALL SELECT  [DOOR_SILICONE_WORKS],\\'DOOR - SILICONE WORKS\\'\\n          UNION ALL SELECT  [CUT_PIECE_SKIRTING_NEAR_DOOR],\\'CUT PIECE SKIRTING NEAR DOOR\\'\\n          UNION ALL SELECT  [GAS_METER_INSTALLATION],\\'GAS METER INSTALLATION\\'\\n          UNION ALL SELECT  [MEP_KITCHEN_APPLIANCES],\\'MEP KITCHEN APPLIANCES\\'\\n          UNION ALL SELECT  [WARDROBE_CARCASS_INSTALLATION],\\'WARDROBE CARCASS INSTALLATION\\'\\n          UNION ALL SELECT  [WARDROBE_SHUTTER_INSTALLATION],\\'WARDROBE SHUTTER INSTALLATION\\'\\n          UNION ALL SELECT  [WARDROBE_SILICONE_WORKS],\\'WARDROBE SILICONE WORKS\\'\\n          UNION ALL SELECT  [CUT_PIECE_SKIRTING_NEAR_WARDROBE],\\'CUT PIECE SKIRTING NEAR WARDROBE\\'\\n          UNION ALL SELECT  [AIR_BALANCING_FOR_FCU],\\'AIR BALANCING FOR FCU\\'\\n          UNION ALL SELECT  [FCU_CLOSURE_CLEARANCE],\\'FCU CLOSURE CLEARANCE\\'\\n          UNION ALL SELECT  [VCD_CLOSURE_FCU],\\'VCD CLOSURE - FCU\\'\\n          UNION ALL SELECT  [AIR_BALANCING_FOR_FAHU],\\'AIR BALANCING FOR FAHU\\'\\n          UNION ALL SELECT  [FAHU_CLOSURE_CLEARANCE],\\'FAHU CLOSURE CLEARANCE\\'\\n          UNION ALL SELECT  [VCD_CLOSURE_FAHU],\\'VCD CLOSURE - FAHU\\'\\n          UNION ALL SELECT  [FINAL_FIXTURES_INSTALLATION],\\'FINAL FIXTURES INSTALLATION\\'\\n          UNION ALL SELECT  [ACCESS_PANEL_FINAL_COAT_AND_INSTALLATION],\\'ACCESS PANEL FINAL COAT AND INSTALLATION\\'\\n          UNION ALL SELECT  [DRY_AREA_FINAL_COAT_PREPARATION],\\'DRY AREA FINAL COAT PREPARATION\\'\\n          UNION ALL SELECT  [DRY_AREA_FINAL_COAT_PAINT],\\'DRY AREA FINAL COAT PAINT\\'\\n          UNION ALL SELECT  [THERMOSTAT_COVER_INSTALLATION],\\'THERMOSTAT COVER INSTALLATION\\'\\n          UNION ALL SELECT  [INTERCOM_COVER_INSTALLATION],\\'INTERCOM COVER INSTALLATION\\'\\n          UNION ALL SELECT  [ONU_AND_DB_PANEL_DOOR],\\'ONU & DB PANEL DOOR\\'\\n          UNION ALL SELECT  [SWITCH_SOCKET_COVER_INSTALLATION],\\'SWITCH SOCKET COVER INSTALLATION\\'\\n          ) AS COLUMN_NAME(VALUE,TYPE_OF_WORK)\\n          INNER JOIN [STG].[O_PLN_DRYAREA_MAP_STG] DM\\n          ON COLUMN_NAME.TYPE_OF_WORK = DM.ACTIVITY_SEQUENCE\\n          WHERE VALUE IS NOT NULL ) DA\\nLEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          DA.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          DA.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          DA.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE DRANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Flat as string,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_DRYAREA_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level = LEVEL,",
						"          Flat = FLAT,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = VALUE,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Update_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DRYAREA_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_DRYAREA_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_ELECTRICROOM')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_ELECTRICALROOM_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_ELECTRICALROOM_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_ELECTRICROOM_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          TOWER as string,",
						"          LEVEL as string,",
						"          Sclicer as string,",
						"          ACTIVITY_ID as integer,",
						"          VALUE as string,",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          UPLOAD_DATE as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    P.PROJECT_IDENTIFIER,\\n    E.TOWER    ,\\n    E.LEVEL,\\n    \\'Electrical Room\\' as Sclicer,\\n    E.ACTIVITY_ID    ,\\n    CASE \\n        WHEN E.VALUE IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE E.VALUE\\n    END AS VALUE,\\n    E.TYPE_OF_WORK    ,\\n    E.CATEGORY   ,\\n    E.UPLOAD_DATE  \\nFROM (\\nSELECT ER.UPLOAD_TIME AS UPLOAD_DATE,\\nER.PROJECT_ID,\\nER.TOWER,\\nER.LEVEL,\\nCOLUMN_NAME.*,\\nEM.ACTIVITY_ID,\\nEM.SBU_ID,\\nEM.CATEGORY,\\nDENSE_RANK () OVER(PARTITION BY  PROJECT_ID ORDER BY  CAST(UPLOAD_TIME AS DATE) DESC) DRANK\\nFROM STG.O_PLN_ELECTRICALROOM_RAW_STG ER\\n CROSS APPLY  (\\n         SELECT BLOCKWORK_LAYOUT,\\'BLOCKWORK LAYOUT\\'\\nUNION ALL SELECT BLOCKWORK,\\'BLOCKWORK\\'\\nUNION ALL SELECT MEP_MARKING_FOR_BUILDERS_WORK,\\'MEP MARKING FOR BUILDERS WORK\\'\\nUNION ALL SELECT CUTTING_AND_CHASING_OF_BLOCKWORK,\\'CUTTING AND CHASING OF BLOCKWORK\\'\\nUNION ALL SELECT MEP_SERVICES_INSTALLATION,\\'MEP SERVICES INSTALLATION\\'\\nUNION ALL SELECT WALL_MEP_SERVICES_PACKING,\\'WALL MEP SERVICES PACKING\\'\\nUNION ALL SELECT PLASTER,\\'PLASTER\\'\\nUNION ALL SELECT SCREED,\\'SCREED\\'\\nUNION ALL SELECT WALL_AND_CEILING_PRIMER,\\'WALL AND CEILING PRIMER\\'\\nUNION ALL SELECT CEILING_STUCCO_1ST_AND_2ND_COAT,\\'CEILING STUCCO (1ST AND 2ND COAT)\\'\\nUNION ALL SELECT WALL_STUCCO_1ST_AND_2ND_COAT,\\'WALL STUCCO (1ST AND 2ND COAT)\\'\\nUNION ALL SELECT CEILING_FIRST_COAT_PAINT,\\'CEILING FIRST COAT PAINT\\'\\nUNION ALL SELECT WALL_FIRST_COAT_PAINT,\\'WALL FIRST COAT PAINT\\'\\nUNION ALL SELECT METER_BOARD_FIXING,\\'METER BOARD FIXING\\'\\nUNION ALL SELECT METER_BOARD_PAINTING,\\'METER BOARD PAINTING\\'\\nUNION ALL SELECT INSTALLATION_OF_CABLE_TRAY_AND_TRUNKING,\\'INSTALLATION OF CABLE TRAY AND TRUNKING\\'\\nUNION ALL SELECT INSTALLATION_OF_PANELS,\\'INSTALLATION OF PANELS\\'\\nUNION ALL SELECT CABLE_LAYING_AND_GLANDING_WORKS,\\'CABLE LAYING AND GLANDING WORKS\\'\\nUNION ALL SELECT DRESSING_AND_TERMINATION_OF_SMDB_AND_PANELS,\\'DRESSING AND TERMINATION OF SMDB AND PANELS\\'\\nUNION ALL SELECT BUS_BAR_WITH_TAP_OFF_BOX_COMPLETION,\\'BUS BAR WITH TAP OFF BOX COMPLETION\\'\\nUNION ALL SELECT THRESHOLD,\\'THRESHOLD\\'\\nUNION ALL SELECT FLOOR_TILE,\\'FLOOR TILE\\'\\nUNION ALL SELECT DOOR_FRAME_INSTALLATION,\\'DOOR FRAME INSTALLATION\\'\\nUNION ALL SELECT DOOR_ARCHITRAVE_INSTALLATION,\\'DOOR ARCHITRAVE INSTALLATION\\'\\nUNION ALL SELECT DOOR_SHUTTER_INSTALLATION,\\'DOOR SHUTTER INSTALLATION\\'\\nUNION ALL SELECT DOOR_IRONMONGERY_INSTALLATION,\\'DOOR IRONMONGERY INSTALLATION\\'\\nUNION ALL SELECT DOOR_SILICONE,\\'DOOR SILICONE\\'\\nUNION ALL SELECT EPOXY_GRINDING,\\'EPOXY ERINDING\\'\\nUNION ALL SELECT EPOXY_BUG_FILL,\\'EPOXY BUG FILL\\'\\nUNION ALL SELECT EPOXY_PRIMER,\\'EPOXY PRIMER\\'\\nUNION ALL SELECT EPOXY_FIRST_COAT,\\'EPOXY FIRST COAT\\'\\nUNION ALL SELECT EPOXY_FINAL_COAT,\\'EPOXY FINAL COAT\\'\\nUNION ALL SELECT SKIRTING,\\'SKIRTING\\'\\nUNION ALL SELECT POP_WORKS,\\'POP WORKS\\'\\nUNION ALL SELECT ELECTRICAL_ROOM_TOP_BOARDING,\\'ELECTRICAL ROOM TOP BOARDING\\'\\nUNION ALL SELECT FIRE_SEALANT_WORKS,\\'FIRE SEALANT WORKS\\'\\nUNION ALL SELECT ANGLE_FIXING,\\'ANGLE FIXING\\'\\nUNION ALL SELECT SHAFT_BOARDING,\\'SHAFT BOARDING\\'\\nUNION ALL SELECT GROUTING,\\'EROUTING\\'\\nUNION ALL SELECT SILICONE,\\'SILICONE\\'\\nUNION ALL SELECT SIGNAGE,\\'SIGNAGE\\'\\nUNION ALL SELECT MEP_FINAL_FIXTURES,\\'MEP FINAL FIXTURES\\'\\nUNION ALL SELECT ELECTRIC_METER_INSTALLATION,\\'ELECTRIC METER INSTALLATION\\'\\nUNION ALL SELECT FINAL_COAT_PAINT,\\'FINAL COAT PAINT\\'\\n)AS COLUMN_NAME(VALUE,TYPE_OF_WORK)\\nleft JOIN STG.O_PLN_ELECTRICALROOM_MAP_STG EM\\nON COLUMN_NAME.TYPE_OF_WORK = EM.ACTIVITY_SEQUENCE\\nWHERE VALUE IS NOT NULL\\n) E\\nLEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          E.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM]P\\n      ON          E.PROJECT_ID=P.PROJECT_IDENTIFIER\\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          E.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          E.DRANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(LoadDateTime = currentUTC(),",
						"          ID = SurrogateKey_ID+$MAX_ID) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Indentifer as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Update_date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_ELECTRICROOM_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Indentifer = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level = LEVEL,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = VALUE,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Update_date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_ELECTRICALROOM_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_ELECTRICROOM_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_ENGINEERING_DRAWING')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PLN_ENGINEERING_DRAWING_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_DRAWING_DETAIL_DRAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_ENGINEERING_DRAWING_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to "
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          SBU_ID as integer,",
						"          Upload_Date as date,",
						"          tower as string,",
						"          Type as string,",
						"          Villa_Type as string,",
						"          Category as string,",
						"          Drawing_Number as string,",
						"          Drawing_Title as string,",
						"          Scheduled_Date as string,",
						"          {PNCA_commitment } as string,",
						"          R0 as string,",
						"          R0_Trans_Id as string,",
						"          R1 as string,",
						"          R1_Trans_Id as string,",
						"          R2 as string,",
						"          R2_Trans_Id as string,",
						"          R3 as string,",
						"          R3_Trans_Id as string,",
						"          R4 as string,",
						"          R4_Trans_Id as string,",
						"          R5 as string,",
						"          R5_Trans_Id as string,",
						"          R6 as string,",
						"          R6_Trans_Id as string,",
						"          R7 as string,",
						"          R7_Trans_Id as string,",
						"          R8 as string,",
						"          R8_Trans_Id as string,",
						"          R9 as string,",
						"          R9_Trans_Id as string,",
						"          R10 as string,",
						"          R10_Trans_Id as string,",
						"          R11 as string,",
						"          R11_Trans_Id as string,",
						"          R12 as string,",
						"          R12_Trans_Id as string,",
						"          R13 as string,",
						"          R13_Trans_Id as string,",
						"          R14 as string,",
						"          R14_Trans_Id as string,",
						"          R15 as string,",
						"          R15_Trans_Id as string,",
						"          R16 as string,",
						"          R16_Trans_Id as string,",
						"          R17 as string,",
						"          R17_Trans_Id as string,",
						"          R18 as string,",
						"          R18_Trans_Id as string,",
						"          R19 as string,",
						"          R19_Trans_Id as string,",
						"          R20 as string,",
						"          R20_Trans_Id as string,",
						"          R21 as string,",
						"          R21_Trans_Id as string,",
						"          R22 as string,",
						"          R22_Trans_Id as string,",
						"          R23 as string,",
						"          R23_Trans_Id as string,",
						"          R24 as string,",
						"          R24_Trans_Id as string,",
						"          R25 as string,",
						"          R25_Trans_Id as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n          P.Sort_ID as PROJECT_ID,\\n           PROJECT_ID as PROJECT_IDENTIFIER,\\n          SM.SBU_MAP_ID AS SBU_ID,\\n          CAST(upload_time AS DATE) AS Upload_Date,\\n        [tower],\\n        [Type],\\n        [Villa Type] AS [Villa_Type],\\n        Category,\\n        [Drawing Number] AS [Drawing_Number],\\n        [Drawing Title] AS [Drawing_Title],\\n        NULLIF([Scheduled Date],\\'\\') AS \\'Scheduled_Date\\',\\n        NULLIF([PNCA commitment],\\'\\') AS \\'PNCA_commitment \\',\\n        NULLIF(R0,\\'\\') AS R0,\\n        NULLIF([R0-Trans_Id],\\'\\') AS [R0_Trans_Id],\\n        NULLIF(R1,\\'\\') AS R1,\\n        NULLIF([R1-Trans_Id],\\'\\') AS [R1_Trans_Id],\\n        NULLIF(R2,\\'\\') AS R2,\\n        NULLIF([R2-Trans_Id],\\'\\') AS [R2_Trans_Id],\\n        NULLIF(R3,\\'\\') AS R3,\\n        NULLIF([R3-Trans_Id],\\'\\') AS [R3_Trans_Id],\\n        NULLIF(R4,\\'\\') AS R4,\\n        NULLIF([R4-Trans_Id],\\'\\') AS [R4_Trans_Id],\\n        NULLIF(R5,\\'\\') AS R5,\\n        NULLIF([R5-Trans_Id],\\'\\') AS [R5_Trans_Id],\\n        NULLIF(R6,\\'\\') AS R6,\\n        NULLIF([R6-Trans_Id],\\'\\') AS [R6_Trans_Id],\\n        NULLIF(R7,\\'\\') AS R7,\\n        NULLIF([R7-Trans_Id],\\'\\') AS [R7_Trans_Id],\\n        NULLIF(R8,\\'\\') AS R8,\\n        NULLIF([R8-Trans_Id],\\'\\') AS [R8_Trans_Id],\\n        NULLIF(R9,\\'\\') AS R9,\\n        NULLIF([R9-Trans_Id],\\'\\') AS [R9_Trans_Id],\\n        NULLIF(R10,\\'\\') AS R10,\\n        NULLIF([R10-Trans_Id],\\'\\') AS [R10_Trans_Id],\\n        NULLIF(R11,\\'\\') AS R11,\\n        NULLIF([R11-Trans_Id],\\'\\') AS [R11_Trans_Id],\\n        NULLIF(R12,\\'\\') AS R12,\\n        NULLIF([R12-Trans_Id],\\'\\') AS [R12_Trans_Id],\\n        NULLIF(R11,\\'\\') AS R13,\\n        NULLIF([R13-Trans_Id],\\'\\') AS [R13_Trans_Id],\\n        NULLIF(R12,\\'\\') AS R14,\\n        NULLIF([R14-Trans_Id],\\'\\') AS [R14_Trans_Id],\\n        NULLIF(R13,\\'\\') AS R15,\\n        NULLIF([R15-Trans_Id],\\'\\') AS [R15_Trans_Id],\\n        NULLIF(R16,\\'\\') AS R16,\\n        NULLIF([R16-Trans_Id],\\'\\') AS [R16_Trans_Id],\\n        NULLIF(R17,\\'\\') AS R17,\\n        NULLIF([R17-Trans_Id],\\'\\') AS [R17_Trans_Id],\\n        NULLIF(R18,\\'\\') AS R18,\\n        NULLIF([R18-Trans_Id],\\'\\') AS [R18_Trans_Id],\\n        NULLIF(R19,\\'\\') AS R19,\\n        NULLIF([R19-Trans_Id],\\'\\') AS [R19_Trans_Id],\\n        NULLIF(R20,\\'\\') AS R20,\\n        NULLIF([R20-Trans_Id],\\'\\') AS [R20_Trans_Id],\\n        NULLIF(R21,\\'\\') AS R21,\\n        NULLIF([R21-Trans_Id],\\'\\') AS [R21_Trans_Id],\\n        NULLIF(R22,\\'\\') AS R22,\\n        NULLIF([R22-Trans_Id],\\'\\') AS [R22_Trans_Id],\\n        NULLIF(R23,\\'\\') AS R23,\\n        NULLIF([R23-Trans_Id],\\'\\') AS [R23_Trans_Id],\\n        NULLIF(R24,\\'\\') AS R24,\\n        NULLIF([R24-Trans_Id],\\'\\') AS [R24_Trans_Id],\\n        NULLIF(R25,\\'\\') AS R25,\\n        NULLIF([R25-Trans_Id],\\'\\') AS [R25_Trans_Id]\\nFROM ( SELECT * , DENSE_RANK () OVER (PARTITION BY  project_id ORDER BY  CAST(upload_time AS DATE) DESC) Project_Udate_DRANK\\n        FROM STG.O_PLN_DRAWING_DETAIL_DRAW_STG\\n    WHERE ([Type] IS NOT NULL AND TRIM([Type]) NOT IN (\\'\\')) \\n     ) AB \\n     LEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          AB.PROJECT_ID=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          AB.SBU_ID=SM.SBU_IDENTIFIER\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Tower as string,",
						"          Type as string,",
						"          Villa_Type as string,",
						"          Category as string,",
						"          Drawing_Number as string,",
						"          Drawing_Title as string,",
						"          Scheduled_Date as string,",
						"          PNCA_commitment as string,",
						"          R0 as string,",
						"          R0_Trans_Id as string,",
						"          R1 as string,",
						"          R1_Trans_Id as string,",
						"          R2 as string,",
						"          R2_Trans_Id as string,",
						"          R3 as string,",
						"          R3_Trans_Id as string,",
						"          R4 as string,",
						"          R4_Trans_Id as string,",
						"          R5 as string,",
						"          R5_Trans_Id as string,",
						"          R6 as string,",
						"          R6_Trans_Id as string,",
						"          R7 as string,",
						"          R7_Trans_Id as string,",
						"          R8 as string,",
						"          R8_Trans_Id as string,",
						"          R9 as string,",
						"          R9_Trans_Id as string,",
						"          R10 as string,",
						"          R10_Trans_Id as string,",
						"          R11 as string,",
						"          R11_Trans_Id as string,",
						"          R12 as string,",
						"          R12_Trans_Id as string,",
						"          R13 as string,",
						"          R13_Trans_Id as string,",
						"          R14 as string,",
						"          R14_Trans_Id as string,",
						"          R15 as string,",
						"          R15_Trans_Id as string,",
						"          R16 as string,",
						"          R16_Trans_Id as string,",
						"          R17 as string,",
						"          R17_Trans_Id as string,",
						"          R18 as string,",
						"          R18_Trans_Id as string,",
						"          R19 as string,",
						"          R19_Trans_Id as string,",
						"          R20 as string,",
						"          R20_Trans_Id as string,",
						"          R21 as string,",
						"          R21_Trans_Id as string,",
						"          R22 as string,",
						"          R22_Trans_Id as string,",
						"          R23 as string,",
						"          R23_Trans_Id as string,",
						"          R24 as string,",
						"          R24_Trans_Id as string,",
						"          R25 as string,",
						"          R25_Trans_Id as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_ENGINEERING_DRAWING_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          SBU_ID,",
						"          Tower = tower,",
						"          Type,",
						"          Villa_Type,",
						"          Category,",
						"          Drawing_Number,",
						"          Drawing_Title,",
						"          Scheduled_Date,",
						"          PNCA_commitment = {PNCA_commitment },",
						"          R0,",
						"          R0_Trans_Id,",
						"          R1,",
						"          R1_Trans_Id,",
						"          R2,",
						"          R2_Trans_Id,",
						"          R3,",
						"          R3_Trans_Id,",
						"          R4,",
						"          R4_Trans_Id,",
						"          R5,",
						"          R5_Trans_Id,",
						"          R6,",
						"          R6_Trans_Id,",
						"          R7,",
						"          R7_Trans_Id,",
						"          R8,",
						"          R8_Trans_Id,",
						"          R9,",
						"          R9_Trans_Id,",
						"          R10,",
						"          R10_Trans_Id,",
						"          R11,",
						"          R11_Trans_Id,",
						"          R12,",
						"          R12_Trans_Id,",
						"          R13,",
						"          R13_Trans_Id,",
						"          R14,",
						"          R14_Trans_Id,",
						"          R15,",
						"          R15_Trans_Id,",
						"          R16,",
						"          R16_Trans_Id,",
						"          R17,",
						"          R17_Trans_Id,",
						"          R18,",
						"          R18_Trans_Id,",
						"          R19,",
						"          R19_Trans_Id,",
						"          R20,",
						"          R20_Trans_Id,",
						"          R21,",
						"          R21_Trans_Id,",
						"          R22,",
						"          R22_Trans_Id,",
						"          R23,",
						"          R23_Trans_Id,",
						"          R24,",
						"          R24_Trans_Id,",
						"          R25,",
						"          R25_Trans_Id,",
						"          Update_Date = Upload_Date,",
						"          LoadDateTime,",
						"          Project_Identifier = PROJECT_IDENTIFIER",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_ENGINEERING_DRAWING_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_FIRELIFTLOBBY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_FIRELIFTLOBBY_MAP_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_FIRELIFTLOBBY_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          SBU_ID as integer,",
						"          TOWER as string,",
						"          ACTIVITY_ID as integer,",
						"          Level as string,",
						"          Sclicer as string,",
						"          VALUE as string,",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          UPLOAD_DATE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    P.PROJECT_IDENTIFIER ,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    F.TOWER,\\n    F.ACTIVITY_ID,\\n    F.Level,\\n    \\'Fire Lift Lobby\\' as Sclicer,\\n    CASE \\n        WHEN F.VALUE IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE F.VALUE\\n    END AS VALUE,\\n    F.TYPE_OF_WORK,\\n    F.CATEGORY,\\n    F.UPLOAD_DATE\\n     from (\\n        SELECT CAST(FR.upload_time as DATE) AS Upload_Date,\\n        FR.project_id,\\n        FR.tower,\\n        FR.Level,\\n        Column_Name.*,\\n        FM.ACTIVITY_ID,\\n        FM.SBU_ID,\\n        FM.CATEGORY,\\n        DENSE_RANK () OVER     (PARTITION BY  project_id , FM.SBU_ID\\n                            ORDER BY  CAST(upload_time as DATE) DESC\\n                            )     DRANK\\n    FROM STG.O_PLN_FIRELIFTLOBBY_RAW_STG FR\\n    CROSS apply (\\n                        SELECT    MEP_Marking_for_Builders_Work    ,    \\'MEP Marking for Builders Work\\'\\n                        UNION ALL SELECT    Cutting_and_Chasing_of_Blockwork    ,    \\'Cutting & Chasing of Blockwork\\'\\n                        UNION ALL SELECT    MEP_Services_Installation    ,    \\'MEP Services Installation\\'\\n                        UNION ALL SELECT    Wall_MEP_Services_Packing    ,    \\'Wall MEP Services Packing\\'\\n                        UNION ALL SELECT    Plaster    ,    \\'Plaster\\'\\n                        UNION ALL SELECT    Screed    ,    \\'Screed\\'\\n                        UNION ALL SELECT    Lift_Door_Installation_and_Jamb_Installation    ,    \\'Lift Door Installation & Jamb Installation\\'\\n                        UNION ALL SELECT    Beside_Lift_Door_Blockwork    ,    \\'Beside Lift Door Blockwork\\'\\n                        UNION ALL SELECT    Beside_Lift_Door_Plaster    ,    \\'Beside Lift Door Plaster\\'\\n                        UNION ALL SELECT    MEP_High_Level_Works    ,    \\'MEP High Level Works\\'\\n                        UNION ALL SELECT    FC_Framing    ,    \\'FC Framing\\'\\n                        UNION ALL SELECT    MEP_Boarding_Clearance    ,    \\'MEP Boarding Clearance\\'\\n                        UNION ALL SELECT    FC_Boarding    ,    \\'FC Boarding\\'\\n                        UNION ALL SELECT    Joint_Taping_and_Sanding    ,    \\'Joint Taping and Sanding\\'\\n                        UNION ALL SELECT    Ceiling_Primer    ,    \\'Ceiling Primer\\'\\n                        UNION ALL SELECT    Ceiling_Stucco_1st_and_2nd_Coat    ,    \\'Ceiling Stucco 1st and 2nd Coat\\'\\n                        UNION ALL SELECT    Ceiling_First_Coat_Paint    ,    \\'Ceiling First Coat Paint\\'\\n                        UNION ALL SELECT    Wall_Primer    ,    \\'Wall Primer\\'\\n                        UNION ALL SELECT    Wall_Stucco_1st_and_2nd_Coat    ,    \\'Wall Stucco 1st and 2nd Coat\\'\\n                        UNION ALL SELECT    Wall_First_Coat_Paint    ,    \\'Wall First Coat Paint\\'\\n                        UNION ALL SELECT    Floor_Tile    ,    \\'Floor Tile\\'\\n                        UNION ALL SELECT    Door_Frame_Installation    ,    \\'Door-Frame Installation\\'\\n                        UNION ALL SELECT    Door_Architrave_Installation    ,    \\'Door-Architrave Installation\\'\\n                        UNION ALL SELECT    Door_Shutter_Installation    ,    \\'Door-Shutter Installation\\'\\n                        UNION ALL SELECT    Door_Ironmongery_Installation    ,    \\'Door-Ironmongery Installation\\'\\n                        UNION ALL SELECT    Door_Silicone    ,    \\'Door-Silicone\\'\\n                        UNION ALL SELECT    Epoxy_Grinding    ,    \\'Epoxy Grinding\\'\\n                        UNION ALL SELECT    Epoxy_Bug_Fill    ,    \\'Epoxy Bug Fill\\'\\n                        UNION ALL SELECT    Epoxy_Primer    ,    \\'Epoxy Primer\\'\\n                        UNION ALL SELECT    Epoxy_First_Coat    ,    \\'Epoxy First Coat\\'\\n                        UNION ALL SELECT    Epoxy_Final_Coat    ,    \\'Epoxy Final Coat\\'\\n                        UNION ALL SELECT    Skirting    ,    \\'Skirting\\'\\n                        UNION ALL SELECT    Grout    ,    \\'Grout\\'\\n                        UNION ALL SELECT    Silicone    ,    \\'Silicone\\'\\n                        UNION ALL SELECT    Signage    ,    \\'Signage\\'\\n                        UNION ALL SELECT    MEP_Final_Fixtures    ,    \\'MEP Final Fixtures\\'\\n                        UNION ALL SELECT    Final_Coat    ,    \\'Final Coat\\'\\n                        )as Column_Name(value,Type_of_work)\\n    INNER JOIN STG.O_PLN_FIRELIFTLOBBY_MAP_STG FM\\n    ON Column_Name.Type_of_work = FM.ACTIVITY_SEQUENCE\\n    WHERE VALUE IS NOT NULL\\n       ) F\\nLEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          F.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          F.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          F.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          F.DRANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_Id as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(Id = SurrogateKey_Id+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Project_Id as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_Id as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Upload_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate Table [DWH].[PLN_FIRELIFTLOBBY_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id,",
						"          Project_Id = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_Id = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = VALUE,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Upload_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_FIRELIFTLOBBY_MAP_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_FIRELIFTLOBBY_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_FLATFINISHES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PLN_FLATFINISHES_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_FLATFINISHES_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Update_Date as date,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          Level_ID as integer,",
						"          Sbu_Id as integer,",
						"          Tower as string,",
						"          Sclicer as string,",
						"          Flat as integer,",
						"          Level as string,",
						"          value as decimal(24,6),",
						"          Type_of_work as string,",
						"          Activity_ID as integer,",
						"          Category as string,",
						"          Category_Sort as integer,",
						"          Sort_Type_Of_Work as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: ' SELECT  \\n A.Update_Date,\\nP.Sort_ID as Project_ID,\\nP.Project_Identifier,\\nOLMA.Level_MAP_ID AS Level_ID,\\nA.Sbu_Id,\\n A.Tower,\\n A.Sclicer,\\n A.Flat,\\n A.Level,\\n TRY_CAST(REPLACE(A.value,\\'%\\',\\'\\') AS DECIMAL)/100 AS value,\\n A.Type_of_work,\\n A.Activity_ID,\\n A.Category,\\n               CASE \\n WHEN TRIM(Category) = (\\'MEP\\') THEN 1\\n WHEN TRIM(Category) = (\\'Blockwork\\') THEN 2\\n WHEN TRIM(Category) = (\\'Plaster\\') THEN 3\\n WHEN TRIM(Category) = (\\'Builders Work\\') THEN 4\\n WHEN TRIM(Category) = (\\'Facade\\') THEN 5\\n WHEN TRIM(Category) = (\\'Tile\\') THEN 6\\n WHEN TRIM(Category) = (\\'Screed\\') THEN 7\\n WHEN TRIM(Category) = (\\'Paint\\') THEN 8\\n WHEN TRIM(Category) = (\\'Gypsum\\') THEN 9\\n WHEN TRIM(Category) = (\\'Marble\\') THEN 10\\n WHEN TRIM(Category) = (\\'Silicone\\') THEN 11\\n WHEN TRIM(Category) = (\\'Joinery\\') THEN 12\\n WHEN TRIM(Category) = (\\'SBU1\\') THEN 13\\n WHEN TRIM(Category) = (\\'Waterproofing\\') THEN 14\\n WHEN TRIM(Category) = (\\'Fa�ade\\') THEN 15\\n WHEN TRIM(Category) = (\\'EIFS\\') THEN 16\\n WHEN TRIM(Category) = (\\'SFD\\') THEN 17\\n WHEN TRIM(Category) = (\\'Water Proofing\\') THEN 18\\n WHEN TRIM(Category) = (\\'Appliances\\') THEN 19\\n       END AS Category_Sort ,\\n       CONCAT(A.ACTIVITY_ID,\\' \\', A.Type_of_work) AS Sort_Type_Of_Work \\n \\nfrom(          \\n          SELECT * FROM [DWH].[PLN_DRYAREA_FACT]\\n UNION ALL\\n SELECT * FROM [DWH].[PLN_WETAREA_FACT]\\n UNION ALL\\n SELECT * FROM [DWH].[PLN_BALCONYAREA_FACT]\\n UNION ALL\\n SELECT  * FROM [DWH].[PLN_KITCHENAREA_FACT]\\n          ) A\\nLEFT JOIN   [DWH].[PLN_LEVEL_MAP_ALL_DIM] OLMA\\n               ON A.Level_ID = OLMA.[Level_Map_ID]\\n     LEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n  ON  A.PROJECT_ID=P.Sort_ID\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_Id as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(Id = SurrogateKey_Id+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Upload_Date as date,",
						"          project_id as integer,",
						"          Project_Identifier as string,",
						"          Level_Id as integer,",
						"          SBU_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Flat as integer,",
						"          Sclicer as string,",
						"          ACTIVITY_ID as integer,",
						"          value as decimal(14,4),",
						"          Type_of_work as string,",
						"          Category as string,",
						"          sort_type_of_work as string,",
						"          Category_Sort as integer,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate table [DWH].[PLN_FLATFINISHES_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id,",
						"          Upload_Date = Update_Date,",
						"          project_id = Project_ID,",
						"          Project_Identifier,",
						"          Level_Id = Level_ID,",
						"          SBU_ID = Sbu_Id,",
						"          Tower,",
						"          Level,",
						"          Flat,",
						"          Sclicer,",
						"          ACTIVITY_ID = Activity_ID,",
						"          value,",
						"          Type_of_work,",
						"          Category,",
						"          sort_type_of_work = Sort_Type_Of_Work,",
						"          Category_Sort,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_FLATFINISHES_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_GARBAGEROOM')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_GARBAGEROOM_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_GARBAGEROOM_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_GARBAGEROOM_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_PLN_GARBAGEROOM_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          TOWER as string,",
						"          PROJECT_IDENTIFIER as string,",
						"          LEVEL as string,",
						"          Sclicer as string,",
						"          ACTIVITY_ID as integer,",
						"          VALUE as string,",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          UPLOAD_DATE as date",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n     P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    GAR.TOWER    ,\\n    P.PROJECT_IDENTIFIER ,\\n    GAR.[LEVEL]    ,\\n    \\'Garbage Room\\' as Sclicer,\\n      GAR.ACTIVITY_ID    ,\\n    CASE \\n        WHEN GAR.VALUE IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE GAR.VALUE\\n    END AS VALUE,\\n    GAR.TYPE_OF_WORK    ,\\n    GAR.CATEGORY   ,\\n     GAR.UPLOAD_DATE  \\n   \\nFROM \\n\\n(\\n        SELECT CAST(GR.UPLOAD_TIME AS DATE) AS UPLOAD_DATE,\\n        GR.PROJECT_ID,\\n        GR.TOWER,\\n        GR.LEVEL,\\n        COLUMN_NAME.*,\\n        GM.ACTIVITY_ID,\\n        GM.SBU_ID,\\n        GM.CATEGORY,\\n        DENSE_RANK () OVER     (PARTITION BY  PROJECT_ID ,GM.SBU_ID\\n                            ORDER BY  CAST(UPLOAD_TIME AS DATE) DESC\\n                            )     DRANK\\n    FROM STG.O_PLN_GARBAGEROOM_RAW_STG  GR\\n    CROSS APPLY  (\\n         SELECT    [OUTER_WALL_BLOCKWORK]     ,  \\'OUTER WALL BLOCKWORK\\'\\nUNION ALL SELECT   [GARBAGE_CHUTE_WORKS]     ,  \\'GARBAGE CHUTE WORKS\\'\\nUNION ALL SELECT   [MEP_PIPING_WORKS]     ,  \\'MEP PIPING WORKS\\'\\nUNION ALL SELECT   [MEP_PRESSURE_TEST_AND_CLEARANCE]     ,  \\'MEP PRESSURE TEST & CLEARANCE\\'\\nUNION ALL SELECT   [INNER_WALL_BLOCKWORK]     ,  \\'INNER WALL BLOCKWORK\\'\\nUNION ALL SELECT   [MEP_MARKING_FOR_BUILDERS_WORK]     ,  \\'MEP MARKING FOR BUILDERS WORK\\'\\nUNION ALL SELECT   [CUTTING_AND_CHASING_OF_BLOCKWORK]     ,  \\'CUTTING & CHASING OF BLOCKWORK\\'\\nUNION ALL SELECT   [MEP_SERVICES_INSTALLATION]     ,  \\'MEP SERVICES INSTALLATION\\'\\nUNION ALL SELECT   [WALL_MEP_SERVICES_PACKING]     ,  \\'WALL MEP SERVICES PACKING\\'\\nUNION ALL SELECT   [PLASTER]     ,  \\'PLASTER\\'\\nUNION ALL SELECT   [CORE_CUTTING_AND_CHIPPING]     ,  \\'CORE CUTTING & CHIPPING\\'\\nUNION ALL SELECT   [MEP_SLEEVE_INSTALLATION]     ,  \\'MEP SLEEVE INSTALLATION\\'\\nUNION ALL SELECT   [BORE_PACKING]     ,  \\'BORE PACKING\\'\\nUNION ALL SELECT   [UNDER_SCREED_WATER_PROOFING]     ,  \\'UNDER SCREED WATER PROOFING\\'\\nUNION ALL SELECT   [SCREED]     ,  \\'SCREED\\'\\nUNION ALL SELECT   [WALL_TILE]     ,  \\'WALL TILE\\'\\nUNION ALL SELECT   [MEP_FRAMING_CLEARANCE]     ,  \\'MEP FRAMING CLEARANCE\\'\\nUNION ALL SELECT   [FALSE_CEILING_FRAMING]     ,  \\'FALSE CEILING FRAMING\\'\\nUNION ALL SELECT   [MEP_BOARDING_CLEARANCE]     ,  \\'MEP BOARDING CLEARANCE\\'\\nUNION ALL SELECT   [FALSE_CEILING_BOARDING]     ,  \\'FALSE CEILING BOARDING\\'\\nUNION ALL SELECT   [CEILING_PRIMER]     ,  \\'CEILING PRIMER\\'\\nUNION ALL SELECT   [CEILING_STUCCO_1ST_AND_2ND_COAT]     ,  \\'CEILING STUCCO (1ST AND 2ND COAT)\\'\\nUNION ALL SELECT   [CEILING_FIRST_COAT_PAINT]     ,  \\'CEILING FIRST COAT PAINT\\'\\nUNION ALL SELECT   [UNDER_TILE_WATER_PROOFING]     ,  \\'UNDER TILE WATER PROOFING\\'\\nUNION ALL SELECT   [THRESHOLD]     ,  \\'THRESHOLD\\'\\nUNION ALL SELECT   [FLOOR_TILE]     ,  \\'FLOOR TILE\\'\\nUNION ALL SELECT   [SKIRTING]     ,  \\'SKIRTING\\'\\nUNION ALL SELECT   [GROUTING]     ,  \\'GROUTING\\'\\nUNION ALL SELECT   [SILICONE]     ,  \\'SILICONE\\'\\nUNION ALL SELECT   [HOPPER_DOOR]     ,  \\'HOPPER DOOR\\'\\nUNION ALL SELECT   [DOOR_FRAME_INSTALLATION]     ,  \\'DOOR-FRAME INSTALLATION\\'\\nUNION ALL SELECT   [DOOR_ARCHITRAVE_INSTALLATION]     ,  \\'DOOR-ARCHITRAVE INSTALLATION\\'\\nUNION ALL SELECT   [DOOR_SHUTTER_INSTALLATION]     ,  \\'DOOR-SHUTTER INSTALLATION\\'\\nUNION ALL SELECT   [DOOR_IRONMONGERY_INSTALLATION]     ,  \\'DOOR-IRONMONGERY INSTALLATION\\'\\nUNION ALL SELECT   [DOOR_SILICONE]     ,  \\'DOOR-SILICONE\\'\\nUNION ALL SELECT   [SIGNAGE]     ,  \\'SIGNAGE\\'\\nUNION ALL SELECT   [MEP_FINAL_FIXTURES]     ,  \\'MEP FINAL FIXTURES\\'\\nUNION ALL SELECT   [FINAL_COAT_PAINT]     ,  \\'FINAL COAT PAINT\\'\\n\\n                        )AS COLUMN_NAME(VALUE,TYPE_OF_WORK)\\n    INNER JOIN STG.O_PLN_GARBAGEROOM_MAP_STG  GM\\n    ON COLUMN_NAME.TYPE_OF_WORK = GM.ACTIVITY_SEQUENCE\\n    WHERE VALUE IS NOT NULL\\n     ) GAR\\nINNER JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          GAR.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          GAR.PROJECT_ID=P.PROJECT_IDENTIFIER\\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          GAR.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          GAR.DRANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_GARBAGEROOM_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level = LEVEL,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = VALUE,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Update_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_GARBAGEROOM_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_GARBAGEROOM_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_KEEPOUT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_KEEPOUT_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_KEEPOUT_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Upload_Date as date,",
						"          Project_ID as integer,",
						"          Sbu_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          PROJECT_IDENTIFIER as string,",
						"          Flat as string,",
						"          Level as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Activity_ID as integer,",
						"          Real_Value as string,",
						"          value as integer,",
						"          Category_Sort as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select\\n        Upload_Date,\\n        P.Sort_ID AS Project_ID,\\n        SM.SBU_Map_ID AS Sbu_ID,\\n        LM.LEVEL_MAP_ID AS Level_ID,\\n        KO.Tower,\\n        P.PROJECT_IDENTIFIER ,\\n        KO.Flat,\\n        KO.Level,\\n        KO.Type_of_work,\\n        KO.Category,\\n        KO.Activity_ID,\\n       Format(cast(NULLIF(KO.Value,\\'\\') AS DATE ),\\'dd-MM-yyy\\')AS Real_Value,\\n        CASE\\n            WHEN TRIM(KO.value) IN (\\'\\',\\'-\\',\\'0%\\',\\'00%\\') THEN 0\\n            WHEN KO.value IS NOT NULL AND TRIM(KO.value) NOT IN (\\'\\',\\'-\\',\\'0%\\',\\'00%\\') THEN 1\\n            ELSE 0\\n        END AS value,\\n        \\n        CASE \\n            WHEN TRIM(KO.Category) IN(\\'Paint\\') THEN  1\\n            WHEN TRIM(KO.Category) IN(\\'Facade\\') THEN  2\\n            WHEN TRIM(KO.Category) IN(\\'MEP\\') THEN  3\\n            WHEN TRIM(KO.Category) IN(\\'PMT\\') THEN  4\\n            WHEN TRIM(KO.Category) IN(\\'Consultant\\') THEN  5\\n            WHEN TRIM(KO.Category) IN(\\'Client\\') THEN  6\\n            ELSE 20\\n        END AS Category_Sort\\n    FROM (\\n    SELECT\\n        cast(OPKOR.upload_time AS DATE) AS Upload_Date,\\n        OPKOR.project_id,\\n        OPKOR.tower,\\n        OPKOR.sbu_id ,\\n        OPKOR.Level,\\n        OPKOR.Flat,\\n        Column_Name.*,\\n        OPKOM.ACTIVITY_ID,\\n        OPKOM.SBU_ID AS SBU_Filter,\\n        OPKOM.Category,\\n        DENSE_RANK() OVER(PARTITION BY OPKOR.project_id ORDER BY CAST(OPKOR.upload_time AS DATE) DESC) AS DRanker\\n    FROM STG.O_PLN_KEEPOUT_RAW_STG OPKOR\\n    CROSS Apply (\\n                        SELECT Final_Coat_Paint_Dry_Area , \\'Final Coat Paint - Dry Area\\'\\n                    UNION ALL SELECT Final_Coat_Paint_Wet_Area , \\'Final Coat Paint - Wet Area\\'\\n                    UNION ALL SELECT Facade_Stamp , \\'Facade Stamp\\'\\n                    UNION ALL SELECT Bathroom_Stamp_MEP_L8 , \\'Bathroom Stamp - MEP (L8)\\'\\n                    UNION ALL SELECT Bathroom_Stamp_Civil_L9 , \\'Bathroom Stamp - Civil (L9)\\'\\n                    UNION ALL SELECT Kitchen_Stamp_MEP_I8 , \\'Kitchen Stamp - MEP (I8)\\'\\n                    UNION ALL SELECT Kitchen_Stamp_Civil_I9 , \\'Kitchen Stamp - Civil (I9)\\'\\n                    UNION ALL SELECT Dry_Area_Stamp_Civil_F7 , \\'Dry Area Stamp - Civil (F7)\\'\\n                    UNION ALL SELECT Dry_Area_Stamp_MEP_F8 , \\'Dry Area Stamp - MEP (F8)\\'\\n                    UNION ALL SELECT MEP_NOC , \\'MEP NOC\\'\\n                    UNION ALL SELECT Civil_NOC , \\'Civil NOC\\'\\n                    UNION ALL SELECT MEP_Field_Report_1ST_Insp , \\'MEP Field Report 1ST Insp\\'\\n                    UNION ALL SELECT MEP_Field_Report_2nd_Insp , \\'MEP Field Report 2nd Insp\\'\\n                    UNION ALL SELECT Facade_Field_Report_1st_Insp , \\'Facade Field Report 1st Insp\\'\\n                    UNION ALL SELECT Facade_Field_Report_2nd_Insp , \\'Facade Field Report 2nd Insp\\'\\n                    UNION ALL SELECT Civil_Field_Report_1st_Insp , \\'Civil Field Report 1st Insp\\'\\n                    UNION ALL SELECT Civil_Field_Report_2nd_Insp , \\'Civil Field Report 2nd Insp\\'\\n                    UNION ALL SELECT SCL_Signoff , \\'SCL Signoff\\'\\n                    UNION ALL SELECT PNCA_Signoff , \\'PNCA Signoff\\'\\n                    UNION ALL SELECT Keep_Out_QT , \\'Keep Out (QT)\\'\\n                        ) AS Column_Name(value,Type_of_work)\\n    JOIN STG.O_PLN_KEEPOUT_MAP_STG OPKOM\\n    ON Column_Name.Type_of_work = OPKOM.ACTIVITY_SEQUENCE\\n        WHERE value IS NOT NULL) KO   \\nINNER JOIN    DWH.PLN_LEVEL_MAP_ALL_DIM LM \\n    ON        KO.LEVEL = LM.LEVEL \\nLEFT JOIN    [DWH].[PROJECTS_NEW_DIM] P\\n    ON        KO.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN    [DWH].[PLN_SBU_MAPPING_DIM] SM\\n    ON      KO.SBU_ID=SM.SBU_IDENTIFIER\\n     WHERE       KO.DRANKER = 1\\n   \\n\\n  ',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Upload_Date as date,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          Sbu_ID as integer,",
						"          Level_Id as integer,",
						"          Tower as string,",
						"          Flat as string,",
						"          Level as string,",
						"          Category as string,",
						"          Type_of_work as string,",
						"          Activity_ID as integer,",
						"          Real_Value as date,",
						"          Value as decimal(14,4),",
						"          CATEGORY_SORT as integer,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['Truncate table [DWH].[PLN_KEEPOUT_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Upload_Date,",
						"          Project_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          Sbu_ID,",
						"          Level_Id = Level_ID,",
						"          Tower,",
						"          Flat,",
						"          Level,",
						"          Category,",
						"          Type_of_work,",
						"          Activity_ID,",
						"          Real_Value,",
						"          Value = value,",
						"          CATEGORY_SORT = Category_Sort,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUT_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_KEEPOUT_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_KEEPOUT2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_KEEPOUT2_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_DOOR_DELIVERY_M_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Date as date,",
						"          project_id as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          Tower as string,",
						"          Level as string,",
						"          Flat_No as string,",
						"          SBU_ID as integer,",
						"          Apartment_Type as string,",
						"          ACTIVITY_ID as integer,",
						"          Engineer_Responsible as string,",
						"          Activity as string,",
						"          delay_pln as date,",
						"          Plan as date,",
						"          Count_Pln as integer,",
						"          Predecessor_Plan as date,",
						"          Predecessor_Plan_Work_Front as date,",
						"          Predecessor as string,",
						"          delay_act as date,",
						"          Actual as date,",
						"          Count_act as integer,",
						"          Predecessor_Actual as date,",
						"          Predecessor_Actual_Work_Front as date,",
						"          SLA_Planned as integer,",
						"          SLA_Actual as integer,",
						"          SLA as string,",
						"          Actual_SLA_Title as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    Upload_Date AS Date,\\n    P.Sort_ID as project_id,\\n    P.PROJECT_IDENTIFIER ,\\n    tower AS Tower,\\n    Level,\\n    Flat_No,\\n    SM.[SBU_Map_ID] as SBU_ID,\\n    Apartment_Type,\\n    ACTIVITY_ID,\\n    ENGINEER_RESPONSIBLE AS Engineer_Responsible,\\n    Types_of_Activities AS Activity,\\n    delay_pln\\n       ,value_plan AS [Plan]\\n       ,Count_Pln,\\n    Predes_value_plan AS Predecessor_Plan,\\n    CASE \\n        WHEN TRIM(Predecessor_Activities) IN (\\'FROM CTE 1\\',\\'FROM CTE 2\\') AND Count_Pln = 1 THEN value_plan \\n        WHEN TRIM(Predecessor_Activities) IN (\\'FROM CTE 1\\',\\'FROM CTE 2\\') AND Count_Pln != 1 THEN NULL\\n        ELSE Predes_value_plan\\n    END AS Predecessor_Plan_Work_Front,\\n    Predecessor_Activities AS Predecessor,\\n    delay_act,\\n    value_act AS Actual,\\n    Count_act,\\n    Predes_value_act AS [Predecessor_Actual],\\n    CASE\\n        WHEN TRIM(Predecessor_Activities) IN (\\'FROM CTE 1\\',\\'FROM CTE 2\\') AND Count_Act = 1 THEN value_act\\n        WHEN TRIM(Predecessor_Activities) IN (\\'FROM CTE 1\\',\\'FROM CTE 2\\') AND Count_Act != 1 THEN NULL\\n        ELSE Predes_value_act\\n    END AS [Predecessor_Actual_Work_Front],\\n    CASE WHEN Planned_SLA <= 0 THEN 0 ELSE Planned_SLA END AS SLA_Planned,\\n    CASE WHEN Actual_SLA <= 0 THEN 0 ELSE Actual_SLA END AS SLA_Actual,\\n    Given_SLA AS SLA,\\n     CASE \\n            WHEN Actual_SLA <= 0 THEN     \\'<= 0\\'\\n            WHEN Actual_SLA = 1 THEN     \\'= 1\\'\\n            WHEN Actual_SLA = 2 THEN     \\'= 2\\'\\n            WHEN Actual_SLA = 3 THEN     \\'= 3\\'\\n            WHEN Actual_SLA = 4 THEN     \\'= 4\\'\\n            WHEN Actual_SLA = 5 THEN     \\'= 5\\'\\n            WHEN Actual_SLA = 6 THEN     \\'= 6\\'\\n            WHEN Actual_SLA = 7 THEN     \\'= 7\\'\\n            WHEN Actual_SLA > 7 THEN     \\'> 7\\'\\n            ELSE NULL\\n        END AS Actual_SLA_Title\\nFROM [DWH].[PLN_VALIDATION_DATA_OUTPUT_FINAL_B_VIEW] PP\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          PP.Project_id=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          PP.SBU_ID=SM.SBU_IDENTIFIER\\n\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Date as date,",
						"          project_id as integer,",
						"          Project_Identifier as string,",
						"          Tower as string,",
						"          Level as string,",
						"          Flat_No as string,",
						"          SBU_ID as integer,",
						"          Apartment_Type as string,",
						"          ACTIVITY_ID as integer,",
						"          Engineer_Responsible as string,",
						"          Activity as string,",
						"          delay_pln as date,",
						"          Plan as date,",
						"          Count_Pln as integer,",
						"          Predecessor_Plan as date,",
						"          Predecessor_Plan_Work_Front as date,",
						"          Predecessor as string,",
						"          delay_act as date,",
						"          Actual as date,",
						"          Count_Act as integer,",
						"          Predecessor_Actual as date,",
						"          Predecessor_Actual_Work_Front as date,",
						"          SLA_Planned as integer,",
						"          SLA_Actual as integer,",
						"          SLA as string,",
						"          Actual_SLA_Title as string,",
						"          LoadDateTime as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE  DWH.PLN_KEEPOUT_2_FACT '],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Date,",
						"          project_id,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          Tower,",
						"          Level,",
						"          Flat_No,",
						"          SBU_ID,",
						"          Apartment_Type,",
						"          ACTIVITY_ID,",
						"          Engineer_Responsible,",
						"          Activity,",
						"          delay_pln,",
						"          Plan,",
						"          Count_Pln,",
						"          Predecessor_Plan,",
						"          Predecessor_Plan_Work_Front,",
						"          Predecessor,",
						"          delay_act,",
						"          Actual,",
						"          Count_Act = Count_act,",
						"          Predecessor_Actual,",
						"          Predecessor_Actual_Work_Front,",
						"          SLA_Planned,",
						"          SLA_Actual,",
						"          SLA,",
						"          Actual_SLA_Title,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_KEEPOUT2_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_KITCHENAREA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_KITCHENAREA_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_KITCHENAREA_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          TOWER as string,",
						"          PROJECT_IDENTIFIER as string,",
						"          Sclicer as string,",
						"          FLAT as string,",
						"          LEVEL as string,",
						"          ACTIVITY_ID as integer,",
						"          VALUE as string,",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          UPLOAD_DATE as timestamp",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n     SM.SBU_MAP_ID AS SBU_ID,\\n    KA.TOWER,\\n    P.PROJECT_IDENTIFIER ,\\n    \\'Kitchen Area\\' as Sclicer,\\n    KA.FLAT,\\n    KA.[LEVEL],\\n     KA.ACTIVITY_ID,\\n    CASE \\n        WHEN KA.VALUE IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE KA.VALUE\\n    END AS VALUE,\\n    KA.TYPE_OF_WORK,\\n    KA.CATEGORY,\\n     KA.UPLOAD_DATE\\nFROM (\\n          SELECT \\n               KR.UPLOAD_TIME AS UPLOAD_DATE,\\n               KR.PROJECT_ID,\\n               KR.TOWER,\\n               KR.[LEVEL],\\n               KR.FLAT,\\n               COLUMN_NAME.*,\\n               KM.ACTIVITY_ID,\\n               KM.SBU_ID,\\n               KM.CATEGORY,\\n               DENSE_RANK () OVER (PARTITION BY  PROJECT_ID,KM.SBU_ID ORDER BY   Convert(Date,UPLOAD_TIME) DESC ) DRANK\\n           FROM [STG].[O_PLN_KITCHENAREA_RAW_STG] KR\\n           CROSS APPLY (\\n                          SELECT [KITCHEN_AREA_PLASTER] , \\'KITCHEN AREA PLASTER\\'\\n                              UNION ALL SELECT [KITCHEN_UTILITY_FRAMING_CLEARANCE],\\'KITCHEN / UTILITY FRAMING CLEARANCE\\'\\n                              UNION ALL SELECT [KITCHEN_UTILITY_FRAMING] , \\'KITCHEN / UTILITY FRAMING\\'\\n                              UNION ALL SELECT [KITCHEN_UTILITY_BOARDING_CLEARANCE],\\'KITCHEN / UTILITY BOARDING CLEARANCE\\'\\n                              UNION ALL SELECT [KITCHEN_UTILITY_BOARDING] , \\'KITCHEN / UTILITY BOARDING\\'\\n                              UNION ALL SELECT [KITCHEN_WALL_TILE] , \\'KITCHEN WALL TILE\\'\\n                              UNION ALL SELECT [MEP_BOX_FIXING] , \\'MEP BOX FIXING\\'\\n                              UNION ALL SELECT [KITCHEN_CABINET] , \\'KITCHEN CABINET\\'\\n                              UNION ALL SELECT [KITCHEN_COUNTER_PLYWOOD] , \\'KITCHEN COUNTER PLYWOOD\\'\\n                              UNION ALL SELECT [KITCHEN_COUNTER_TOP] , \\'KITCHEN COUNTER TOP\\'\\n                              UNION ALL SELECT [KITCHEN_COUNTER_TOP_SKIRTING] , \\'KITCHEN COUNTER TOP SKIRTING\\'\\n                              UNION ALL SELECT [KITCHEN_CABINET_GROUTING] , \\'KITCHEN CABINET GROUTING\\'\\n                              UNION ALL SELECT [KITCHEN_CABINET_SILICONE] , \\'KITCHEN CABINET SILICONE\\'\\n                              UNION ALL SELECT [MEP_FIXTURES_FOR_KITCHEN_CABINET] , \\'MEP FIXTURES FOR KITCHEN CABINET\\'\\n                              UNION ALL SELECT [KITCHEN_APPLIANCES] , \\'KITCHEN APPLIANCES\\'\\n                         ) AS COLUMN_NAME(VALUE,TYPE_OF_WORK)\\n               INNER JOIN  [STG].[O_PLN_KITCHENAREA_MAP_STG] KM\\n                    ON          COLUMN_NAME.TYPE_OF_WORK = KM.ACTIVITY_SEQUENCE\\n               WHERE          VALUE IS NOT NULL\\n     ) KA\\nINNER JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          KA.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          KA.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          KA.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          KA.DRANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Flat as integer,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_KITCHENAREA_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level = LEVEL,",
						"          Flat = FLAT,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = VALUE,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Update_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_KITCHENAREA_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_KITCHENAREA_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_LEVEL_MAP_ALL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_LEVEL_MAP_ALL_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_LEVEL_MAP_ALL_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          LEVEL_MAP_ID as integer,",
						"          LEVEL as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Level_Map_ID as integer,",
						"          Level as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_LEVEL_MAP_ALL_DIM];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Level_Map_ID = LEVEL_MAP_ID,",
						"          Level = LEVEL,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_LEVEL_MAP_ALL_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_LEVEL_MAP_ALL_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_MILESTONE_ACTUALS_TEMP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_MILESTONE_ACTUALS_TEMP_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_PLN_MILESTONE_ACTUALS_TEMP_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Project_ID as integer,",
						"          SBU_Map_ID as integer,",
						"          Milestone_Actuals_Temp_Id as integer,",
						"          Upload_time as timestamp,",
						"          Tower as string,",
						"          Group as string,",
						"          Activity as string,",
						"          Actual_Percentage as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select \\n     \\n     p. Sort_ID as [Project_ID] ,\\n     sm.[SBU_Map_ID] ,\\n     [Milestone_Actuals_Temp_Id] ,\\n     [Upload_time] ,\\n     --[Project_ID] [nvarchar](1000)  NULL,\\n     [Tower] ,\\n     --[Sbu_ID] [nvarchar](1000)  NULL,\\n     [Group] ,\\n     [Activity] ,\\n     [Actual_Percentage] \\n\\nFROM [STG].[O_PLN_MILESTONE_ACTUALS_TEMP_STG] PP\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          PP.[Project_ID]=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          PP.SBU_id=SM.SBU_IDENTIFIER\\n\\n\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          SBU_ID as integer,",
						"          Milestone_Actuals_Temp_Id as integer,",
						"          Upload_time as timestamp,",
						"          Tower as string,",
						"          Group as string,",
						"          Activity as string,",
						"          Actual_Percentage as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_MILESTONE_ACTUALS_TEMP_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID,",
						"          SBU_ID = SBU_Map_ID,",
						"          Milestone_Actuals_Temp_Id,",
						"          Upload_time,",
						"          Tower,",
						"          Group,",
						"          Activity,",
						"          Actual_Percentage,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_MILESTONE_ACTUALS_TEMP_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_MILESTONE_ACTUALS_TEMP_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_PROCUREMENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PLN_PROCUREMENT_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_PROCUREMENT_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAXID as integer (0)",
						"}",
						"source(output(",
						"          UPLOAD_DATE as date,",
						"          PROJECT_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          TOWER as string,",
						"          SBU_ID as integer,",
						"          SBU as string,",
						"          CLASSIFICATION as string,",
						"          DESCRIPTION as string,",
						"          CATEGORY as string,",
						"          ISSUANCE_OF_DRAWINGS_PLAN as date,",
						"          ISSUANCE_OF_DRAWINGS_ACTUAL as date,",
						"          PR_PLAN as date,",
						"          PR_ACTUAL as date,",
						"          VENDOR_FINALIZATION_PLAN as date,",
						"          VENDOR_FINALIZATION_ACTUAL as date,",
						"          REQUIRED_AT_SITE_BY as date,",
						"          ACTUAL_DELIVERY_AT_SITE as date",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n     UPLOAD_DATE,\\n    P.Sort_ID as PROJECT_ID,\\n    P.PROJECT_IDENTIFIER,\\n     --PR.PROJECT_ID AS PROJECT_NAME,\\n    TOWER,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    SBU,\\n    CLASSIFICATION,\\n    DESCRIPTION,\\n    CATEGORY,\\n    CASE     WHEN ISDATE(ISSUANCE_OF_DRAWINGS_PLAN)=0\\n               THEN CAST(ISSUANCE_OF_DRAWINGS_ACTUAL AS DATE)\\n               ELSE CAST(ISSUANCE_OF_DRAWINGS_PLAN AS DATE) \\n     END          AS ISSUANCE_OF_DRAWINGS_PLAN\\n    ,CAST(ISSUANCE_OF_DRAWINGS_ACTUAL AS DATE) AS ISSUANCE_OF_DRAWINGS_ACTUAL\\n    ,CASE     WHEN ISDATE(PR_PLAN)=0\\n               THEN CAST(PR_ACTUAL AS DATE)\\n               ELSE CAST(PR_PLAN AS DATE) \\n     END AS PR_PLAN\\n    ,CAST(PR_ACTUAL  AS DATE) AS PR_ACTUAL\\n    ,CASE     WHEN ISDATE(VENDOR_FINALIZATION_PLAN) =0\\n               THEN CAST(VENDOR_FINALIZATION_ACTUAL AS DATE)\\n               ELSE CAST(VENDOR_FINALIZATION_PLAN AS DATE) \\n      END AS VENDOR_FINALIZATION_PLAN\\n    ,CAST(VENDOR_FINALIZATION_ACTUAL  AS DATE) AS VENDOR_FINALIZATION_ACTUAL\\n    ,CASE     WHEN ISDATE(REQUIRED_AT_SITE_BY) =0\\n               THEN CAST(ACTUAL_DELIVERY_AT_SITE AS DATE)\\n               ELSE CAST(REQUIRED_AT_SITE_BY AS DATE) \\n     END AS REQUIRED_AT_SITE_BY\\n    ,CAST(ACTUAL_DELIVERY_AT_SITE AS DATE) AS ACTUAL_DELIVERY_AT_SITE\\nFROM(\\n     SELECT\\n               CAST(UPLOAD_TIME AS DATE) AS UPLOAD_DATE,\\n               PROJECT_ID,\\n               TOWER,\\n               SBU_ID,\\n               SBU,\\n               CLASSIFICATION,\\n               DESCRIPTION,\\n               CATEGORY,\\n               CASE \\n                   WHEN          ISDATE(ISSUANCE_OF_DRAWINGS_PLAN)= 1 \\n                                   Then          FORMAT(CAST(ISSUANCE_OF_DRAWINGS_PLAN AS DATE),\\'dd-MMM-yy\\') \\n                                           when ISSUANCE_OF_DRAWINGS_PLAN= \\'NA\\'\\n                                           then  \\'01-Jan-99\\'\\n                                   ELSE     UPLOAD_TIME \\n                    END     AS ISSUANCE_OF_DRAWINGS_PLAN,\\n               CASE \\n                   WHEN          ISDATE(ISSUANCE_OF_DRAWINGS_ACTUAL)= 1  \\n                            THEN FORMAT(CAST(ISSUANCE_OF_DRAWINGS_ACTUAL AS DATE),\\'dd-MMM-yy\\') \\n                                    when ISSUANCE_OF_DRAWINGS_ACTUAL= \\'NA\\'\\n                                           then  \\'01-Jan-99\\'\\n                            ELSE UPLOAD_TIME \\n                         END     AS ISSUANCE_OF_DRAWINGS_ACTUAL,\\n               CASE \\n                   WHEN ISDATE(PR_PLAN)= 1  \\n                              THEN FORMAT(CAST(PR_PLAN AS DATE),\\'dd-MMM-yy\\') \\n                                     when PR_PLAN= \\'NA\\'\\n                                           then  \\'01-Jan-99\\'\\n                              ELSE UPLOAD_TIME \\n                    END AS PR_PLAN,\\n               CASE \\n                   WHEN ISDATE(PR_ACTUAL)= 1   \\n                              THEN FORMAT(CAST(PR_ACTUAL AS DATE),\\'dd-MMM-yy\\') \\n                                     when PR_ACTUAL= \\'NA\\'\\n                                           then  \\'01-Jan-99\\'\\n                              ELSE UPLOAD_TIME \\n                    END AS PR_ACTUAL,\\n               CASE \\n                   WHEN ISDATE(VENDOR_FINALIZATION_PLAN)= 1    \\n                              THEN FORMAT(CAST(VENDOR_FINALIZATION_PLAN AS DATE),\\'dd-MMM-yy\\') \\n                                     when VENDOR_FINALIZATION_PLAN = \\'NA\\'\\n                                           then  \\'01-Jan-99\\'\\n                              ELSE UPLOAD_TIME \\n                    END AS VENDOR_FINALIZATION_PLAN,\\n               CASE \\n                   WHEN  ISDATE(VENDOR_FINALIZATION_ACTUAL)= 1 \\n                              THEN FORMAT(CAST(VENDOR_FINALIZATION_ACTUAL AS DATE),\\'dd-MMM-yy\\') \\n                                     when VENDOR_FINALIZATION_ACTUAL= \\'NA\\'\\n                                           then  \\'01-Jan-99\\'\\n                              ELSE UPLOAD_TIME \\n                    END AS VENDOR_FINALIZATION_ACTUAL,\\n               CASE \\n                   WHEN ISDATE(REQUIRED_AT_SITE_BY)= 1  \\n                              THEN FORMAT(CAST(REQUIRED_AT_SITE_BY AS DATE),\\'dd-MMM-yy\\') \\n                                     when REQUIRED_AT_SITE_BY= \\'NA\\'\\n                                           then  \\'01-Jan-99\\'\\n                              ELSE UPLOAD_TIME \\n                    END AS REQUIRED_AT_SITE_BY,\\n               CASE \\n                   WHEN ISDATE(ACTUAL_DELIVERY_AT_SITE)= 1 \\n                              THEN FORMAT(CAST(ACTUAL_DELIVERY_AT_SITE AS DATE),\\'dd-MMM-yy\\') \\n                                     when ACTUAL_DELIVERY_AT_SITE= \\'NA\\'\\n                                           then  \\'01-Jan-99\\'\\n                              ELSE UPLOAD_TIME \\n                    END AS ACTUAL_DELIVERY_AT_SITE,\\n               DENSE_RANK() OVER ( PARTITION BY PROJECT_ID ORDER BY CAST(UPLOAD_TIME AS DATE) DESC) DRANK\\n FROM     [STG].[O_PLN_PROCUREMENT_STG])PR\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON         PR.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM]\\nSM\\n     ON          PR.SBU=SM.SBU_Shorts\\n      where DRANK=1 ',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAXID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as string,",
						"          Project_Identifier as string,",
						"          Tower as string,",
						"          SBU_ID as string,",
						"          SBU as string,",
						"          Classification as string,",
						"          Description as string,",
						"          Category as string,",
						"          Issuance_of_Drawings_Plan as date,",
						"          Issuance_of_Drawings_Actual as date,",
						"          PR_Plan as date,",
						"          PR_Actual as date,",
						"          Vendor_Finalization_Plan as date,",
						"          Vendor_Finalization_Actual as date,",
						"          Required_at_site_by as date,",
						"          Actual_delivery_at_site as date,",
						"          Upload_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_PROCUREMENT_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          Tower = TOWER,",
						"          SBU_ID,",
						"          SBU,",
						"          Classification = CLASSIFICATION,",
						"          Description = DESCRIPTION,",
						"          Category = CATEGORY,",
						"          Issuance_of_Drawings_Plan = ISSUANCE_OF_DRAWINGS_PLAN,",
						"          Issuance_of_Drawings_Actual = ISSUANCE_OF_DRAWINGS_ACTUAL,",
						"          PR_Plan = PR_PLAN,",
						"          PR_Actual = PR_ACTUAL,",
						"          Vendor_Finalization_Plan = VENDOR_FINALIZATION_PLAN,",
						"          Vendor_Finalization_Actual = VENDOR_FINALIZATION_ACTUAL,",
						"          Required_at_site_by = REQUIRED_AT_SITE_BY,",
						"          Actual_delivery_at_site = ACTUAL_DELIVERY_AT_SITE,",
						"          Upload_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROCUREMENT_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROCUREMENT_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_PROJECTION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_F_PLN_PROJECTION_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_F_PLN_PROJECTION_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_PROJECTION_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_PLN_PROJECTION_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Upload_Date as timestamp,",
						"          PROJECT_IDENTIFIER as string,",
						"          Project_ID as integer,",
						"          SBU_Map_ID as integer,",
						"          Area as string,",
						"          Category as string,",
						"          Activity_Description as string,",
						"          Projection_for_the_month as decimal(15,2),",
						"          Yesterday as timestamp,",
						"          Plan_Yesterday as decimal(15,2),",
						"          Plan_as_on_date as decimal(15,2),",
						"          Actual_Yesterday as decimal(15,2),",
						"          Actual_as_on_date as decimal(15,2),",
						"          Shortfall_Reasons as string,",
						"          SBU_Custom_Sort as integer,",
						"          Achived as decimal(15,2),",
						"          Achived_90 as decimal(15,2)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select \\n     [Upload_Date]  ,\\n   P.PROJECT_IDENTIFIER  ,\\n     --, [SBU] \\n     Sort_ID as [Project_ID] ,\\n     SM.[SBU_Map_ID] \\n     , [Area] \\n     , [Category] \\n     , [Activity_Description] \\n     , [Projection_for_the_month]  \\n     , [Yesterday]  \\n     , [Plan_Yesterday]  \\n     , [Plan_as_on_date] \\n     , [Actual_Yesterday] \\n     , [Actual_as_on_date] \\n     , [Shortfall_Reasons]  \\n     , [SBU_Custom_Sort] \\n     , [Achived] \\n     , [Achived_90] \\n FROM [STG].[F_PLN_PROJECTION_STG] PP\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          PP.Project_Sclicer=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          PP.SBU=SM.SBU_IDENTIFIER',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Area as string,",
						"          Category as string,",
						"          Activity_Description as string,",
						"          Projection_for_the_month as decimal(15,2),",
						"          Yesterday as timestamp,",
						"          Plan_Yesterday as decimal(15,2),",
						"          Plan_as_on_date as decimal(15,2),",
						"          Actual_Yesterday as decimal(15,2),",
						"          Actual_as_on_date as decimal(15,2),",
						"          Shortfall_Reasons as string,",
						"          SBU_Custom_Sort as integer,",
						"          Achived as decimal(15,2),",
						"          Achived_90 as decimal(15,2),",
						"          Update_Date as timestamp,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_PROJECTION_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID = SBU_Map_ID,",
						"          Area,",
						"          Category,",
						"          Activity_Description,",
						"          Projection_for_the_month,",
						"          Yesterday,",
						"          Plan_Yesterday,",
						"          Plan_as_on_date,",
						"          Actual_Yesterday,",
						"          Actual_as_on_date,",
						"          Shortfall_Reasons,",
						"          SBU_Custom_Sort,",
						"          Achived,",
						"          Achived_90,",
						"          Update_Date = Upload_Date,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_F_PLN_PROJECTION_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROJECTION_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_PROJECTS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PLN_PROJECTS_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_PROJECTS_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          Project_Short as string,",
						"          Flat_Count as integer,",
						"          Total_Floors as integer,",
						"          Total_Podiums as integer,",
						"          Total_Typical_Floor as integer,",
						"          Typical_Floor_Slab as integer,",
						"          Podium_Slab as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          Project_Short as string,",
						"          Flat_Count as integer,",
						"          Total_Floors as integer,",
						"          Total_Podiums as integer,",
						"          Total_Typical_Floor as integer,",
						"          Typical_Floor_Slab as integer,",
						"          Podium_Slab as integer,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_PROJECTS_DIM];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID,",
						"          Project_Identifier,",
						"          Project_Short,",
						"          Flat_Count,",
						"          Total_Floors,",
						"          Total_Podiums,",
						"          Total_Typical_Floor,",
						"          Typical_Floor_Slab,",
						"          Podium_Slab,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROJECTS_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROJECTS_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_PROJECT_PROGRESS_SUMMARY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PLN_DRYAREA_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_PROJECT_PROGRESS_SUMMARY_FACT",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_DOOR_DELIVERY_M_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Upload_Date as date,",
						"          Project as string,",
						"          Tower as string,",
						"          ACTIVITY_ID as integer,",
						"          SBU_ID as string,",
						"          Area as string,",
						"          Progress_Type as string,",
						"          CATEGORY as string,",
						"          ACTIVITY_SEQUENCE as string,",
						"          Flats as integer,",
						"          Total_Floors as integer,",
						"          Scheduled_Activities as integer,",
						"          Yet_TO_Start as decimal(38,6),",
						"          Completed as decimal(38,4),",
						"          In_Progress as integer,",
						"          Average_Achived as decimal(38,4),",
						"          SUM_Achived as decimal(38,4),",
						"          Count_Achived as decimal(38,4),",
						"          SORT_MAIN as integer,",
						"          Yet_To_Start_Manual as decimal(38,4)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: ' SELECT \\n\\n      ff. Upload_Date,\\n        Unionall.Project,\\n        ff.Tower,\\n        ff.ACTIVITY_ID,\\n        unionall.SBU_ID,\\n        unionall.Area,\\n        \\'Flatwise Progress\\' AS Progress_Type,\\n        unionall.CATEGORY,\\n        unionall.ACTIVITY_SEQUENCE,\\n        unionall.Flats,\\n       unionall.Total_Floors,\\n        unionall.Scheduled_Activities,\\n           sum(case \\n               when ff.value=0 then 1 else null\\n          End) as Yet_TO_Start,\\n\\n           sum(CASE WHEN ff.value = 1 THEN 1 ELSE NULL\\n           END )AS Completed,\\n\\n           sum(CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL \\n           END) AS In_Progress,\\n\\n            AVG(ff.value) AS Average_Achived,\\n         SUM(ff.value) AS SUM_Achived,\\n         COUNT(ff.value) AS Count_Achived,\\n           2 as SORT_MAIN, \\n       ABS((ISNULL( unionall.Scheduled_Activities,0)-(ISNULL(sum(CASE WHEN ff.value = 1 THEN 1 ELSE NULL\\n           END ),0)+ISNULL(sum(CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL \\n           END) ,0)))) AS Yet_To_Start_Manual\\n           \\n           FROM(SELECT \\n            Flat_count.Project_Identifier AS Project,\\n            a.ACTIVITY_ID,\\n            a.SBU_ID,\\n            a.Area,\\n            a.CATEGORY,\\n            a.ACTIVITY_SEQUENCE,\\n            Flat_count.Flats,\\n            Flat_count.Total_Floors,\\n            Flat_count.Scheduled_Activities\\n        FROM (\\n          SELECT *, \\'Dry Area\\' AS Area FROM STG.O_PLN_DRYAREA_MAP_STG\\n        UNION ALL\\n        SELECT *, \\'Wet Area\\' AS Area FROM STG.O_PLN_WETAREA_MAP_STG\\n        UNION ALL\\n        SELECT *, \\'Kitchen Area\\' AS Area FROM STG.O_PLN_KITCHENAREA_MAP_STG\\n        UNION ALL\\n        SELECT *, \\'Balcony Area\\' AS Area FROM STG.O_PLN_BALCONYAREA_MAP_STG) a\\n          CROSS Apply (SELECT \\n                                           Project_Identifier,\\n                                           FLAT_COUNT AS Scheduled_Activities,\\n                                           FLAT_COUNT AS Flats,\\n                                           Total_Floors AS Total_Floors\\n                                       FROM [STG].[PROJECTS_NEW_STG]\\n                                                WHERE Project_Identifier !=\\'Creek Vista Grande\\') AS Flat_count) Unionall\\n\\n                                                Join DWH.PLN_FLATFINISHES_FACT ff \\n                                                on unionall.Activity_Id=ff.Activity_ID\\n                                      group by   ff. Upload_Date,\\n       Unionall.Project,\\n        ff.Tower,\\n        ff.ACTIVITY_ID,\\n        unionall.SBU_ID,\\n        unionall.Area,\\n        unionall.CATEGORY,\\n        unionall.ACTIVITY_SEQUENCE,\\n        unionall.Flats,\\n       unionall.Total_Floors,\\n        unionall.Scheduled_Activities\\n          \\n          --ff.Yet_To_Start_Manual,\\n\\n     UNION aLL\\n\\n     SELECT \\n        ff. Update_Date,\\n      Unionall.Project,\\n        ff.Tower,\\n        ff.ACTIVITY_ID,\\n        unionall.SBU_ID,\\n        unionall.Area,\\n       \\'Service Room Progress\\' AS Progress_Type,\\n        unionall.CATEGORY,\\n        unionall.ACTIVITY_SEQUENCE,\\n        unionall.Flats,\\n       unionall.Total_Floors,\\n        unionall.Scheduled_Activities,\\n           sum(case \\n               when ff.value=0 then 1 else null\\n          End) as Yet_TO_Start,\\n\\n           sum(CASE WHEN ff.value = 1 THEN 1 ELSE NULL\\n           END )AS Completed,\\n\\n           sum(CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL \\n           END) AS In_Progress,\\n\\n            AVG(ff.value) AS Average_Achived,\\n         SUM(ff.value) AS SUM_Achived,\\n         COUNT(ff.value) AS Count_Achived,\\n           4 as SORT_MAIN ,\\n         ABS((ISNULL( unionall.Scheduled_Activities,0)-(ISNULL(sum(CASE WHEN ff.value = 1 THEN 1 ELSE NULL\\n           END ),0)+ISNULL(sum(CASE WHEN value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL \\n           END) ,0)))) AS Yet_To_Start_Manual\\n           FROM (\\n     SELECT \\n            Flat_count.Project_Identifier AS Project,\\n               a.ACTIVITY_ID,\\n            a.SBU_ID,\\n            a.Area,\\n            a.CATEGORY,\\n            a.ACTIVITY_SEQUENCE,\\n            Flat_count.*\\n           FROM \\n             (SELECT *, \\'Water Room\\' AS Area FROM [STG].[O_PLN_WATERROOM_MAP_STG]\\n    UNION ALL\\n    SELECT *, \\'Electrical Room\\' AS Area FROM [STG].[O_PLN_ELECTRICALROOM_MAP_STG]\\n    UNION ALL\\n    SELECT *, \\'Telephone Room\\' AS Area FROM [STG].[O_PLN_TELEPHONEROOM_MAP_STG]\\n    UNION ALL\\n    SELECT *, \\'Fire-Lift Lobby\\' AS Area FROM [STG].[O_PLN_FIRELIFTLOBBY_MAP_STG]\\n    UNION ALL\\n    SELECT *, \\'Garbage Room\\' AS Area FROM [STG].[O_PLN_GARBAGEROOM_MAP_STG])a\\nCROSS JOIN (SELECT \\n                                           Project_Identifier,\\n                                           Total_Floors AS Scheduled_Activities, \\n                                           FLAT_COUNT AS Flats,\\n                                           Total_Floors AS Total_Floors\\n                                       FROM [STG].[PROJECTS_NEW_STG]) AS Flat_count) Unionall\\n\\n                                                 Join [DWH].[PLN_SERVICEROOMS_FACT] ff \\n                                                on unionall.Activity_Id=ff.Activity_ID \\n                                                 group by   ff. Update_Date,\\n        Unionall.Project,\\n        ff.Tower,\\n        ff.ACTIVITY_ID,\\n        unionall.SBU_ID,\\n        unionall.Area,\\n        unionall.CATEGORY,\\n        unionall.ACTIVITY_SEQUENCE,\\n        unionall.Flats,\\n       unionall.Total_Floors,\\n        unionall.Scheduled_Activities\\n          --Yet_To_Start_Manual\\n     UNION ALL\\n\\n     \\nSELECT \\n        sf.Upload_Date,\\n        a.Project,\\n       \\'Overall\\' AS Tower,\\n        a.ACTIVITY_ID,\\n       \\'SBU 3\\' AS SBU_ID,\\n       \\'Slab\\' AS Area,\\n       \\'Structure Progress\\' AS Progress_Type,\\n        a.CATEGORY,\\n          ACTIVITY_SEQUENCE,\\n        COUNT(sf.Level) AS Completed,\\n        NULL AS In_Progress,\\n        NULL AS Yet_To_Start,\\n        a.Flats,\\n        a.Total_Floors,\\n        a.Scheduled_Activities,\\n          NULL AS Average_Achived,\\n        COUNT(Level) AS SUM_Achived,\\n         COUNT(Level) AS Count_Achived,\\n           1  as SORT_MAIN ,\\n       ABS((ISNULL(A.Scheduled_Activities,0)-(ISNULL( COUNT(sf.Level),0)+ISNULL( NULL,0)))) AS Yet_To_Start_Manual\\n    FROM (\\n     SELECT \\n    OPD.project_id AS Project,\\n    OPD.Sequence_of_Appearance AS ACTIVITY_ID,\\n      OPD.Sequence_of_Appearance,\\n    OPD.area AS CATEGORY,\\n    OPD.Pour_count AS ACTIVITY_SEQUENCE,\\n    Flat_count.Flats,\\n    Flat_count.Total_Floors,\\n    Flat_count.Scheduled_Activities\\n      FROM [STG].[O_PLN_STRUCTURES_POUR_MAP_STG] OPD \\nCROSS JOIN (SELECT \\n                                   0 AS Scheduled_Activities,\\n                                   NULL AS Flats,\\n                                   Total_Floors AS Total_Floors\\n                               FROM [STG].[PROJECTS_NEW_STG] WHERE Project_Identifier !=\\'Creek Vista Grande\\') AS Flat_count)a\\n\\n                                      join [DWH].[PLN_STRUCTURE_FACT] sf on\\n                                      a. Sequence_of_Appearance = sf.Sequence_of_Appearance\\n                                     WHERE sf.Pour LIKE (\\'slab%\\') \\n                                     GROUP BY sf.Upload_Date,\\n                                                \\n         a.Project,\\n        a.ACTIVITY_ID,\\n        a.CATEGORY,\\n          ACTIVITY_SEQUENCE,\\n        a.Flats,\\n        a.Total_Floors,\\n        a.Scheduled_Activities\\n-- select \\n-- COUNT(Level) AS Completed,\\n--Upload_Date,\\n--\\'SBU 3\\' AS SBU_ID,\\n-- NULL AS In_Progress,\\n-- COUNT(Level) AS SUM_Achived\\n\\n-- FROM [DWH].[PLN_STRUCTURE_FACT]  group by Upload_Date,SBU_ID\\nUNION ALL\\n SELECT \\n        PTF.Update_Date,\\n        a.Project,\\n        PTF.tower,\\n        a.ACTIVITY_ID,\\n        a.SBU_ID,\\n       \\'Corridor\\' AS Area,\\n       \\'Corridor Progress\\' AS Progress_Type,\\n        a.CATEGORY,\\n        a.ACTIVITY_SEQUENCE,\\n        a.Flats,\\n        a.Total_Floors,\\n        a.Scheduled_Activities,\\n       AVG(Try_CAST(PTF.value as decimal(15,4))) AS Average_Achived,\\n       SUM(Try_Cast(PTF.value as DECIMAL(15,4))) AS SUM_Achived,\\n       COUNT(Try_Cast(PTF.value As DECIMAL(15,4))) AS Count_Achived,\\n       SUM(TRY_CAST(CASE WHEN PTF.value = 1 THEN 1 ELSE NULL END as Decimal(15,4))) AS Completed,\\n        Sum(Try_CAST(CASE WHEN PTF.value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END as Decimal(15,4))) AS In_Progress,\\n       sum(TRY_CAST(CASE WHEN PTF.value = 0 THEN 1 ELSE NULL END as Decimal(15,4))) AS Yet_To_Start,\\n        5 as SORT_MAIN ,\\n      ABS((ISNULL(a.Scheduled_Activities,0)-(ISNULL( SUM(TRY_CAST(CASE WHEN PTF.value = 1 THEN 1 ELSE NULL END as Decimal(15,4))),0)+\\n       ISNULL(Sum(Try_CAST(CASE WHEN PTF.value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END as Decimal(15,4))),0)))) AS Yet_To_Start_Manual\\n          from\\n   (\\n        SELECT \\n            Flat_count.Project_Identifier AS Project,\\n            OPD.ACTIVITY_ID,\\n            OPD.SBU_ID,\\n           \\'Corridor\\' AS Area,\\n            \\'Corridor Progress\\' AS Progress_Type,\\n            OPD.CATEGORY,\\n            OPD.ACTIVITY_SEQUENCE,\\n            Flat_count.Flats,\\n            Flat_count.Total_Floors,\\n            Flat_count.Scheduled_Activities\\n   FROM STG.O_PLN_CORRIDOR_MAP_STG OPD\\n          CROSS apply (SELECT \\n                                           Project_Identifier,\\n                                           Total_Floors AS Scheduled_Activities,\\n                                           FLAT_COUNT AS Flats,\\n                                           Total_Floors AS Total_Floors\\n                                       FROM [STG].[PROJECTS_NEW_STG] WHERE Project_Identifier !=\\'Creek Vista Grande\\' )AS Flat_count)a\\n\\n                                                join[DWH].[PLN_CORRIDOR_FACT] PTF\\n                                               ON  a.Activity_Id=PTF.Activity_ID\\n                                               Group By PTF.Update_Date,\\n          a.Project,\\n        PTF.tower,\\n        a.ACTIVITY_ID,\\n        a.SBU_ID,\\n       Area,\\n        Progress_Type,\\n        a.CATEGORY,\\n        a.ACTIVITY_SEQUENCE,\\n        a.Flats,\\n        a.Total_Floors,\\n        a.Scheduled_Activities\\n   \\n   UNION ALL\\n\\n\\n   SELECT \\n        PTF.Upload_Date,\\n         a.Project,\\n        PTF.tower,\\n        a.ACTIVITY_ID,\\n        a.SBU_ID,\\n        \\'KeepOut Area\\' AS Area,\\n        \\'KeepOut Progress\\' AS Progress_Type,\\n        a.CATEGORY,\\n        a.ACTIVITY_SEQUENCE,\\n        a.Flats,\\n           a.Total_Floors,\\n           a.Scheduled_Activities,\\n       AVG(Try_CAST(PTF.value as decimal(15,4))) AS Average_Achived,\\n       SUM(Try_Cast(PTF.value as DECIMAL(15,4))) AS SUM_Achived,\\n       COUNT(Try_Cast(PTF.value As DECIMAL(15,4))) AS Count_Achived,\\n       SUM(TRY_CAST(CASE WHEN PTF.value = 1 THEN 1 ELSE NULL END as Decimal(15,4))) AS Completed,\\n        Sum(Try_CAST(CASE WHEN PTF.value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END as Decimal(15,4))) AS In_Progress,\\n       sum(TRY_CAST(CASE WHEN PTF.value = 0 THEN 1 ELSE NULL END as Decimal(15,4))) AS Yet_To_Start,\\n      6 as SORT_MAIN ,\\n       ABS((ISNULL(a.Scheduled_Activities,0)-(ISNULL( SUM(TRY_CAST(CASE WHEN PTF.value = 1 THEN 1 ELSE NULL END as Decimal(15,4))),0)\\n        +ISNULL( Sum(Try_CAST(CASE WHEN PTF.value BETWEEN 0.01 AND 0.999 THEN 1 ELSE NULL END as Decimal(15,4))),0)))) AS Yet_To_Start_Manual\\n    FROM (\\n        SELECT \\n            Flat_count.Project_Identifier AS Project,\\n            OPD.ACTIVITY_ID,\\n            OPD.SBU_ID,\\n            OPD.CATEGORY,\\n            OPD.ACTIVITY_SEQUENCE,\\n            Flat_count.Flats,\\n            Flat_count.Total_Floors,\\n            Flat_count.Scheduled_Activities\\n     FROM STG.O_PLN_KEEPOUT_MAP_STG OPD CROSS JOIN (SELECT \\n                                           Project_Identifier,\\n                                           FLAT_COUNT AS Scheduled_Activities,\\n                                           FLAT_COUNT AS Flats,\\n                                           Total_Floors AS Total_Floors\\n                                       FROM [STG].[PROJECTS_NEW_STG] WHERE Project_Identifier !=\\'Creek Vista Grande\\') AS Flat_count)a\\n\\n                                                join DWH.PLN_KEEPOUT_FACT PTF\\n                                                ON a.Activity_Id=PTF.Activity_Id\\n                                                Group By PTF.Upload_Date,\\n         a.Project,\\n        PTF.tower,\\n        a.ACTIVITY_ID,\\n        a.SBU_ID,\\n        a.CATEGORY,\\n        a.ACTIVITY_SEQUENCE,\\n        a.Flats,\\n        a.Total_Floors,\\n        a.Scheduled_Activities\\n\\n\\n   \\n   \\n   ',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Upload_Date as date,",
						"          Project as string,",
						"          Tower as string,",
						"          Activity_ID as integer,",
						"          SBU_ID as string,",
						"          Area as string,",
						"          Progress_Type as string,",
						"          Category as string,",
						"          Activity_Sequence as string,",
						"          Flats as string,",
						"          Total_Floors as integer,",
						"          Scheduled_Activities as integer,",
						"          Sum_Achived as decimal(36,4),",
						"          Count_Achived as integer,",
						"          Average_Achived as decimal(38,3),",
						"          Completed as decimal(23,0),",
						"          In_Progress as decimal(38,3),",
						"          Yet_To_Start as decimal(38,3),",
						"          Yet_To_Start_Manual as decimal(25,0),",
						"          Sort_Main as integer,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_PROJECT_PROGRESS_SUMMARY_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Upload_Date,",
						"          Project,",
						"          Tower,",
						"          Activity_ID = ACTIVITY_ID,",
						"          SBU_ID,",
						"          Area,",
						"          Progress_Type,",
						"          Category = CATEGORY,",
						"          Activity_Sequence = ACTIVITY_SEQUENCE,",
						"          Flats,",
						"          Total_Floors,",
						"          Scheduled_Activities,",
						"          Sum_Achived = SUM_Achived,",
						"          Count_Achived,",
						"          Average_Achived,",
						"          Completed,",
						"          In_Progress,",
						"          Yet_To_Start = Yet_TO_Start,",
						"          Yet_To_Start_Manual,",
						"          Sort_Main = SORT_MAIN,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_DRYAREA_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_PROJECT_PROGRESS_SUMMARY_FACT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_SBU_MAPPING')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_SBU_MAPPING_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_SBU_MAPPING_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          SBU_MAPPING_ID as integer,",
						"          Mapping_Id as integer,",
						"          Sbu_Identifier as string,",
						"          Sbu_Shorts as string,",
						"          Sbu_Description as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          SBU_Map_ID as integer,",
						"          SBU_Identifier as string,",
						"          SBU_Shorts as string,",
						"          SBU_Description as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_SBU_MAPPING_DIM];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          SBU_Map_ID = SBU_MAPPING_ID,",
						"          SBU_Identifier = Sbu_Identifier,",
						"          SBU_Shorts = Sbu_Shorts,",
						"          SBU_Description = Sbu_Description,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_SBU_MAPPING_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_SBU_MAPPING_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_SERVICEROOM')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_ELECTRICALROOM_MAP_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_SERVICEROOMS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Update_Date as date,",
						"          project_id as integer,",
						"          Project_Identifier as string,",
						"          Level_Id as integer,",
						"          Sbu_Id as integer,",
						"          tower as string,",
						"          Type_of_work as string,",
						"          value as decimal(19,8),",
						"          Activity_Id as integer,",
						"          Category as string,",
						"          Level as string,",
						"          Sclicer as string,",
						"          Category_Map as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT  \\n        UNION_ALL.Update_Date,    \\n        P.Sort_ID as project_id,\\n          p.Project_Identifier,\\n        LM.Level_Map_ID as Level_Id,\\n          SM.Sbu_Map_id as Sbu_Id,\\n            \\n        UNION_ALL.tower,\\n          \\n        CASE\\n            WHEN Type_of_work = \\'Blockwork\\' THEN \\'Blockwork ER\\'\\n            WHEN Type_of_work = \\'Blockwork Layout\\' THEN \\'Blockwork Layout ER\\'\\n            WHEN Type_of_work = \\'Bore Packing\\' THEN \\'Bore Packing ER\\'\\n            WHEN Type_of_work = \\'Bus bar with Tap off Box completion\\' THEN \\'Bus bar with Tap off Box completion ER\\'\\n            WHEN Type_of_work = \\'Cable laying and glanding works\\' THEN \\'Cable laying and glanding works ER\\'\\n            WHEN Type_of_work = \\'Ceiling First Coat Paint\\' THEN \\'Ceiling First Coat Paint ER\\'\\n            WHEN Type_of_work = \\'Ceiling Stucco (1st and 2nd Coat)\\' THEN \\'Ceiling Stucco (1st and 2nd Coat) ER\\'\\n            WHEN Type_of_work = \\'Core Cutting _and_ Chipping\\' THEN \\'Core Cutting _and_ Chipping ER\\'\\n            WHEN Type_of_work = \\'Cutting _and_ Chasing of Blockwork\\' THEN \\'Cutting _and_ Chasing of Blockwork ER\\'\\n            WHEN Type_of_work = \\'Door_Architrave Installation\\' THEN \\'Door_Architrave Installation ER\\'\\n            WHEN Type_of_work = \\'Door_Frame Installation\\' THEN \\'Door_Frame Installation ER\\'\\n            WHEN Type_of_work = \\'Door_Ironmongery Installation\\' THEN \\'Door_Ironmongery Installation ER\\'\\n            WHEN Type_of_work = \\'Door_Shutter Installation\\' THEN \\'Door_Shutter Installation ER\\'\\n            WHEN Type_of_work = \\'Door_Silicone\\' THEN \\'Door_Silicone ER\\'\\n            WHEN Type_of_work = \\'Epoxy Bug Fill\\' THEN \\'Epoxy Bug Fill ER\\'\\n            WHEN Type_of_work = \\'Epoxy Final Coat\\' THEN \\'Epoxy Final Coat ER\\'\\n            WHEN Type_of_work = \\'Epoxy First Coat\\' THEN \\'Epoxy First Coat ER\\'\\n            WHEN Type_of_work = \\'Epoxy Grinding\\' THEN \\'Epoxy Grinding ER\\'\\n            WHEN Type_of_work = \\'Epoxy Primer\\' THEN \\'Epoxy Primer ER\\'\\n            WHEN Type_of_work = \\'Final Coat Paint\\' THEN \\'Final Coat Paint ER\\'\\n            WHEN Type_of_work = \\'Fire Sealant Works\\' THEN \\'Fire Sealant Works ER\\'\\n            WHEN Type_of_work = \\'Floor Tile\\' THEN \\'Floor Tile ER\\'\\n            WHEN Type_of_work = \\'Grouting\\' THEN \\'Grouting ER\\'\\n            WHEN Type_of_work = \\'Installation of cable tray and trunking\\' THEN \\'Installation of cable tray and trunking ER\\'\\n            WHEN Type_of_work = \\'Installation of Panels\\' THEN \\'Installation of Panels ER\\'\\n            WHEN Type_of_work = \\'MEP Final Fixtures\\' THEN \\'MEP Final Fixtures ER\\'\\n            WHEN Type_of_work = \\'MEP Marking for Builders Work\\' THEN \\'MEP Marking for Builders Work ER\\'\\n            WHEN Type_of_work = \\'MEP Services Installation\\' THEN \\'MEP Services Installation ER\\'\\n            WHEN Type_of_work = \\'MEP Sleeve Installation\\' THEN \\'MEP Sleeve Installation ER\\'\\n            WHEN Type_of_work = \\'Plaster\\' THEN \\'Plaster ER\\'\\n            WHEN Type_of_work = \\'POP Works\\' THEN \\'POP Works ER\\'\\n            WHEN Type_of_work = \\'Screed\\' THEN \\'Screed ER\\'\\n            WHEN Type_of_work = \\'Signage\\' THEN \\'Signage ER\\'\\n            WHEN Type_of_work = \\'Silicone\\' THEN \\'Silicone ER\\'\\n            WHEN Type_of_work = \\'Skirting\\' THEN \\'Skirting ER\\'\\n            WHEN Type_of_work = \\'Threshold\\' THEN \\'Threshold ER\\'\\n            WHEN Type_of_work = \\'Wall First Coat Paint\\' THEN \\'Wall First Coat Paint ER\\'\\n            WHEN Type_of_work = \\'Wall MEP Services Packing\\' THEN \\'Wall MEP Services Packing ER\\'\\n            WHEN Type_of_work = \\'Wall Stucco (1st and 2nd Coat)\\' THEN \\'Wall Stucco (1st and 2nd Coat) ER\\'\\n            WHEN Type_of_work = \\'Ceiling First Coat Paint\\'  THEN \\'Ceiling First Coat Paint FLL\\'\\n            WHEN Type_of_work = \\'Ceiling Primer\\'  THEN \\'Ceiling Primer FLL\\'\\n            WHEN Type_of_work = \\'Cutting _and_ Chasing of Blockwork\\'  THEN \\'Cutting _and_ Chasing of Blockwork FLL\\'\\n            WHEN Type_of_work = \\'Door_Shutter Installation\\'THEN \\'Door_Shutter Installation TR\\'\\n            WHEN Type_of_work = \\'Epoxy Bug Fill\\'THEN \\'Epoxy Bug Fill TR\\'\\n            WHEN Type_of_work = \\'Epoxy Final Coat\\'THEN \\'Epoxy Final Coat TR\\'\\n            WHEN Type_of_work = \\'Epoxy First Coat\\'THEN \\'Epoxy First Coat TR\\'\\n            WHEN Type_of_work = \\'Epoxy Grinding\\'THEN \\'Epoxy Grinding TR\\'\\n            WHEN Type_of_work = \\'Epoxy Primer\\'THEN \\'Epoxy Primer TR\\'\\n            WHEN Type_of_work = \\'Final Coat Paint\\'THEN \\'Final Coat Paint TR\\'\\n            WHEN Type_of_work = \\'Floor Tile\\'THEN \\'Floor Tile TR\\'\\n            WHEN Type_of_work = \\'Grout\\'THEN \\'Grout TR\\'\\n            WHEN Type_of_work = \\'Installation of cable tray and trunking\\'THEN \\'Installation of cable tray and trunking TR\\'\\n            WHEN Type_of_work = \\'Installation of Panels\\'THEN \\'Installation of Panels TR\\'\\n            WHEN Type_of_work = \\'MEP Final Fixtures\\'THEN \\'MEP Final Fixtures TR\\'\\n            WHEN Type_of_work = \\'MEP Marking for Builders Work\\'THEN \\'MEP Marking for Builders Work TR\\'\\n            WHEN Type_of_work = \\'MEP Services Installation\\'THEN \\'MEP Services Installation TR\\'\\n            WHEN Type_of_work = \\'Plaster\\'THEN \\'Plaster TR\\'\\n            WHEN Type_of_work = \\'Screed\\'THEN \\'Screed TR\\'\\n            WHEN Type_of_work = \\'Signage\\'THEN \\'Signage TR\\'\\n            WHEN Type_of_work = \\'Skirting\\'THEN \\'Skirting TR\\'\\n            WHEN Type_of_work = \\'Threshold\\'THEN \\'Threshold TR\\'\\n            WHEN Type_of_work = \\'Wall First Coat Paint\\'THEN \\'Wall First Coat Paint TR\\'\\n            WHEN Type_of_work = \\'Wall MEP Services Packing\\'THEN \\'Wall MEP Services Packing TR\\'\\n            WHEN Type_of_work = \\'Wall Stucco (1st and 2nd Coat)\\'THEN \\'Wall Stucco (1st and 2nd Coat) TR\\'\\n            WHEN Type_of_work = \\'Blockwork\\'  THEN \\'Blockwork WMR\\'\\n            WHEN Type_of_work = \\'Blockwork Layout\\'  THEN \\'Blockwork Layout WMR\\'\\n            WHEN Type_of_work = \\'Bore Packing\\'  THEN \\'Bore Packing WMR\\'\\n            WHEN Type_of_work = \\'Ceiling Primer\\'  THEN \\'Ceiling Primer WMR\\'\\n            WHEN Type_of_work = \\'Ceiling Stucco (1st and 2nd Coat)\\'  THEN \\'Ceiling Stucco (1st and 2nd Coat) WMR\\'\\n            WHEN Type_of_work = \\'Core Cutting _and_ Chipping\\'  THEN \\'Core Cutting _and_ Chipping WMR\\'\\n            WHEN Type_of_work = \\'Cutting _and_ Chasing of Blockwork\\'  THEN \\'Cutting _and_ Chasing of Blockwork WMR\\'\\n            WHEN Type_of_work = \\'Door_Architrave Installation\\'  THEN \\'Door_Architrave Installation WMR\\'\\n            WHEN Type_of_work = \\'Door_Frame Installation\\'  THEN \\'Door_Frame Installation WMR\\'\\n            WHEN Type_of_work = \\'Door_Ironmongery Installation\\'  THEN \\'Door_Ironmongery Installation WMR\\'\\n            WHEN Type_of_work = \\'Door_Shutter Installation\\'  THEN \\'Door_Shutter Installation WMR\\'\\n            WHEN Type_of_work = \\'Door_Silicone\\'  THEN \\'Door_Silicone WMR\\'\\n            WHEN Type_of_work = \\'Epoxy Bug Fill\\'  THEN \\'Epoxy Bug Fill WMR\\'\\n            WHEN Type_of_work = \\'Epoxy Final Coat\\'  THEN \\'Epoxy Final Coat WMR\\'\\n            WHEN Type_of_work = \\'Epoxy First Coat\\'  THEN \\'Epoxy First Coat WMR\\'\\n            WHEN Type_of_work = \\'Epoxy Grinding\\'  THEN \\'Epoxy Grinding WMR\\'\\n            WHEN Type_of_work = \\'Epoxy Primer\\'  THEN \\'Epoxy Primer WMR\\'\\n            WHEN Type_of_work = \\'False Ceiling Boarding\\'  THEN \\'False Ceiling Boarding WMR\\'\\n            WHEN Type_of_work = \\'False Ceiling Framing\\'  THEN \\'False Ceiling Framing WMR\\'\\n            WHEN Type_of_work = \\'Fire Sealant Works\\'  THEN \\'Fire Sealant Works WMR\\'\\n            WHEN Type_of_work = \\'Floor Tile\\'  THEN \\'Floor Tile WMR\\'\\n            WHEN Type_of_work = \\'Grouting\\'  THEN \\'Grouting WMR\\'\\n            WHEN Type_of_work = \\'MEP Boarding Clearance\\'  THEN \\'MEP Boarding Clearance WMR\\'\\n            WHEN Type_of_work = \\'MEP Framing Clearance\\'  THEN \\'MEP Framing Clearance WMR\\'\\n            WHEN Type_of_work = \\'MEP Marking for Builders Work\\'  THEN \\'MEP Marking for Builders Work WMR\\'\\n            WHEN Type_of_work = \\'MEP Services Installation\\'  THEN \\'MEP Services Installation WMR\\'\\n            WHEN Type_of_work = \\'MEP Sleeve Installation\\'  THEN \\'MEP Sleeve Installation WMR\\'\\n            WHEN Type_of_work = \\'Plaster\\'  THEN \\'Plaster WMR\\'\\n            WHEN Type_of_work = \\'POP Works\\'  THEN \\'POP Works WMR\\'\\n            WHEN Type_of_work = \\'Screed\\'  THEN \\'Screed WMR\\'\\n            WHEN Type_of_work = \\'Skirting\\'  THEN \\'Skirting WMR\\'\\n            WHEN Type_of_work = \\'Threshold\\'  THEN \\'Threshold WMR\\'\\n            WHEN Type_of_work = \\'Wall First Coat Paint\\'  THEN \\'Wall First Coat Paint WMR\\'\\n            WHEN Type_of_work = \\'Wall MEP Services Packing\\'  THEN \\'Wall MEP Services Packing WMR\\'\\n            WHEN Type_of_work = \\'Wall Primer\\'  THEN \\'Wall Primer WMR\\'\\n            WHEN Type_of_work = \\'Wall Stucco (1st and 2nd Coat)\\'  THEN \\'Wall Stucco (1st and 2nd Coat) WMR\\'\\n             ELSE Type_of_work END AS Type_of_work,\\n          CAST(REPLACE(UNION_ALL.[value],\\'%\\',\\'\\') AS DECIMAL(15,4))/100 AS value,\\n        UNION_ALL.Activity_Id,\\n        UNION_ALL.Category,\\n          UNION_ALL.Level,\\n          UNION_ALL.Sclicer,\\n        CASE        \\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Blockwork\\') THEN  1\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Builders Work\\') THEN  2\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'MEP\\') THEN  16\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Plaster\\') THEN  3\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Screed\\') THEN  5\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Paint\\') THEN  8\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Gypsum\\') THEN  6\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Marble\\') THEN  10\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Tile\\') THEN  9\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Joinery\\') THEN  12\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Signage\\') THEN  7\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'SFD\\') THEN  15\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Epoxy\\') THEN  11\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Specialist Services\\') THEN  13\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Waterproofing\\')THEN  4\\n            WHEN TRIM(UNION_ALL.CATEGORY) IN(\\'Specialist System\\')THEN  14\\n            ELSE 20\\n        END AS Category_Map\\n    FROM (SELECT  * FROM [DWH].[PLN_WATERROOM_FACT]\\n            UNION ALL\\n        SELECT  * FROM [DWH].[PLN_ELECTRICROOM_FACT]\\n            UNION ALL\\n        SELECT  * FROM [DWH].[PLN_GARBAGEROOM_FACT]\\n            UNION ALL\\n        SELECT  * FROM [DWH].[PLN_TELEPHONEROOM_FACT]\\n            UNION ALL\\n        SELECT  * FROM [DWH].[PLN_FIRELIFTLOBBY_FACT])UNION_ALL\\n     \\n        LEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] LM\\n          ON UNION_ALL.Level = LM.level\\n\\n          LEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON         UNION_ALL.PROJECT_ID=P.Sort_ID\\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          UNION_ALL.SBU_ID=SM.SBU_MAP_ID\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Update_Date as date,",
						"          Project_Identifier as string,",
						"          Project_Id as integer,",
						"          Level_Id as integer,",
						"          Sbu_ID as integer,",
						"          Tower as string,",
						"          Type_of_work as string,",
						"          Level as string,",
						"          Sclicer as string,",
						"          Value as decimal(14,4),",
						"          Activity_Id as integer,",
						"          Category as string,",
						"          Category_Map as integer,",
						"          Load_Date_Time as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_SERVICEROOMS_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Update_Date,",
						"          Project_Identifier,",
						"          Project_Id = project_id,",
						"          Level_Id,",
						"          Sbu_ID = Sbu_Id,",
						"          Tower = tower,",
						"          Type_of_work,",
						"          Level,",
						"          Sclicer,",
						"          Value = value,",
						"          Activity_Id,",
						"          Category,",
						"          Category_Map,",
						"          Load_Date_Time = LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_ELECTRICALROOM_MAP_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_SERVICEROOMS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_STAIRCASE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_STAIRCASE_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_STAIRCASE_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAP_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          TOWER as string,",
						"          LEVEL as string,",
						"          STAIR_CASE_NO as string,",
						"          sclicer as string,",
						"          ACTIVITY_ID as integer,",
						"          VALUE as string,",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          UPLOAD_DATE as date,",
						"          CATEGORY_SORT as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: '    SELECT \\n     P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n     SM.SBU_MAP_ID AS SBU_ID,\\n    S.TOWER,\\n    S.LEVEL,\\n        S.STAIR_CASE_NO,\\n        \\'Staircase Area\\' AS sclicer,\\n     S.ACTIVITY_ID,\\n    CASE \\n        WHEN S.VALUE IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE S.VALUE\\n    END AS VALUE,\\n    S.TYPE_OF_WORK,\\n    S.CATEGORY,\\n     S.UPLOAD_DATE,\\n    CASE \\n        WHEN TRIM(S.CATEGORY) IN(\\'MEP\\') THEN  8\\n        WHEN TRIM(S.CATEGORY) IN(\\'BUILDERS WORK\\') THEN  2\\n        WHEN TRIM(S.CATEGORY) IN(\\'PLASTER\\') THEN  3\\n        WHEN TRIM(S.CATEGORY) IN(\\'PAINT\\') THEN  9\\n        WHEN TRIM(S.CATEGORY) IN(\\'HANDRAIL\\') THEN  4\\n        WHEN TRIM(S.CATEGORY) IN(\\'MARBLE\\') THEN  5\\n        WHEN TRIM(S.CATEGORY) IN(\\'JOINERY\\') THEN  6\\n        WHEN TRIM(S.CATEGORY) IN(\\'SIGNAGE\\') THEN  7\\n        WHEN TRIM(S.CATEGORY) IN(\\'PMT\\') THEN  1\\n        ELSE 10\\n    END AS CATEGORY_SORT\\nFROM\\n(\\n     SELECT\\n        CAST(OPSR.UPLOAD_TIME AS DATE) AS UPLOAD_DATE, \\n        OPSR.PROJECT_ID,\\n        OPSR.TOWER,\\n        OPSR.LEVEL,\\n        OPSR.STAIR_CASE_NO,\\n        COLUMN_NAME.*,\\n        OPSM.ACTIVITY_ID,\\n        OPSM.SBU_ID,\\n        OPSM.CATEGORY,\\n        DENSE_RANK () OVER (PARTITION BY  OPSR.PROJECT_ID, OPSM.SBU_ID ORDER BY  CAST(OPSR.UPLOAD_TIME AS DATE) DESC) DRANK\\n  FROM STG.O_PLN_STAIRCASE_RAW_STG OPSR\\n    CROSS APPLY (\\n                SELECT     MEP_CONDUIT_MARKING     ,     \\'MEP CONDUIT MARKING\\'\\n                    UNION ALL SELECT     CUTTING_AND_CHASING     ,     \\'CUTTING AND CHASING\\'\\n                    UNION ALL SELECT     MEP_CONDUIT_FIXTURES     ,     \\'MEP CONDUIT FIXTURES\\'\\n                    UNION ALL SELECT     WALL_PACKING     ,     \\'WALL PACKING\\'\\n                    UNION ALL SELECT     PLASTER     ,     \\'PLASTER\\'\\n                    UNION ALL SELECT     GRINDING     ,     \\'GRINDING\\'\\n                    UNION ALL SELECT     POP     ,     \\'POP\\'\\n                    UNION ALL SELECT     MEDIUM_COAT_CEILING_SPRAY_PLASTER     ,     \\'MEDIUM COAT CEILING SPRAY PLASTER\\'\\n                    UNION ALL SELECT     TWO_COAT_FINE_CEILING_SPRAY_PLASTER     ,     \\'TWO COAT FINE CEILING SPRAY PLASTER\\'\\n                    UNION ALL SELECT     CEILING_PRIMER     ,     \\'CEILING PRIMER\\'\\n                    UNION ALL SELECT     CEILING_TEXTURE     ,     \\'CEILING TEXTURE\\'\\n                    UNION ALL SELECT     WALL_PRIMER     ,     \\'WALL PRIMER\\'\\n                    UNION ALL SELECT     WALL_STUCCO_BANDING     ,     \\'WALL STUCCO BANDING\\'\\n                    UNION ALL SELECT     [WALL_STUCCO_(1ST_AND_2ND_COAT)]     ,     \\'WALL STUCCO (1ST AND 2ND COAT)\\'\\n                    UNION ALL SELECT     MEP_CLEARANCE_FOR_PRESSURIZATION_SHAFT     ,     \\'MEP CLEARANCE FOR PRESSURIZATION SHAFT\\'\\n                    UNION ALL SELECT     SANDING     ,     \\'SANDING\\'\\n                    UNION ALL SELECT     WALL_FIRST_COAT_PAINT     ,     \\'WALL FIRST COAT PAINT\\'\\n                    UNION ALL SELECT     CEILING_FIRST_COAT_PAINT     ,     \\'CEILING FIRST COAT PAINT\\'\\n                    UNION ALL SELECT     HANDRAIL_FLOOR_MOUNTED     ,     \\'HANDRAIL FLOOR MOUNTED\\'\\n                    UNION ALL SELECT     HANDRAIL_WALL_MOUNTED     ,     \\'HANDRAIL WALL MOUNTED\\'\\n                    UNION ALL SELECT     EPOXY_GRINDING     ,     \\'EPOXY GRINDING\\'\\n                    UNION ALL SELECT     EPOXY_BUG_FILL     ,     \\'EPOXY BUG FILL\\'\\n                    UNION ALL SELECT     EPOXY_PRIMER     ,     \\'EPOXY PRIMER\\'\\n                    UNION ALL SELECT     EPOXY_BASE_COAT     ,     \\'EPOXY BASE COAT\\'\\n                    UNION ALL SELECT     EPOXY_FINAL_COAT     ,     \\'EPOXY FINAL COAT\\'\\n                    UNION ALL SELECT     THRESHOLD_INSTALLATION     ,     \\'THRESHOLD INSTALLATION\\'\\n                    UNION ALL SELECT     DOOR_FRAME_INSTALLATION     ,     \\'DOOR - FRAME INSTALLATION\\'\\n                    UNION ALL SELECT     DOOR_ARCHITRAVE_INSTALLATION     ,     \\'DOOR - ARCHITRAVE INSTALLATION\\'\\n                    UNION ALL SELECT     DOOR_SHUTTER_INSTALLATION     ,     \\'DOOR - SHUTTER INSTALLATION\\'\\n                    UNION ALL SELECT     DOOR_IRONMONGERY_INSTALLATION     ,     \\'DOOR - IRONMONGERY INSTALLATION\\'\\n                    UNION ALL SELECT     DOOR_SILICONE_WORKS     ,     \\'DOOR - SILICONE WORKS\\'\\n                    UNION ALL SELECT     SIGNAGE     ,     \\'SIGNAGE\\'\\n                    UNION ALL SELECT     NOSING_INSTALLATION     ,     \\'NOSING INSTALLATION\\'\\n                    UNION ALL SELECT     HANDRAIL_PAINTING     ,     \\'HANDRAIL PAINTING\\'\\n                    UNION ALL SELECT     PREPARATION_FOR_FINAL_COAT_PAINT     ,     \\'PREPARATION FOR FINAL COAT PAINT\\'\\n                    UNION ALL SELECT     MEP_FINAL_FIXTURES_INSTALLATION     ,     \\'MEP FINAL FIXTURES INSTALLATION\\'\\n                    UNION ALL SELECT     FINAL_COAT_PAINT     ,     \\'FINAL COAT PAINT\\'\\n                    UNION ALL SELECT     STAIRCASE_PRESSURIZATION     ,     \\'STAIRCASE PRESSURIZATION\\'\\n        )\\n        AS COLUMN_NAME(VALUE,TYPE_OF_WORK)\\n    INNER JOIN \\n     STG.O_PLN_STAIRCASE_MAP_STG OPSM\\n    ON COLUMN_NAME.TYPE_OF_WORK = OPSM.ACTIVITY_SEQUENCE\\n    WHERE COLUMN_NAME.VALUE IS NOT NULL AND (TRIM(OPSR.LEVEL) NOT IN (\\'\\') AND OPSR.LEVEL IS NOT NULL)\\n        ) S\\nLEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          S.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          S.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          S.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          S.DRANK = 1\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAP_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Stair_Case_No as string,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Category_Sort as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_STAIRCASE_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level = LEVEL,",
						"          Stair_Case_No = STAIR_CASE_NO,",
						"          Sclicer = sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = VALUE,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Category_Sort = CATEGORY_SORT,",
						"          Update_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_STAIRCASE_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_STAIRCASE_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_STRUCTURE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PLN_STRACTURE_FACT_TEMP",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_STRACTURE_FACT_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Upload_Date as date,",
						"          Proect_Identifier as string,",
						"          Area as string,",
						"          Level_Id as integer,",
						"          sbu_id as string,",
						"          LEVEL as string,",
						"          Pour_count as string,",
						"          POUR as string,",
						"          Sequence_of_Appearance as integer,",
						"          value as date,",
						"          project_id as integer,",
						"          Next_Date as date,",
						"          Avg_days as integer,",
						"          View_Map as integer,",
						"          value_Average as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select  a.Upload_Date,  a.Project_id as Proect_Identifier, a.Area, c.LEVEL_MAP_ID AS Level_Id, a.sbu_id,\\n        a.LEVEL, a.Pour_count, a.POUR, a.Sequence_of_Appearance,\\n        a.VALUE as value,a.Sort_ID as project_id, b.Next_Date, b.AVG_DAYS as Avg_days,\\n        CASE \\n            WHEN a.AREA = \\'Tower\\' THEN     1\\n            WHEN a.AREA = \\'Podium\\' THEN     2\\n            WHEN a.AREA = \\'Podium-TA\\' THEN 3\\n            WHEN a.AREA = \\'Tower A\\' THEN     4\\n            WHEN a.AREA = \\'Podium-TB\\' THEN 5\\n            WHEN a.AREA = \\'Tower B\\' THEN     6\\n            WHEN a.AREA = \\'Tower C\\' THEN     7\\n            WHEN a.AREA = \\'Tower D\\' THEN     8\\n        ELSE NULL\\n        END AS View_Map,\\n        CASE WHEN a.VALUE < GETDATE() THEN 1 ELSE 0 END AS value_Average from \\n(select * from STG.O_PLN_STRUCTURE_POURING_STG1) a\\nleft join\\n(select a.Project_Identifier, a.AREA,a.LEVEL, a.POUR,a.VALUE,\\n    LAG(a.VALUE) over(partition by a.Project_Identifier,a.Pour order by a.Pour,value) as Next_Date,\\n    DATEDIFF(day,LAG(a.VALUE) OVER(PARTITION BY a.Project_Identifier ,a.POUR ORDER BY a.POUR,a.VALUE),a.VALUE) AS AVG_DAYS from\\n     (select * from STG.O_PLN_STRUCTURE_POURING_STG1 where LOWER(POUR) like \\'slab%\\'  AND LOWER(LEVEL) NOT LIKE \\'grade%\\') a) b\\nON a.Project_Identifier = b.Project_Identifier AND a.Pour = b.Pour AND a.VALUE = b.value\\nleft join\\n(select * from DWH.PLN_LEVEL_MAP_ALL_DIM) c ON  a.LEVEL = c.LEVEL',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Upload_Date as date,",
						"          Project_Identifier as string,",
						"          Project_Id as string,",
						"          Level_Id as integer,",
						"          Sbu_id as integer,",
						"          Area as string,",
						"          Level as string,",
						"          Pour_count as string,",
						"          Pour as string,",
						"          Sequence_of_Appearance as integer,",
						"          value as string,",
						"          Next_Date as string,",
						"          Avg_days as integer,",
						"          View_Map as integer,",
						"          value_Average as integer,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_STRUCTURE_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Upload_Date,",
						"          Project_Identifier = Proect_Identifier,",
						"          Project_Id = project_id,",
						"          Level_Id,",
						"          Sbu_id = sbu_id,",
						"          Area,",
						"          Level = LEVEL,",
						"          Pour_count,",
						"          Pour = POUR,",
						"          Sequence_of_Appearance,",
						"          value,",
						"          Next_Date,",
						"          Avg_days,",
						"          View_Map,",
						"          value_Average,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PLN_STRACTURE_FACT_TEMP')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_STRACTURE_FACT_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_SUBCONTRACT_MANPOWER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_SUBCONTRACTOR_MANPOWER_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_SUBCONTRACT_MANPOWER_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_DOOR_DELIVERY_M_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Id_ as integer,",
						"          upload_time as timestamp,",
						"          tower as string,",
						"          project_id as integer,",
						"          sbu_id as integer,",
						"          SBU as string,",
						"          Project as string,",
						"          type as string,",
						"          Sub_Contractor as string,",
						"          Activity as string,",
						"          SCL_Engineer as string,",
						"          Shift as string,",
						"          Count as string,",
						"          Trade as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select \\n        GAR.Id_,\\n          GAR.upload_time,  \\n          GAR.tower, \\n          p.Sort_ID as project_id,\\n          sm.Sbu_Map_Id as sbu_id,\\n          RTRIM(GAR.SBU) as SBU,\\n          RTRIM(GAR.Project) as Project, \\n          RTRIM(GAR.type) as type,\\n          GAR.Sub_Contractor,\\n          GAR.Activity,\\n          GAR.SCL_Engineer,\\n          GAR.Shift, \\n          GAR.Count,\\n          GAR. Trade\\nfrom(\\nselect\\n          s.Id_,\\n          s.upload_time,  \\n          s.tower, \\n          RTRIM(s.SBU) as SBU,\\n          RTRIM(s.Project) as Project, \\n          RTRIM(s.type) as type,\\n          s.Sub_Contractor,\\n          s.Activity,\\n          s.SCL_Engineer,\\n          column_name.Trade_uncleaned as Trade,\\n          case when column_name.Trade_uncleaned like \\'%D\\' then \\'Day\\'\\n                when column_name.Trade_uncleaned like \\'%N\\' then \\'Night\\'\\n                when column_name.Trade_uncleaned like \\'%D/N\\' then \\'Day_Night\\'\\n                else \\'Error\\'\\n                end as Shift, \\n          column_name.Count\\nfrom STG.O_PLN_SUBCONTRACTOR_MANPOWER_STG s\\ncross Apply (\\n                         SELECT     PM_And_Engineers_D     ,     \\'PM & Engineers_D\\'\\n                         UNION ALL SELECT     PM_And_Engineers_N     ,     \\'PM & Engineers_N\\'\\n                         UNION ALL SELECT     PM_And_Engineers_D_N     ,     \\'PM_And_Engineers_D/N\\'\\n                         UNION ALL SELECT     Supervisor_D     ,     \\'Supervisor_D\\'\\n                         UNION ALL SELECT     Supervisor_N     ,     \\'Supervisor_N\\'\\n                         UNION ALL SELECT     Supervisor_D_N     ,     \\'Supervisor_D/N\\'\\n                         UNION ALL SELECT     Foreman_Staff_D     ,     \\'Foreman / Staff_D\\'\\n                         UNION ALL SELECT     Foreman_Staff_N     ,     \\'Foreman / Staff_N\\'\\n                         UNION ALL SELECT     Foreman_Staff_D_N     ,     \\'Foreman / Staff_D/N\\'\\n                         UNION ALL SELECT     Chargehand_D     ,     \\'Chargehand_D\\'\\n                         UNION ALL SELECT     Chargehand_N     ,     \\'Chargehand_N\\'\\n                         UNION ALL SELECT     Chargehand_D_N     ,     \\'Chargehand_D/N\\'\\n                         UNION ALL SELECT     Carpenter_D     ,     \\'Carpenter_D\\'\\n                         UNION ALL SELECT     Carpenter_N     ,     \\'Carpenter_N\\'\\n                         UNION ALL SELECT     Carpenter_D_N     ,     \\'Carpenter_D/N\\'\\n                         UNION ALL SELECT     Mason_D     ,     \\'Mason_D\\'\\n                         UNION ALL SELECT     Mason_N     ,     \\'Mason_N\\'\\n                         UNION ALL SELECT     Mason_D_N     ,     \\'Mason_D/N\\'\\n                         UNION ALL SELECT     Steel_Fitter_D     ,     \\'Steel Fitter_D\\'\\n                         UNION ALL SELECT     Steel_Fitter_N     ,     \\'Steel Fitter_N\\'\\n                         UNION ALL SELECT     Steel_Fitter_D_N     ,     \\'Steel Fitter_D/N\\'\\n                         UNION ALL SELECT     Scaffolder_D     ,     \\'Scaffolder_D\\'\\n                         UNION ALL SELECT     Scaffolder_N     ,     \\'Scaffolder_N\\'\\n                         UNION ALL SELECT     Scaffolder_D_N     ,     \\'Scaffolder_D/N\\'\\n                         UNION ALL SELECT     Operator_D     ,     \\'Operator_D\\'\\n                         UNION ALL SELECT     Operator_N     ,     \\'Operator_N\\'\\n                         UNION ALL SELECT     Operator_D_N     ,     \\'Operator_D/N\\'\\n                         UNION ALL SELECT     Security_D     ,     \\'Security_D\\'\\n                         UNION ALL SELECT     Security_N     ,     \\'Security_N\\'\\n                         UNION ALL SELECT     Security_D_N     ,     \\'Security_D/N\\'\\n                         UNION ALL SELECT     Helper_D     ,     \\'Helper_D\\'\\n                         UNION ALL SELECT     Helper_N     ,     \\'Helper_N\\'\\n                         UNION ALL SELECT     Helper_D_N     ,     \\'Helper_D/N\\'\\n                         UNION ALL SELECT     Steel_Fixers_D     ,     \\'Steel Fixers_D\\'\\n                         UNION ALL SELECT     Steel_Fixers_N     ,     \\'Steel Fixers_N\\'\\n                         UNION ALL SELECT     Steel_Fixers_D_N     ,     \\'Steel Fixers_D/N\\'\\n                         UNION ALL SELECT     Masons_D     ,     \\'Masons_D\\'\\n                         UNION ALL SELECT     Masons_N     ,     \\'Masons_N\\'\\n                         UNION ALL SELECT     Masons_D_N     ,     \\'Masons_D/N\\'\\n                         UNION ALL SELECT     Welder_D     ,     \\'Welder_D\\'\\n                         UNION ALL SELECT     Welder_N     ,     \\'Welder_N\\'\\n                         UNION ALL SELECT     Welder_D_N     ,     \\'Welder_D/N\\'\\n                         UNION ALL SELECT     Rigger_D     ,     \\'Rigger_D\\'\\n                         UNION ALL SELECT     Rigger_N     ,     \\'Rigger_N\\'\\n                         UNION ALL SELECT     Rigger_D_N     ,     \\'Rigger_D/N\\'\\n                         UNION ALL SELECT     Painter_D     ,     \\'Painter_D\\'\\n                         UNION ALL SELECT     Painter_N     ,     \\'Painter_N\\'\\n                         UNION ALL SELECT     Painter_D_N     ,     \\'Painter_D/N\\'\\n                         UNION ALL SELECT     Tile_Mason_D     ,     \\'Tile Mason_D\\'\\n                         UNION ALL SELECT     Tile_Mason_N     ,     \\'Tile Mason_N\\'\\n                         UNION ALL SELECT     Tile_Mason_D_N     ,     \\'Tile Mason_D/N\\'\\n                         UNION ALL SELECT     Gypsum_Carpenter_D     ,     \\'Gypsum Carpenter_D\\'\\n                         UNION ALL SELECT     Gypsum_Carpenter_N     ,     \\'Gypsum Carpenter_N\\'\\n                         UNION ALL SELECT     Gypsum_Carpenter_D_N     ,     \\'Gypsum Carpenter_D/N\\'\\n                         UNION ALL SELECT     Joinery_Carpenter_D     ,     \\'Joinery Carpenter_D\\'\\n                         UNION ALL SELECT     Joinery_Carpenter_N     ,     \\'Joinery Carpenter_N\\'\\n                         UNION ALL SELECT     Joinery_Carpenter_D_N     ,     \\'Joinery Carpenter_D/N\\'\\n                         UNION ALL SELECT     Screed_Mason_D     ,     \\'Screed Mason_D\\'\\n                         UNION ALL SELECT     Screed_Mason_N     ,     \\'Screed Mason_N\\'\\n                         UNION ALL SELECT     Screed_Mason_D_N     ,     \\'Screed Mason_D/N\\'\\n                         UNION ALL SELECT     Marble_Stone_Mason_D     ,     \\'Marble / Stone Mason_D\\'\\n                         UNION ALL SELECT     Marble_Stone_Mason_N     ,     \\'Marble / Stone Mason_N\\'\\n                         UNION ALL SELECT     Marble_Stone_Mason_D_N     ,     \\'Marble / Stone Mason_D/N\\'\\n                         UNION ALL SELECT     Electrician_D     ,     \\'Electrician_D\\'\\n                         UNION ALL SELECT     Electrician_N     ,     \\'Electrician_N\\'\\n                         UNION ALL SELECT     Electrician_D_N     ,     \\'Electrician_D/N\\'\\n                         UNION ALL SELECT     Plumber_D     ,     \\'Plumber_D\\'\\n                         UNION ALL SELECT     Plumber_N     ,     \\'Plumber_N\\'\\n                         UNION ALL SELECT     Plumber_D_N     ,     \\'Plumber_D/N\\'\\n                         UNION ALL SELECT     HVAC_D     ,     \\'HVAC_D\\'\\n                         UNION ALL SELECT     HVAC_N     ,     \\'HVAC_N\\'\\n                         UNION ALL SELECT     HVAC_D_N     ,     \\'HVAC_D/N\\'\\n                         UNION ALL SELECT     Sub_Contractor_D     ,     \\'Sub Contractor_D\\'\\n                         UNION ALL SELECT     Sub_Contractor_N     ,     \\'Sub Contractor_N\\'\\n                         UNION ALL SELECT     Sub_Contractor_D_N     ,     \\'Sub Contractor_D/N\\'\\n                         UNION ALL SELECT     Facade_Technicians_D     ,     \\'Facade Technicians_D\\'\\n                         UNION ALL SELECT     Facade_Technicians_N     ,     \\'Facade Technicians_N\\'\\n                         UNION ALL SELECT     Facade_Technicians_D_N     ,     \\'Facade Technicians_D/N\\'\\n                         UNION ALL SELECT     POP_Mason_D     ,     \\'POP Mason_D\\'\\n                         UNION ALL SELECT     POP_Mason_N     ,     \\'POP Mason_N\\'\\n                         UNION ALL SELECT     POP_Mason_D_N     ,     \\'POP Mason_D/N\\'\\n                         UNION ALL SELECT     Joinery_Polisher_D     ,     \\'Joinery Polisher_D\\'\\n                         UNION ALL SELECT     Joinery_Polisher_N     ,     \\'Joinery Polisher_N\\'\\n                         UNION ALL SELECT     Joinery_Polisher_D_N     ,     \\'Joinery Polisher_D/N\\'\\n                         UNION ALL SELECT     Fitter_D     ,     \\'Fitter_D\\'\\n                         UNION ALL SELECT     Fitter_N     ,     \\'Fitter_N\\'\\n                         UNION ALL SELECT     Fitter_D_N     ,     \\'Fitter_D/N\\'\\n                         UNION ALL SELECT     Deep_Cleaning_D     ,     \\'Deep Cleaning_D\\'\\n                         UNION ALL SELECT     Deep_Cleaning_N     ,     \\'Deep Cleaning_N\\'\\n                         UNION ALL SELECT     Deep_Cleaning_D_N     ,     \\'Deep Cleaning_D/N\\'\\n                         UNION ALL SELECT     Others_D     ,     \\'Others_D\\'\\n                         UNION ALL SELECT     Others_N     ,     \\'Others_N\\'\\n                         UNION ALL SELECT     Others_D_N     ,     \\'Others_D/N\\'\\n                         )as column_name(Count,Trade_uncleaned)\\n                         where \\n                         Count not in (\\'\\',\\' - \\',\\'D/N\\',\\'N\\',\\'D\\',\\'Total\\',\\'SCL Engineer\\',\\'Activity\\',\\'Sub Total\\',\\'Others\\',\\'Deep Cleaning\\',\\'Fitter\\',\\'Joinery Polisher\\',\\'POP Mason\\',\\'Facade Technicians\\',\\'Sub Contractor\\'\\n                         ,\\'HVAC\\',\\'Plumber\\',\\'Electrician\\',\\'Steel Fixer\\',\\'Marble / Stone Mason\\',\\'Screed Mason\\',\\'Joinery Carpenter\\',\\'Gypsum Carpenter\\',\\'Tile Mason\\',\\n                         \\'Painter\\',\\'Rigger\\',\\'Welder\\',\\'Masons\\',\\'Steel Fixers\\',\\'Carpenters\\',\\'Helper\\',\\'Security\\',\\'Operator\\',\\'Scaffolder\\',\\'Steel Fitter\\',\\'Mason\\',\\n                         \\'Carpenter\\',\\'Chargehand\\',\\'Foreman / Staff\\',\\'Supervisor\\',\\'PM_And_Engineers\\',\\'Supervisor\\')\\n                         and Project not in (\\'\\')\\n                         ) as GAR\\n                    LEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n                         ON  GAR.PROJECT=P.PROJECT_IDENTIFIER\\n              LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n                         ON   GAR.SBU=SM.SBU_IDENTIFIER\\n                    \\n\\n                    \\n\\n                    ',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Upload_Time as timestamp,",
						"          Project_Id as integer,",
						"          Tower as string,",
						"          Sbu_Id as integer,",
						"          SBU as string,",
						"          Project as string,",
						"          Type as string,",
						"          Sub_Contractor as string,",
						"          Activity as string,",
						"          SCL_Engineer as string,",
						"          Trade as string,",
						"          Shift as string,",
						"          Count as string,",
						"          LoadDate_time as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_SUBCONTRACTOR_MANPOWER_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = Id_,",
						"          Upload_Time = upload_time,",
						"          Project_Id = project_id,",
						"          Tower = tower,",
						"          Sbu_Id = sbu_id,",
						"          SBU,",
						"          Project,",
						"          Type = type,",
						"          Sub_Contractor,",
						"          Activity,",
						"          SCL_Engineer,",
						"          Trade,",
						"          Shift,",
						"          Count,",
						"          LoadDate_time = LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_SUBCONTRACTOR_MANPOWER_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_SUBCONTRACT_MANPOWER_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_TELEPHONEROOM')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_TELEPHONEROOM_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_TELEPHONEROOM_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_TELEPHONEROOM_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_PLN_TELEPHONEROOM_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          tower as string,",
						"          Sclicer as string,",
						"          Level as string,",
						"          ACTIVITY_ID as integer,",
						"          value as string,",
						"          Type_of_work as string,",
						"          CATEGORY as string,",
						"          Upload_Date as date",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n     P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    P.PROJECT_IDENTIFIER ,\\n    TR.tower    ,\\n    \\'Telephone Room\\' as Sclicer,\\n    TR.[Level]    ,\\n     TR.ACTIVITY_ID    ,\\n    CASE \\n        WHEN TR.value IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE TR.value\\n    END AS value,\\n    TR.Type_of_work    ,\\n    TR.CATEGORY    ,\\n    TR.Upload_Date \\nFROM (\\n        SELECT CAST(O_PLN_TELEPHONEROOM_RAW.upload_time AS DATE) AS Upload_Date,\\n        O_PLN_TELEPHONEROOM_RAW.project_id,\\n        O_PLN_TELEPHONEROOM_RAW.tower,\\n        O_PLN_TELEPHONEROOM_RAW.[Level],\\n        Column_Name.*,\\n        O_PLN_TELEPHONEROOM_MAP.ACTIVITY_ID,\\n        O_PLN_TELEPHONEROOM_MAP.SBU_ID,\\n        O_PLN_TELEPHONEROOM_MAP.CATEGORY,\\n        DENSE_RANK () OVER     (PARTITION BY  project_id , O_PLN_TELEPHONEROOM_MAP.SBU_ID\\n                            ORDER BY  CAST(upload_time AS DATE) DESC\\n                            )     Project_Udate_DRANK\\n    FROM STG.O_PLN_TELEPHONEROOM_RAW_STG   O_PLN_TELEPHONEROOM_RAW\\n    CROSS APPLY  (     \\n                 SELECT [Blockwork_Layout]  ,        \\'Blockwork Layout\\'  \\n   UNION ALL SELECT [Blockwork]  ,        \\'Blockwork\\'  \\n   UNION ALL SELECT [MEP_Marking_for_Builders_Work]  ,        \\'MEP Marking for Builders Work\\'  \\n   UNION ALL SELECT [Cutting_&_Chasing_of_Blockwork]  ,        \\'Cutting & Chasing of Blockwork\\'  \\n   UNION ALL SELECT [MEP_Services_Installation]  ,        \\'MEP Services Installation\\'  \\n   UNION ALL SELECT [Wall_MEP_Services_Packing]  ,        \\'Wall MEP Services Packing\\'  \\n   UNION ALL SELECT [Plaster]  ,        \\'Plaster\\'  \\n   UNION ALL SELECT [Screed]  ,        \\'Screed\\'  \\n   UNION ALL SELECT [Ceiling_Stucco_(1st_and_2nd_Coat)]  ,        \\'Ceiling Stucco (1st and 2nd Coat)\\'  \\n   UNION ALL SELECT [Wall_Stucco_(1st_and_2nd_Coat)]  ,        \\'Wall Stucco (1st and 2nd Coat)\\'  \\n   UNION ALL SELECT [Ceiling_First_Coat_Paint]  ,        \\'Ceiling First Coat Paint\\'  \\n   UNION ALL SELECT [Wall_First_Coat_Paint]  ,        \\'Wall First Coat Paint\\'  \\n   UNION ALL SELECT [Installation_of_cable_tray_and_trunking]  ,        \\'Installation of cable tray and trunking\\'  \\n   UNION ALL SELECT [Installation_of_Panels]  ,        \\'Installation of Panels\\'  \\n   UNION ALL SELECT [Cable_laying_and_glanding_works]  ,        \\'Cable laying and glanding works\\'  \\n   --UNION ALL SELECT [ELV_installation] , \\'ELV installation\\'\\n   --UNION ALL SELECT [Dressing_and_termination_of_SMDB]  ,        \\'Dressing and termination of SMDB\\'  \\n   --UNION ALL SELECT [Bus_bar_with_Tap_off_Box_completion]  ,        \\'Bus bar with Tap off Box completion\\'  \\n   UNION ALL SELECT [Fire_Sealant]  ,        \\'Fire Sealant\\'  \\n   UNION ALL SELECT [Epoxy_Grinding]  ,        \\'Epoxy Grinding\\'  \\n   UNION ALL SELECT [Epoxy_Bug_Fill]  ,        \\'Epoxy Bug Fill\\'  \\n   UNION ALL SELECT [Epoxy_Primer]  ,        \\'Epoxy Primer\\'  \\n   UNION ALL SELECT [Epoxy_First_Coat]  ,        \\'Epoxy First Coat\\'  \\n   UNION ALL SELECT [Epoxy_Final_Coat]  ,        \\'Epoxy Final Coat\\'  \\n   UNION ALL SELECT [Floor_Tile]  ,        \\'Floor Tile\\'  \\n   UNION ALL SELECT [Skirting]  ,        \\'Skirting\\'  \\n   UNION ALL SELECT [POP]  ,        \\'POP\\'  \\n   UNION ALL SELECT [Grout]  ,        \\'Grout\\'  \\n   UNION ALL SELECT [Threshold]  ,        \\'Threshold\\'  \\n   UNION ALL SELECT [Door_Frame_Installation]  ,        \\'Door-Frame Installation\\'  \\n   UNION ALL SELECT [Door_Architrave_Installation]  ,        \\'Door-Architrave Installation\\'  \\n   UNION ALL SELECT [Door_Shutter_Installation]  ,        \\'Door-Shutter Installation\\'  \\n   UNION ALL SELECT [Door_Ironmongery_Installation]  ,        \\'Door-Ironmongery Installation\\'  \\n   --UNION ALL SELECT [Signage]  ,        \\'Signage\\'  \\n   UNION ALL SELECT [MEP_Final_Fixtures]  ,        \\'MEP Final Fixtures\\'  \\n   UNION ALL SELECT [Final_Coat_Paint]       ,   \\'Final Coat Paint\\'  \\n                        \\n                              ) AS Column_Name (value,Type_of_work)\\n   INNER JOIN STG.O_PLN_TELEPHONEROOM_MAP_STG  O_PLN_TELEPHONEROOM_MAP \\n    ON Column_Name.Type_of_work = O_PLN_TELEPHONEROOM_MAP.ACTIVITY_SEQUENCE\\n    WHERE VALUE IS NOT NULL\\n     ) TR\\n\\nLEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          TR.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          TR.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          TR.SBU_ID=SM.SBU_IDENTIFIER\\nwhere Project_Udate_DRANK=1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_TELEPHONEROOM_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = tower,",
						"          Level,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = value,",
						"          Type_of_work,",
						"          Category = CATEGORY,",
						"          Update_Date = Upload_Date,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_TELEPHONEROOM_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_TELEPHONEROOM_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_WATERROOM')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_WATERROOM_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_WATERROOM_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_WATERROOM_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_PLN_WATERROOM_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          tower as string,",
						"          Level as string,",
						"          ACTIVITY_ID as integer,",
						"          Sclicer as string,",
						"          value as string,",
						"          Type_of_work as string,",
						"          CATEGORY as string,",
						"          Upload_Date as date",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n     P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    P.PROJECT_IDENTIFIER ,\\n     WR.tower    ,\\n    WR.[Level]    ,\\n    WR.ACTIVITY_ID    ,\\n    \\'Water Room\\' as Sclicer,\\n    CASE \\n        WHEN WR.value IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE WR.value\\n    END AS value,\\n    WR.Type_of_work    ,\\n    WR.CATEGORY    ,\\n    WR.Upload_Date \\n\\nFROM (\\n        SELECT CAST(O_PLN_WATERROOM_RAW.upload_time AS DATE) AS Upload_Date,\\n        O_PLN_WATERROOM_RAW.project_id,\\n        O_PLN_WATERROOM_RAW.tower,\\n        O_PLN_WATERROOM_RAW.[Level],\\n        Column_Name.*,\\n        O_PLN_WATERROOM_MAP.ACTIVITY_ID,\\n        O_PLN_WATERROOM_MAP.SBU_ID,\\n        O_PLN_WATERROOM_MAP.CATEGORY,\\n        DENSE_RANK () OVER     (PARTITION BY  project_id ,O_PLN_WATERROOM_MAP.SBU_ID \\n                            ORDER BY  CAST(upload_time AS DATE) DESC\\n                            )     Project_Udate_DRANK\\n    from STG.O_PLN_WATERROOM_RAW_STG   O_PLN_WATERROOM_RAW\\n    CROSS APPLY  (\\n                SELECT  [Blockwork_Layout]  ,     \\'Blockwork Layout\\'  \\n   UNION ALL SELECT          [Blockwork]  ,        \\'Blockwork\\'  \\n   UNION ALL SELECT          [MEP_Marking_for_Builders_Work]  ,        \\'MEP Marking for Builders Work\\'  \\n   UNION ALL SELECT          [Cutting_AND_Chasing_of_Blockwork]  ,        \\'Cutting & Chasing of Blockwork\\'  \\n   UNION ALL SELECT          [MEP_Services_Installation]  ,        \\'MEP Services Installation\\'  \\n   UNION ALL SELECT          [Wall_MEP_Services_Packing]  ,        \\'Wall MEP Services Packing\\'  \\n   UNION ALL SELECT          [Plaster]  ,        \\'Plaster\\'  \\n   UNION ALL SELECT          [Core_Cutting_and_Chipping]  ,        \\'Core Cutting & Chipping\\'  \\n   UNION ALL SELECT          [MEP_Sleeve_Installation]  ,        \\'MEP Sleeve Installation\\'  \\n   UNION ALL SELECT          [Bore_Packing]  ,        \\'Bore Packing\\'  \\n   UNION ALL SELECT          [Screed]  ,        \\'Screed\\'  \\n   UNION ALL SELECT          [Wall_Primer]  ,        \\'Wall Primer\\'  \\n   UNION ALL SELECT          [Wall_Stucco_1st_and_2nd_Coat]  ,        \\'Wall Stucco (1st and 2nd Coat)\\'  \\n   UNION ALL SELECT          [Wall_First_Coat_Paint]  ,        \\'Wall First Coat Paint\\'  \\n   UNION ALL SELECT          [Installation_of_PPR_pipes]  ,        \\'Installation of PPR pipes\\'  \\n   UNION ALL SELECT          [Manifold_and_Valve_installation]  ,        \\'Manifold & Valve installation\\'  \\n   UNION ALL SELECT          [PRV_installation_and_connections]  ,        \\'PRV installation & connections\\'  \\n   UNION ALL SELECT          [Testing_of_Pipes]  ,        \\'Testing of Pipes\\'  \\n   UNION ALL SELECT          [Fire_Sealant_Works]  ,        \\'Fire Sealant Works\\'  \\n   UNION ALL SELECT          [MEP_Framing_Clearance]  ,        \\'MEP Framing Clearance\\'  \\n   UNION ALL SELECT          [False_Ceiling_Framing]  ,        \\'False Ceiling Framing\\'  \\n   UNION ALL SELECT          [MEP_Boarding_Clearance]  ,        \\'MEP Boarding Clearance\\'  \\n   UNION ALL SELECT          [False_Ceiling_Boarding]  ,        \\'False Ceiling Boarding\\'  \\n   UNION ALL SELECT          [Ceiling_Primer]  ,        \\'Ceiling Primer\\'  \\n   UNION ALL SELECT          [Ceiling_Stucco_1st_and_2nd_Coat]  ,        \\'Ceiling Stucco (1st and 2nd Coat)\\'  \\n   UNION ALL SELECT          [First_Coat_Paint]  ,        \\'First Coat Paint\\'  \\n   UNION ALL SELECT          [Threshold]  ,        \\'Threshold\\'  \\n   --UNION ALL SELECT          [Floor Tile]  ,        \\'Floor Tile\\'  \\n   UNION ALL SELECT          [Door_Frame_Installation]  ,        \\'Door-Frame Installation\\'  \\n   UNION ALL SELECT          [Door_Architrave_Installation]  ,        \\'Door-Architrave Installation\\'  \\n   UNION ALL SELECT          [Door_Shutter_Installation]  ,        \\'Door-Shutter Installation\\'  \\n   UNION ALL SELECT          [Door_Ironmongery_Installation]  ,        \\'Door-Ironmongery Installation\\'  \\n   --UNION ALL SELECT          [Door-Silicone]  ,        \\'Door-Silicone\\'  \\n   UNION ALL SELECT          [Epoxy_Grinding]  ,        \\'Epoxy Grinding\\'  \\n   UNION ALL SELECT          [Epoxy_Bug_Fill]  ,        \\'Epoxy Bug Fill\\'  \\n   UNION ALL SELECT          [Epoxy_Primer]  ,        \\'Epoxy Primer\\'  \\n   UNION ALL SELECT          [Epoxy_First_Coat]  ,        \\'Epoxy First Coat\\'  \\n   UNION ALL SELECT          [Epoxy_Final_Coat]  ,        \\'Epoxy Final Coat\\'  \\n   UNION ALL SELECT          [Skirting]  ,        \\'Skirting\\'  \\n   UNION ALL SELECT          [POP_Works]  ,        \\'POP Works\\'  \\n   UNION ALL SELECT          [Grouting]  ,        \\'Grouting\\'  \\n   UNION ALL SELECT          [Silicone]  ,        \\'Silicone\\'  \\n   --UNION ALL SELECT          [Signage]  ,        \\'Signage\\'  \\n   UNION ALL SELECT          [MEP_Final_Fixtures]  ,        \\'MEP Final Fixtures\\'  \\n   UNION ALL SELECT          [PSV_Installation]  ,        \\'Pressure Safety Valve Installation\\'  \\n   UNION ALL SELECT          [Water_Meter_Installation]  ,        \\'Water Meter Installation\\'  \\n   UNION ALL SELECT          [Final_Coat_Paint]       ,   \\'Final Coat Paint\\'\\n    )\\n        as Column_Name (value,Type_of_work)\\n          \\n    JOIN [STG].[O_PLN_WATERROOM_MAP_STG]  O_PLN_WATERROOM_MAP\\n    ON Column_Name.Type_of_work = O_PLN_WATERROOM_MAP.ACTIVITY_SEQUENCE\\n    WHERE value IS NOT NULL\\n     ) WR\\n\\nINNER JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          WR.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          WR.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          WR.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          WR.Project_Udate_DRANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_WATERROOM_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = tower,",
						"          Level,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = value,",
						"          Type_of_work,",
						"          Category = CATEGORY,",
						"          Update_Date = Upload_Date,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WATERROOM_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_WATERROOM_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PLN_WETAREA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_WETAREA_RAW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PLN_WETAREA_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          SBU_ID as integer,",
						"          TOWER as string,",
						"          LEVEL as string,",
						"          FLAT as string,",
						"          Sclicer as string,",
						"          ACTIVITY_ID as integer,",
						"          VALUE as string,",
						"          TYPE_OF_WORK as string,",
						"          CATEGORY as string,",
						"          UPLOAD_DATE as timestamp",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT\\n     P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    P.PROJECT_IDENTIFIER ,\\n     SM.SBU_MAP_ID AS SBU_ID,\\n    WT.TOWER,\\n    WT.[LEVEL],\\n    WT.FLAT,\\n    \\'Wet Area\\' as Sclicer,\\n     WT.ACTIVITY_ID,\\n    CASE \\n        WHEN WT.VALUE IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE WT.VALUE\\n    END AS VALUE,\\n    WT.TYPE_OF_WORK,\\n    WT.CATEGORY,\\n     WT.UPLOAD_DATE\\nFROM\\n     (SELECT\\n          WR.UPLOAD_TIME AS UPLOAD_DATE,\\n          WR.PROJECT_ID,\\n          WR.TOWER,\\n          WR.[LEVEL],\\n          WR.FLAT,\\n          COLUMN_NAME.*,\\n          WM.ACTIVITY_ID,\\n          WM.SBU_ID,\\n          WM.CATEGORY,\\n          DENSE_RANK () OVER (PARTITION BY  PROJECT_ID,WM.SBU_ID ORDER BY Convert(Date,UPLOAD_TIME) DESC)   AS  DRANK\\n     FROM [STG].[O_PLN_WETAREA_RAW_STG] WR\\n     CROSS APPLY (\\n                                SELECT  [Plastering_Clearance_with_1_Mtr_Marking],\\'PLASTERING CLEARANCE WITH 1 MTR MARKING\\'\\n                    UNION ALL SELECT  [Wet_Area_Tile_Marking],\\'WET AREA TILE MARKING\\'\\n                    UNION ALL SELECT  [MEP_Marking],\\'MEP MARKING\\'\\n                    UNION ALL SELECT  [Wet_Area_Cutting_And_Chasing],\\'WET AREA CUTTING & CHASING\\'\\n                    UNION ALL SELECT  [Pex_pipe_installation],\\'PEX PIPE INSTALLATION\\'\\n                    UNION ALL SELECT  [Re_packing_of_MEP_Services],\\'RE PACKING OF MEP SERVICES\\'\\n                    UNION ALL SELECT  [MEP_Pipe_installation_Borepacking],\\'MEP PIPE INSTALLATION - BOREPACKING\\'\\n                    UNION ALL SELECT  [Wet_Area_Bore_Packing],\\'WET AREA BORE PACKING\\'\\n                    UNION ALL SELECT  [Cistern_installation],\\'CISTERN INSTALLATION\\'\\n                    UNION ALL SELECT  [Drywall_framing],\\'DRYWALL FRAMING\\'\\n                    UNION ALL SELECT  [Pex_Elbow_Connections],\\'PEX ELBOW & CONNECTIONS\\'\\n                    UNION ALL SELECT  [Bottom_Boarding_Clearance],\\'BOTTOM BOARDING CLEARANCE\\'\\n                    UNION ALL SELECT  [Bottom_boarding] ,\\'BOTTOM BOARDING\\'\\n                    UNION ALL SELECT  [Under_Screed_Waterproofing],\\'UNDER SCREED WATERPROOFING\\'\\n                    UNION ALL SELECT  [Wet_Area_Screed],\\'WET AREA SCREED\\'\\n                    UNION ALL SELECT  [Ledge_Wall_Full_Board_Closure_Clearance],\\'LEDGE WALL FULL BOARD CLOSURE CLEARANCE\\'\\n                    UNION ALL SELECT  [MEP_HL_Water_Supply_Drainage],\\'MEP HL WATER SUPPLY & DRAINAGE \\'\\n                    UNION ALL SELECT  [MEP_HL_Ducting_FCU_Works],\\'MEP HL DUCTING & FCU WORKS \\'\\n                    UNION ALL SELECT  [MEP_HL_Electrical_Services_Installation],\\'MEP HL ELECTRICAL SERVICES INSTALLATION\\'\\n                    UNION ALL SELECT  [MEP_HL_Works_Testing],\\'MEP HL WORKS & TESTING\\'\\n                    UNION ALL SELECT  [MEP_HL_Packing_Clearance],\\'MEP HL PACKING CLEARANCE\\'\\n                    UNION ALL SELECT  [Packing_for_all_builders_work_opening],\\'PACKING FOR ALL BUILDERS WORK OPENING \\'\\n                    UNION ALL SELECT  [Wet_Area_MEP_H_L_Fire_Sealent_Framing_Clearance],\\'WET AREA MEP H/L FIRE SEALENT & FRAMING CLEARANCE \\'\\n                    UNION ALL SELECT  [Wet_area_Wall_Tile],\\'WET AREA WALL TILE\\'\\n                    UNION ALL SELECT  [Wet_Area_FC_Framing],\\'WET AREA FC FRAMING\\'\\n                    UNION ALL SELECT  [Wet_Area_MEP_H_L_Boarding_Clearance],\\'WET AREA MEP H/L BOARDING CLEARANCE\\'\\n                    UNION ALL SELECT  [FC_Boarding_Joint_Taping],\\'FC BOARDING & JOINT TAPING\\'\\n                    UNION ALL SELECT  [Ceiling_Paint_Primer],\\'CEILING PAINT PRIMER\\'\\n                    UNION ALL SELECT  [Ceiling_Paint_Stucco_1st_Coat_2nd_Coat],\\'CEILING PAINT STUCCO 1ST COAT & 2ND COAT\\'\\n                    UNION ALL SELECT  [Wet_Area_Ceiling_First_Coat_Paint],\\'WET AREA CEILING FIRST COAT PAINT\\'\\n                    UNION ALL SELECT  [MEP_Grill_Diffuser_Installtion],\\'MEP GRILL & DIFFUSER INSTALLTION \\'\\n                    UNION ALL SELECT  [Shower_Threshold],\\'SHOWER THRESHOLD\\'\\n                    UNION ALL SELECT  [Linear_Drain_Supply],\\'LINEAR DRAIN SUPPLY\\'\\n                    UNION ALL SELECT  [Linear_Drain_Fixing],\\'LINEAR DRAIN FIXING \\'\\n                    UNION ALL SELECT  [Under_Tile_Waterproofing],\\'UNDER TILE WATERPROOFING\\'\\n                    UNION ALL SELECT  [Bathroom_Door_Threshold],\\'BATHROOM DOOR THRESHOLD\\'\\n                    UNION ALL SELECT  [Wet_Area_Floor_Tile],\\'WET AREA FLOOR TILE\\'\\n                    UNION ALL SELECT  [Wall_tile_bottom_Tile],\\'WALL TILE BOTTOM TILE\\'\\n                    UNION ALL SELECT  [Grouting_Wall_Floor],\\'GROUTING - WALL & FLOOR\\'\\n                    UNION ALL SELECT  [Silicone_Wall_Floor_Corners],\\'SILICONE - WALL & FLOOR CORNERS\\'\\n                    UNION ALL SELECT  [Shower_Partition_U_channel],\\'SHOWER PARTITION - U CHANNEL\\'\\n                    UNION ALL SELECT  [Shower_Partition_Glass],\\'SHOWER PARTITION - GLASS\\'\\n                    UNION ALL SELECT  [Accessories_Silicon],\\'ACCESSORIES & SILICON\\'\\n                    UNION ALL SELECT  [Bathroom_Door_Frame_Installation],\\'BATHROOM DOOR - FRAME INSTALLATION\\'\\n                    UNION ALL SELECT  [Bathroom_Door_Architrave_Installation],\\'BATHROOM DOOR - ARCHITRAVE INSTALLATION\\'\\n                    UNION ALL SELECT  [Bathroom_Door_Shutter_Installation],\\'BATHROOM DOOR - SHUTTER INSTALLATION\\'\\n                    UNION ALL SELECT  [Bathroom_Door_Ironmongery_Installation],\\'BATHROOM DOOR - IRONMONGERY INSTALLATION\\'\\n                    UNION ALL SELECT  [Vanity_Cabinet],\\'VANITY CABINET\\'\\n                    UNION ALL SELECT  [Vanity_Cabinet_Counter_top],\\'VANITY CABINET COUNTER TOP\\'\\n                    UNION ALL SELECT  [MEP_Final_Fixtures_Sanitary_CP_fittings_Lights_WB],\\'MEP FINAL FIXTURES (SANITARY ,CP FITTINGS & LIGHTS,WB)\\'\\n                    UNION ALL SELECT  [MEP_Ledge_Wall_Clearance],\\'MEP LEDGE WALL CLEARANCE \\'\\n                    UNION ALL SELECT  [Ledge_Wall_Closing],\\'LEDGE WALL CLOSING\\'\\n                    UNION ALL SELECT  [Silicone_around_MEP_Fixtures],\\'SILICONE AROUND MEP FIXTURES\\'\\n                    UNION ALL SELECT  [Wet_Area_Final_Coat_paint],\\'WET AREA FINAL COAT PAINT\\'\\n               )AS COLUMN_NAME(VALUE,TYPE_OF_WORK)\\n     INNER JOIN     [STG].[O_PLN_WETAREA_MAP_STG] WM\\n          ON          COLUMN_NAME.TYPE_OF_WORK = WM.ACTIVITY_SEQUENCE\\n     WHERE          VALUE IS NOT NULL) WT\\nLEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          WT.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          WT.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          WT.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          WT.DRANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Project_ID as integer,",
						"          Project_Identifier as string,",
						"          SBU_ID as integer,",
						"          Level_ID as integer,",
						"          Tower as string,",
						"          Level as string,",
						"          Flat as integer,",
						"          Sclicer as string,",
						"          Activity_ID as integer,",
						"          Value as string,",
						"          Type_of_work as string,",
						"          Category as string,",
						"          Update_Date as date,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_WETAREA_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Project_ID = PROJECT_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Tower = TOWER,",
						"          Level = LEVEL,",
						"          Flat = FLAT,",
						"          Sclicer,",
						"          Activity_ID = ACTIVITY_ID,",
						"          Value = VALUE,",
						"          Type_of_work = TYPE_OF_WORK,",
						"          Category = CATEGORY,",
						"          Update_Date = UPLOAD_DATE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_WETAREA_RAW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PLN_WETAREA_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PROJECTS_NEW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PROJECTS_NEW_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_PROJECTS_NEW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PROJECTS_NEW_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_PROJECTS_NEW_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Sort_ID as integer,",
						"          Project_Identifier as string,",
						"          FLAT_COUNT as integer,",
						"          Project_Short as string,",
						"          Total_Floors as integer,",
						"          Total_Podiums as integer,",
						"          Total_Typical_Floor as integer,",
						"          Typical_Floor_Slab as integer,",
						"          Podium_Slab as integer,",
						"          ONE_BHK as integer,",
						"          TWO_BHK as integer,",
						"          ONE_FIVE_BHK as integer,",
						"          TWO_FIVE_BHK as integer,",
						"          THEREE_BHK as integer,",
						"          FOUR_BHK as integer,",
						"          FIVE_BHK as integer,",
						"          Actual_Start as timestamp,",
						"          BOQ_Value as string,",
						"          Bathrooms as integer,",
						"          Center_Tower as string,",
						"          Built_Up_Area as string,",
						"          Chairman_Lift as string,",
						"          Delay as string,",
						"          Duplex as string,",
						"          Fire_Lifts as integer,",
						"          Forecast_Duration as integer,",
						"          Forecast_Finish as timestamp,",
						"          Lat as string,",
						"          Long as string,",
						"          Office_Space as integer,",
						"          Office_Use_Lift as integer,",
						"          Parkings as integer,",
						"          Pent_House as integer,",
						"          Passenger_Lift as integer,",
						"          Project_Configuration as string,",
						"          Project_Duration as integer,",
						"          Project_Finish as timestamp,",
						"          Project_Start as timestamp,",
						"          Residence_Use_Lift as integer,",
						"          Retail as integer,",
						"          Service_Lift as integer,",
						"          Staircase_GF_L1 as integer,",
						"          Staircase_GF_Roof as integer,",
						"          Total_Units as integer,",
						"          Tower_A as string,",
						"          Tower_B as string,",
						"          Tower_C as string,",
						"          Tower_D as string,",
						"          Towers as string,",
						"          Image_Link as string,",
						"          Render_Image as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Sort_ID as integer,",
						"          Project_Identifier as string,",
						"          FLAT_COUNT as integer,",
						"          Project_Short as string,",
						"          Total_Floors as integer,",
						"          Total_Podiums as integer,",
						"          Total_Typical_Floor as integer,",
						"          Typical_Floor_Slab as integer,",
						"          Podium_Slab as integer,",
						"          ONE_BHK as integer,",
						"          TWO_BHK as integer,",
						"          ONE_FIVE_BHK as integer,",
						"          TWO_FIVE_BHK as integer,",
						"          THEREE_BHK as integer,",
						"          FOUR_BHK as integer,",
						"          FIVE_BHK as integer,",
						"          Actual_Start as timestamp,",
						"          BOQ_Value as string,",
						"          Bathrooms as integer,",
						"          Center_Tower as string,",
						"          Built_Up_Area as string,",
						"          Chairman_Lift as string,",
						"          Delay as string,",
						"          Duplex as string,",
						"          Fire_Lifts as integer,",
						"          Forecast_Duration as integer,",
						"          Forecast_Finish as timestamp,",
						"          Lat as string,",
						"          Long as string,",
						"          Office_Space as integer,",
						"          Office_Use_Lift as integer,",
						"          Parkings as integer,",
						"          Pent_House as integer,",
						"          Passenger_Lift as integer,",
						"          Project_Configuration as string,",
						"          Project_Duration as integer,",
						"          Project_Finish as timestamp,",
						"          Project_Start as timestamp,",
						"          Residence_Use_Lift as integer,",
						"          Retail as integer,",
						"          Service_Lift as integer,",
						"          Staircase_GF_L1 as integer,",
						"          Staircase_GF_Roof as integer,",
						"          Total_Units as integer,",
						"          Tower_A as string,",
						"          Tower_B as string,",
						"          Tower_C as string,",
						"          Tower_D as string,",
						"          Towers as string,",
						"          Image_Link as string,",
						"          Render_Image as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PROJECTS_NEW_DIM];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Sort_ID,",
						"          Project_Identifier,",
						"          FLAT_COUNT,",
						"          Project_Short,",
						"          Total_Floors,",
						"          Total_Podiums,",
						"          Total_Typical_Floor,",
						"          Typical_Floor_Slab,",
						"          Podium_Slab,",
						"          ONE_BHK,",
						"          TWO_BHK,",
						"          ONE_FIVE_BHK,",
						"          TWO_FIVE_BHK,",
						"          THEREE_BHK,",
						"          FOUR_BHK,",
						"          FIVE_BHK,",
						"          Actual_Start,",
						"          BOQ_Value,",
						"          Bathrooms,",
						"          Center_Tower,",
						"          Built_Up_Area,",
						"          Chairman_Lift,",
						"          Delay,",
						"          Duplex,",
						"          Fire_Lifts,",
						"          Forecast_Duration,",
						"          Forecast_Finish,",
						"          Lat,",
						"          Long,",
						"          Office_Space,",
						"          Office_Use_Lift,",
						"          Parkings,",
						"          Pent_House,",
						"          Passenger_Lift,",
						"          Project_Configuration,",
						"          Project_Duration,",
						"          Project_Finish,",
						"          Project_Start,",
						"          Residence_Use_Lift,",
						"          Retail,",
						"          Service_Lift,",
						"          Staircase_GF_L1,",
						"          Staircase_GF_Roof,",
						"          Total_Units,",
						"          Tower_A,",
						"          Tower_B,",
						"          Tower_C,",
						"          Tower_D,",
						"          Towers,",
						"          Image_Link,",
						"          Render_Image,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PROJECTS_NEW_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_PROJECTS_NEW_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SA_DIM_USERINFO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SA_DIM_USERINFO_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_SA_DIM_USERINFO_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SA_DIM_USERINFO_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_SA_DIM_USERINFO_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          UserID as integer,",
						"          Badgenumber as string,",
						"          DefaultdeptID as integer,",
						"          Name as string,",
						"          Password as string,",
						"          Card as string,",
						"          Privilege as string,",
						"          AccGroup as string,",
						"          TimeZones as string,",
						"          Gender as string,",
						"          Birthday as timestamp,",
						"          street as string,",
						"          zip as string,",
						"          ophone as string,",
						"          FPHONE as string,",
						"          pager as string,",
						"          minzu as string,",
						"          title as string,",
						"          SN as string,",
						"          SSN as string,",
						"          UTime as timestamp,",
						"          State as string,",
						"          City as string,",
						"          SECURITYFLAGS as short,",
						"          DelTag as short,",
						"          RegisterOT as integer,",
						"          AutoSchPlan as string,",
						"          MinAutoSchInterval as string,",
						"          Image_id as integer,",
						"          Last_Refresh_Date as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          UserID as integer,",
						"          Badgenumber as string,",
						"          DefaultdeptID as integer,",
						"          Name as string,",
						"          Password as string,",
						"          Card as string,",
						"          Privilege as string,",
						"          AccGroup as string,",
						"          TimeZones as string,",
						"          Gender as string,",
						"          Birthday as timestamp,",
						"          street as string,",
						"          zip as string,",
						"          ophone as string,",
						"          FPHONE as string,",
						"          pager as string,",
						"          minzu as string,",
						"          title as string,",
						"          SN as string,",
						"          SSN as string,",
						"          UTime as timestamp,",
						"          State as string,",
						"          City as string,",
						"          SECURITYFLAGS as integer,",
						"          DelTag as integer,",
						"          RegisterOT as integer,",
						"          AutoSchPlan as string,",
						"          MinAutoSchInterval as string,",
						"          Image_id as integer,",
						"          Last_Refresh_Date as timestamp,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[SA_DIM_USERINFO_DIM];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          UserID,",
						"          Badgenumber,",
						"          DefaultdeptID,",
						"          Name,",
						"          Password,",
						"          Card,",
						"          Privilege,",
						"          AccGroup,",
						"          TimeZones,",
						"          Gender,",
						"          Birthday,",
						"          street,",
						"          zip,",
						"          ophone,",
						"          FPHONE,",
						"          pager,",
						"          minzu,",
						"          title,",
						"          SN,",
						"          SSN,",
						"          UTime,",
						"          State,",
						"          City,",
						"          SECURITYFLAGS,",
						"          DelTag,",
						"          RegisterOT,",
						"          AutoSchPlan,",
						"          MinAutoSchInterval,",
						"          Image_id,",
						"          Last_Refresh_Date,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SA_DIM_USERINFO_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_SA_DIM_USERINFO_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SA_FACT_CHECKINOUT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SA_FACT_CHECKINOUT_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_SA_FACT_CHECKINOUT_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SA_FACT_CHECKINOUT_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_SA_FACT_CHECKINOUT_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Fact_CheckinoutID as integer,",
						"          Userid as integer,",
						"          Checktime as timestamp,",
						"          Checktype as string,",
						"          Verifycode as integer,",
						"          SN as string,",
						"          SensorID as string,",
						"          WorkCode as string,",
						"          Reserved as string,",
						"          Last_Refresh_Date as timestamp",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Fact_CheckinoutID as integer,",
						"          Userid as integer,",
						"          Checktime as timestamp,",
						"          Checktype as string,",
						"          Verifycode as integer,",
						"          SN as string,",
						"          SensorID as string,",
						"          WorkCode as string,",
						"          Reserved as string,",
						"          Last_Refresh_Date as timestamp,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[SA_FACT_CHECKINOUT_FACT];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          Fact_CheckinoutID,",
						"          Userid,",
						"          Checktime,",
						"          Checktype,",
						"          Verifycode,",
						"          SN,",
						"          SensorID,",
						"          WorkCode,",
						"          Reserved,",
						"          Last_Refresh_Date,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SA_FACT_CHECKINOUT_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_SA_FACT_CHECKINOUT_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SA_MANPOWER_MASTER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Dimensions"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SA_MANPOWER_MASTER_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_SA_MANPOWER_MASTER_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SA_MANPOWER_MASTER_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DS_SA_MANPOWER_MASTER_TRG"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Manpower_Master_ID as integer,",
						"          Upload_time as timestamp,",
						"          Project_id as integer,",
						"          Project as string,",
						"          SBU as string,",
						"          Sbu_map_id as integer,",
						"          Tower as string,",
						"          SL_NO as string,",
						"          EMP_ID_NO as string,",
						"          TECHNICIAN_NAME as string,",
						"          ACTUAL_DOJ as string,",
						"          TRADE_AS_PER_ADMIN as string,",
						"          TRADE_GROUP as string,",
						"          WORK_STATUS_COST_HEAD as string,",
						"          DIVISION as string,",
						"          UNIT as string,",
						"          WORK_STATUS as string,",
						"          SHIFT as string,",
						"          COMPANY as string,",
						"          SOURCE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select \\n     --[Upload_Date]  \\n     --, [Project_Sclicer] \\n     --, [SBU] \\n     [Manpower_Master_ID] ,\\n     [Upload_time] ,\\n     p.[Project_id] ,\\n     pp.Project_id AS Project,\\n     pp.sbu_id AS SBU,\\n     sm.[Sbu_map_id] ,\\n     [Tower] ,\\n     [SL_NO] ,\\n     [EMP_ID_NO] ,\\n     [TECHNICIAN_NAME] ,\\n     [ACTUAL_DOJ] ,\\n     [TRADE_AS_PER_ADMIN] ,\\n     [TRADE_GROUP] ,\\n     [WORK_STATUS_COST_HEAD] ,\\n     [DIVISION] ,\\n     [UNIT] ,\\n     [WORK_STATUS] ,\\n     [SHIFT],\\n     [COMPANY] ,\\n     [SOURCE]\\nFROM STG.SA_MANPOWER_MASTER_STG PP\\nLEFT JOIN [DWH].[PLN_PROJECTS_DIM] P\\n      ON          PP.Project_id=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          PP.SBU_id=SM.SBU_IDENTIFIER\\n\\n',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Manpower_Master_ID as integer,",
						"          Upload_time as timestamp,",
						"          Project_id as integer,",
						"          Project as string,",
						"          SBU as string,",
						"          Tower as string,",
						"          Sbu_id as integer,",
						"          SL_NO as string,",
						"          EMP_ID_NO as string,",
						"          TECHNICIAN_NAME as string,",
						"          ACTUAL_DOJ as string,",
						"          TRADE_AS_PER_ADMIN as string,",
						"          TRADE_GROUP as string,",
						"          WORK_STATUS_COST_HEAD as string,",
						"          DIVISION as string,",
						"          UNIT as string,",
						"          WORK_STATUS as string,",
						"          SHIFT as string,",
						"          COMPANY as string,",
						"          SOURCE as string,",
						"          LoadDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[SA_MANPOWER_MASTER_DIM];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Manpower_Master_ID,",
						"          Upload_time,",
						"          Project_id,",
						"          Project,",
						"          SBU,",
						"          Tower,",
						"          Sbu_id = Sbu_map_id,",
						"          SL_NO,",
						"          EMP_ID_NO,",
						"          TECHNICIAN_NAME,",
						"          ACTUAL_DOJ,",
						"          TRADE_AS_PER_ADMIN,",
						"          TRADE_GROUP,",
						"          WORK_STATUS_COST_HEAD,",
						"          DIVISION,",
						"          UNIT,",
						"          WORK_STATUS,",
						"          SHIFT,",
						"          COMPANY,",
						"          SOURCE,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SA_MANPOWER_MASTER_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_SA_MANPOWER_MASTER_TRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_WOODEN_DOOR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH/Facts"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_O_PLN_DOORMANPOWER_MAP_STG_TRG",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_WOODEN_DOOR_FACT_TRG",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     MAX_ID as integer (0)",
						"}",
						"source(output(",
						"          Upload_Date as date,",
						"          PROJECT_ID as integer,",
						"          LEVEL_ID as integer,",
						"          SBU_ID as integer,",
						"          PROJECT_IDENTIFIER as string,",
						"          tower as string,",
						"          Building as string,",
						"          Type as string,",
						"          Level as string,",
						"          Flat_No as string,",
						"          Door_Type as string,",
						"          Jamb_Width as string,",
						"          Orientation as string,",
						"          Door_Id as string,",
						"          Fire_Rating as string,",
						"          Frame as string,",
						"          Foam as string,",
						"          Architrave as string,",
						"          Shutter as string,",
						"          Ironmongery as string,",
						"          Installer as string,",
						"          Total as string,",
						"          SC_Short as string,",
						"          SC_NAME as string,",
						"          DATE_WISE_SPLIT as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT          Sort.Upload_Date,\\n                P.Sort_ID as PROJECT_ID,\\n                    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n                    SM.SBU_MAP_ID AS SBU_ID,\\n                    P.PROJECT_IDENTIFIER,\\n                Sort.tower,\\n                Sort.Building,\\n                Sort.[Type],\\n                Sort.[Level],\\n                Sort.[Flat_No],\\n                Sort.[Door_Type],\\n                Sort.[Jamb_Width],\\n                Sort.Orientation,\\n                Sort.[Door_Id],\\n                Sort.[Fire_Rating],\\n                Sort.Frame,\\n                Sort.Foam,\\n                Sort.Architrave,\\n                Sort.Shutter,\\n                (REPLACE(Sort.Ironmongery,\\'-008\\',\\'\\')) AS Ironmongery,\\n                Sort.Installer,\\n                (REPLACE(Sort.Value_Total,\\'-\\',\\'\\')) AS Total,\\n                Sort.SC_Short,\\n                Sort.SC_NAME,\\n                CASE WHEN Frame = NULL AND Architrave != NULL THEN Architrave \\n                     WHEN Architrave = NULL AND Shutter != NULL THEN Shutter\\n                     WHEN Shutter = NULL AND Architrave != NULL THEN Architrave ELSE Frame END AS DATE_WISE_SPLIT \\n--INTO F_WOODEN_DOOR\\n FROM (\\nSELECT               SC_NAME,\\n                    SC_Short,\\n                    --DMPF.project_id,\\n                    DI.sbu_id,\\n                    Value_Total,\\n                    CAST (DI.upload_time AS DATE) AS Upload_Date,\\n                DI.project_id AS project_id,\\n                DI.tower,\\n                DI.Building,\\n                DI.[Type],\\n                DI.[Level],\\n                DI.[Flat_No],\\n                DENSE_RANK () OVER(PARTITION BY  DI.project_id ORDER BY  CAST(DI.upload_time AS DATE) DESC) D_RANK,\\n                NULLIF (TRIM(DI.[Flat_No_A]),\\'\\') AS \\'Flat_No_A\\',\\n                NULLIF (TRIM(DI.[Door_Type]),\\'\\') AS \\'Door_Type\\',\\n                NULLIF (TRIM(DI.[Jamb_Width]),\\'\\') AS \\'Jamb_Width\\',\\n                NULLIF (TRIM(DI.Orientation),\\'\\') AS Orientation,\\n                NULLIF (TRIM(DI.[Door_Id]),\\'\\') AS \\'Door_Id\\',\\n                NULLIF (TRIM(DI.[Fire_Rating]),\\'\\') AS \\'Fire_Rating\\',\\n                NULLIF (TRIM(DI.Frame),\\'\\') AS Frame,\\n                NULLIF (TRIM(DI.Foam),\\'\\') AS Foam,\\n                NULLIF (TRIM(DI.Architrave),\\'\\') AS Architrave,\\n                NULLIF (TRIM(DI.Shutter),\\'\\') AS Shutter,\\n                NULLIF (TRIM(DI.Ironmongery),\\'\\') AS Ironmongery,\\n                NULLIF (TRIM(DI.Installer),\\'\\') AS Installer\\nFROM (\\nSELECT     DMP.SC_NAME,\\n            DMP.SC_Short,\\n            DMP.project_id,\\n            SUM(CAST(DMP.value AS INT)) AS Value_Total\\n                \\n     FROM (   \\n            SELECT CAST(ddm.upload_time AS DATE) AS Upload_Date,\\n            ddm.project_id,\\n            ddm.tower,\\n            ddm.sbu_id,\\n            ddm.[Date],\\n            OPDM.SC_NAME,\\n            OPDM.SC_Short,\\n            Column_Name.SCC,\\n               CASE \\n                WHEN TRIM(Column_Name.value) IN (\\'-\\',\\'\\') THEN NULL\\n                ELSE Column_Name.value\\n            END AS value,\\n            DENSE_RANK () OVER (PARTITION BY ddm.project_id ORDER BY  CAST(ddm.upload_time AS DATE) DESC) DRANK\\n        FROM STG.O_PLN_DOOR_MANPOWER_STG  ddm\\n        CROSS apply  (     \\n                            SELECT  [SC1] , \\'SC1\\' \\n                  UNION ALL SELECT  [SC2],\\'SC2\\'\\n                  UNION ALL SELECT  [SC3],\\'SC3\\'\\n                  UNION ALL SELECT  [SC4],\\'SC4\\'\\n                  UNION ALL SELECT  [SC5],\\'SC5\\'\\n                  UNION ALL SELECT  [SC6],\\'SC6\\'\\n                  UNION ALL SELECT  [SC7],\\'SC7\\'\\n                  UNION ALL SELECT  [SC8],\\'SC8\\'\\n                  UNION ALL SELECT  [SC9],\\'SC9\\'\\n                  UNION ALL SELECT  [SC10],\\'SC10\\'\\n                  UNION ALL SELECT  [SC11],\\'SC11\\'\\n                  UNION ALL SELECT  [SC12],\\'SC12\\'\\n                  UNION ALL SELECT  [SC13],\\'SC13\\'\\n                  UNION ALL SELECT  [SC14],\\'SC14\\'\\n                  UNION ALL SELECT  [SC15],\\'SC15\\'\\n                  UNION ALL SELECT  [SC16],\\'SC16\\'\\n                  UNION ALL SELECT  [SC17],\\'SC17\\'\\n                  UNION ALL SELECT  [SC18],\\'SC18\\'\\n                  UNION ALL SELECT  [SC19],\\'SC19\\'\\n                  UNION ALL SELECT  [SC20],\\'SC20\\'\\n                            )AS Column_Name (value,SCC)\\n               \\n    INNER JOIN STG.O_PLN_DOORMANPOWER_MAP_STG OPDM\\n    ON Column_Name.SCC = OPDM.SC\\n    AND ddm.project_id = OPDM.project_id\\n    WHERE OPDM.SC_Short != (\\'\\')\\n     ) DMP\\n     \\n     WHERE DRANK = 1 \\n     GROUP BY DMP.SC_NAME,DMP.SC_Short,DMP.project_id\\n     ) DMPF RIGHT JOIN STG.O_PLN_DOOR_INSTALLATION_RAW_STG DI\\n          ON DI.Installer = DMPF.SC_Short\\n         AND DI.project_id = DMPF.project_id\\n     WHERE [Door_Id] NOT IN (\\'\\',\\'NULL\\') \\n    AND [Flat_No] NOT IN (\\'\\',\\'NULL\\')\\n     ) SORT\\n     LEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          SORT.[LEVEL] = LM.[LEVEL]\\n     LEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          SORT.PROJECT_ID=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          SORT.SBU_ID=SM.SBU_IDENTIFIER\\n     WHERE D_RANK = 1',",
						"     format: 'query',",
						"     staged: true) ~> source1",
						"source1 keyGenerate(output(SurrogateKey_ID as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
						"          LoadDateTime = currentUTC()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Upload_Date as date,",
						"          project_id as string,",
						"          SBU_Id as integer,",
						"          Level_ID as integer,",
						"          Project_Identifier as string,",
						"          tower as string,",
						"          Building as string,",
						"          Type as string,",
						"          Level as string,",
						"          Flat_No as string,",
						"          Door_Type as string,",
						"          Jamb_Width as string,",
						"          Orientation as string,",
						"          Door_Id as string,",
						"          Fire_Rating as string,",
						"          Frame as string,",
						"          Foam as string,",
						"          Architrave as string,",
						"          Shutter as string,",
						"          Ironmongery as string,",
						"          Installer as string,",
						"          level_map as integer,",
						"          Total as string,",
						"          SC_Short as string,",
						"          SC_NAME as string,",
						"          DATE_WISE_SPLIT as string,",
						"          LoadDateTime as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_WOODEN_DOOR_FACT]'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id = ID,",
						"          Upload_Date,",
						"          project_id = PROJECT_ID,",
						"          SBU_Id = SBU_ID,",
						"          Level_ID = LEVEL_ID,",
						"          Project_Identifier = PROJECT_IDENTIFIER,",
						"          tower,",
						"          Building,",
						"          Type,",
						"          Level,",
						"          Flat_No,",
						"          Door_Type,",
						"          Jamb_Width,",
						"          Orientation,",
						"          Door_Id,",
						"          Fire_Rating,",
						"          Frame,",
						"          Foam,",
						"          Architrave,",
						"          Shutter,",
						"          Ironmongery,",
						"          Installer,",
						"          level_map = Level,",
						"          Total,",
						"          SC_Short,",
						"          SC_NAME,",
						"          DATE_WISE_SPLIT,",
						"          LoadDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_O_PLN_DOORMANPOWER_MAP_STG_TRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_WOODEN_DOOR_FACT_TRG')]"
			]
		}
	]
}