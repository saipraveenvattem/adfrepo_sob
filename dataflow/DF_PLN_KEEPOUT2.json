{
	"name": "DF_PLN_KEEPOUT2",
	"properties": {
		"folder": {
			"name": "DWH/Facts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_O_PLN_KEEPOUT_DETAILED_RAW_STG_TRG",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "Import data from DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_PLN_KEEPOUT2_TRG",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"description": "Export data to DS_DOOR_DELIVERY_M_TRG"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     MAX_ID as integer (0)",
				"}",
				"source(output(",
				"          Date as date,",
				"          project_id as integer,",
				"          PROJECT_IDENTIFIER as string,",
				"          Tower as string,",
				"          Level as string,",
				"          Flat_No as string,",
				"          SBU_ID as integer,",
				"          Apartment_Type as string,",
				"          ACTIVITY_ID as integer,",
				"          Engineer_Responsible as string,",
				"          Activity as string,",
				"          delay_pln as date,",
				"          Plan as date,",
				"          Count_Pln as integer,",
				"          Predecessor_Plan as date,",
				"          Predecessor_Plan_Work_Front as date,",
				"          Predecessor as string,",
				"          delay_act as date,",
				"          Actual as date,",
				"          Count_act as integer,",
				"          Predecessor_Actual as date,",
				"          Predecessor_Actual_Work_Front as date,",
				"          SLA_Planned as integer,",
				"          SLA_Actual as integer,",
				"          SLA as string,",
				"          Actual_SLA_Title as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT \\n    Upload_Date AS Date,\\n    P.Sort_ID as project_id,\\n    P.PROJECT_IDENTIFIER ,\\n    tower AS Tower,\\n    Level,\\n    Flat_No,\\n    SM.[SBU_Map_ID] as SBU_ID,\\n    Apartment_Type,\\n    ACTIVITY_ID,\\n    ENGINEER_RESPONSIBLE AS Engineer_Responsible,\\n    Types_of_Activities AS Activity,\\n    delay_pln\\n       ,value_plan AS [Plan]\\n       ,Count_Pln,\\n    Predes_value_plan AS Predecessor_Plan,\\n    CASE \\n        WHEN TRIM(Predecessor_Activities) IN (\\'FROM CTE 1\\',\\'FROM CTE 2\\') AND Count_Pln = 1 THEN value_plan \\n        WHEN TRIM(Predecessor_Activities) IN (\\'FROM CTE 1\\',\\'FROM CTE 2\\') AND Count_Pln != 1 THEN NULL\\n        ELSE Predes_value_plan\\n    END AS Predecessor_Plan_Work_Front,\\n    Predecessor_Activities AS Predecessor,\\n    delay_act,\\n    value_act AS Actual,\\n    Count_act,\\n    Predes_value_act AS [Predecessor_Actual],\\n    CASE\\n        WHEN TRIM(Predecessor_Activities) IN (\\'FROM CTE 1\\',\\'FROM CTE 2\\') AND Count_Act = 1 THEN value_act\\n        WHEN TRIM(Predecessor_Activities) IN (\\'FROM CTE 1\\',\\'FROM CTE 2\\') AND Count_Act != 1 THEN NULL\\n        ELSE Predes_value_act\\n    END AS [Predecessor_Actual_Work_Front],\\n    CASE WHEN Planned_SLA <= 0 THEN 0 ELSE Planned_SLA END AS SLA_Planned,\\n    CASE WHEN Actual_SLA <= 0 THEN 0 ELSE Actual_SLA END AS SLA_Actual,\\n    Given_SLA AS SLA,\\n     CASE \\n            WHEN Actual_SLA <= 0 THEN     \\'<= 0\\'\\n            WHEN Actual_SLA = 1 THEN     \\'= 1\\'\\n            WHEN Actual_SLA = 2 THEN     \\'= 2\\'\\n            WHEN Actual_SLA = 3 THEN     \\'= 3\\'\\n            WHEN Actual_SLA = 4 THEN     \\'= 4\\'\\n            WHEN Actual_SLA = 5 THEN     \\'= 5\\'\\n            WHEN Actual_SLA = 6 THEN     \\'= 6\\'\\n            WHEN Actual_SLA = 7 THEN     \\'= 7\\'\\n            WHEN Actual_SLA > 7 THEN     \\'> 7\\'\\n            ELSE NULL\\n        END AS Actual_SLA_Title\\nFROM [DWH].[PLN_VALIDATION_DATA_OUTPUT_FINAL_B_VIEW] PP\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          PP.Project_id=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          PP.SBU_ID=SM.SBU_IDENTIFIER\\n\\n',",
				"     format: 'query',",
				"     staged: true) ~> source1",
				"source1 keyGenerate(output(SurrogateKey_ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
				"          LoadDateTime = currentUTC()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          Date as date,",
				"          project_id as integer,",
				"          Project_Identifier as string,",
				"          Tower as string,",
				"          Level as string,",
				"          Flat_No as string,",
				"          SBU_ID as integer,",
				"          Apartment_Type as string,",
				"          ACTIVITY_ID as integer,",
				"          Engineer_Responsible as string,",
				"          Activity as string,",
				"          delay_pln as date,",
				"          Plan as date,",
				"          Count_Pln as integer,",
				"          Predecessor_Plan as date,",
				"          Predecessor_Plan_Work_Front as date,",
				"          Predecessor as string,",
				"          delay_act as date,",
				"          Actual as date,",
				"          Count_Act as integer,",
				"          Predecessor_Actual as date,",
				"          Predecessor_Actual_Work_Front as date,",
				"          SLA_Planned as integer,",
				"          SLA_Actual as integer,",
				"          SLA as string,",
				"          Actual_SLA_Title as string,",
				"          LoadDateTime as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['TRUNCATE TABLE  DWH.PLN_KEEPOUT_2_FACT '],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Id = ID,",
				"          Date,",
				"          project_id,",
				"          Project_Identifier = PROJECT_IDENTIFIER,",
				"          Tower,",
				"          Level,",
				"          Flat_No,",
				"          SBU_ID,",
				"          Apartment_Type,",
				"          ACTIVITY_ID,",
				"          Engineer_Responsible,",
				"          Activity,",
				"          delay_pln,",
				"          Plan,",
				"          Count_Pln,",
				"          Predecessor_Plan,",
				"          Predecessor_Plan_Work_Front,",
				"          Predecessor,",
				"          delay_act,",
				"          Actual,",
				"          Count_Act = Count_act,",
				"          Predecessor_Actual,",
				"          Predecessor_Actual_Work_Front,",
				"          SLA_Planned,",
				"          SLA_Actual,",
				"          SLA,",
				"          Actual_SLA_Title,",
				"          LoadDateTime",
				"     )) ~> sink1"
			]
		}
	}
}