{
	"name": "DF_PLN_WATERROOM",
	"properties": {
		"folder": {
			"name": "DWH/Facts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_O_PLN_WATERROOM_RAW_STG_TRG",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "Import data from DS_O_PLN_WATERROOM_RAW_STG_TRG"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_PLN_WATERROOM_TRG",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"description": "Export data to DS_PLN_WATERROOM_TRG"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     MAX_ID as integer (0)",
				"}",
				"source(output(",
				"          PROJECT_ID as integer,",
				"          LEVEL_ID as integer,",
				"          SBU_ID as integer,",
				"          PROJECT_IDENTIFIER as string,",
				"          tower as string,",
				"          Level as string,",
				"          ACTIVITY_ID as integer,",
				"          Sclicer as string,",
				"          value as string,",
				"          Type_of_work as string,",
				"          CATEGORY as string,",
				"          Upload_Date as date",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT \\n     P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    P.PROJECT_IDENTIFIER ,\\n     WR.tower    ,\\n    WR.[Level]    ,\\n    WR.ACTIVITY_ID    ,\\n    \\'Water Room\\' as Sclicer,\\n    CASE \\n        WHEN WR.value IN (\\'\\',\\'NA\\') THEN \\'0%\\'\\n        ELSE WR.value\\n    END AS value,\\n    WR.Type_of_work    ,\\n    WR.CATEGORY    ,\\n    WR.Upload_Date \\n\\nFROM (\\n        SELECT CAST(O_PLN_WATERROOM_RAW.upload_time AS DATE) AS Upload_Date,\\n        O_PLN_WATERROOM_RAW.project_id,\\n        O_PLN_WATERROOM_RAW.tower,\\n        O_PLN_WATERROOM_RAW.[Level],\\n        Column_Name.*,\\n        O_PLN_WATERROOM_MAP.ACTIVITY_ID,\\n        O_PLN_WATERROOM_MAP.SBU_ID,\\n        O_PLN_WATERROOM_MAP.CATEGORY,\\n        DENSE_RANK () OVER     (PARTITION BY  project_id\\n                            ORDER BY  CAST(upload_time AS DATE) DESC\\n                            )     Project_Udate_DRANK\\n    from STG.O_PLN_WATERROOM_RAW_STG   O_PLN_WATERROOM_RAW\\n    CROSS APPLY  (\\n                SELECT  [Blockwork_Layout]  ,     \\'Blockwork Layout\\'  \\n   UNION ALL SELECT          [Blockwork]  ,        \\'Blockwork\\'  \\n   UNION ALL SELECT          [MEP_Marking_for_Builders_Work]  ,        \\'MEP Marking for Builders Work\\'  \\n   UNION ALL SELECT          [Cutting_AND_Chasing_of_Blockwork]  ,        \\'Cutting & Chasing of Blockwork\\'  \\n   UNION ALL SELECT          [MEP_Services_Installation]  ,        \\'MEP Services Installation\\'  \\n   UNION ALL SELECT          [Wall_MEP_Services_Packing]  ,        \\'Wall MEP Services Packing\\'  \\n   UNION ALL SELECT          [Plaster]  ,        \\'Plaster\\'  \\n   UNION ALL SELECT          [Core_Cutting_and_Chipping]  ,        \\'Core Cutting & Chipping\\'  \\n   UNION ALL SELECT          [MEP_Sleeve_Installation]  ,        \\'MEP Sleeve Installation\\'  \\n   UNION ALL SELECT          [Bore_Packing]  ,        \\'Bore Packing\\'  \\n   UNION ALL SELECT          [Screed]  ,        \\'Screed\\'  \\n   UNION ALL SELECT          [Wall_Primer]  ,        \\'Wall Primer\\'  \\n   UNION ALL SELECT          [Wall_Stucco_1st_and_2nd_Coat]  ,        \\'Wall Stucco (1st and 2nd Coat)\\'  \\n   UNION ALL SELECT          [Wall_First_Coat_Paint]  ,        \\'Wall First Coat Paint\\'  \\n   UNION ALL SELECT          [Installation_of_PPR_pipes]  ,        \\'Installation of PPR pipes\\'  \\n   UNION ALL SELECT          [Manifold_and_Valve_installation]  ,        \\'Manifold & Valve installation\\'  \\n   UNION ALL SELECT          [PRV_installation_and_connections]  ,        \\'PRV installation & connections\\'  \\n   UNION ALL SELECT          [Testing_of_Pipes]  ,        \\'Testing of Pipes\\'  \\n   UNION ALL SELECT          [Fire_Sealant_Works]  ,        \\'Fire Sealant Works\\'  \\n   UNION ALL SELECT          [MEP_Framing_Clearance]  ,        \\'MEP Framing Clearance\\'  \\n   UNION ALL SELECT          [False_Ceiling_Framing]  ,        \\'False Ceiling Framing\\'  \\n   UNION ALL SELECT          [MEP_Boarding_Clearance]  ,        \\'MEP Boarding Clearance\\'  \\n   UNION ALL SELECT          [False_Ceiling_Boarding]  ,        \\'False Ceiling Boarding\\'  \\n   UNION ALL SELECT          [Ceiling_Primer]  ,        \\'Ceiling Primer\\'  \\n   UNION ALL SELECT          [Ceiling_Stucco_1st_and_2nd_Coat]  ,        \\'Ceiling Stucco (1st and 2nd Coat)\\'  \\n   UNION ALL SELECT          [First_Coat_Paint]  ,        \\'First Coat Paint\\'  \\n   UNION ALL SELECT          [Threshold]  ,        \\'Threshold\\'  \\n   --UNION ALL SELECT          [Floor Tile]  ,        \\'Floor Tile\\'  \\n   UNION ALL SELECT          [Door_Frame_Installation]  ,        \\'Door-Frame Installation\\'  \\n   UNION ALL SELECT          [Door_Architrave_Installation]  ,        \\'Door-Architrave Installation\\'  \\n   UNION ALL SELECT          [Door_Shutter_Installation]  ,        \\'Door-Shutter Installation\\'  \\n   UNION ALL SELECT          [Door_Ironmongery_Installation]  ,        \\'Door-Ironmongery Installation\\'  \\n   --UNION ALL SELECT          [Door-Silicone]  ,        \\'Door-Silicone\\'  \\n   UNION ALL SELECT          [Epoxy_Grinding]  ,        \\'Epoxy Grinding\\'  \\n   UNION ALL SELECT          [Epoxy_Bug_Fill]  ,        \\'Epoxy Bug Fill\\'  \\n   UNION ALL SELECT          [Epoxy_Primer]  ,        \\'Epoxy Primer\\'  \\n   UNION ALL SELECT          [Epoxy_First_Coat]  ,        \\'Epoxy First Coat\\'  \\n   UNION ALL SELECT          [Epoxy_Final_Coat]  ,        \\'Epoxy Final Coat\\'  \\n   UNION ALL SELECT          [Skirting]  ,        \\'Skirting\\'  \\n   UNION ALL SELECT          [POP_Works]  ,        \\'POP Works\\'  \\n   UNION ALL SELECT          [Grouting]  ,        \\'Grouting\\'  \\n   UNION ALL SELECT          [Silicone]  ,        \\'Silicone\\'  \\n   --UNION ALL SELECT          [Signage]  ,        \\'Signage\\'  \\n   UNION ALL SELECT          [MEP_Final_Fixtures]  ,        \\'MEP Final Fixtures\\'  \\n   UNION ALL SELECT          [PSV_Installation]  ,        \\'Pressure Safety Valve Installation\\'  \\n   UNION ALL SELECT          [Water_Meter_Installation]  ,        \\'Water Meter Installation\\'  \\n   UNION ALL SELECT          [Final_Coat_Paint]       ,   \\'Final Coat Paint\\'\\n    )\\n        as Column_Name (value,Type_of_work)\\n          \\n    JOIN [STG].[O_PLN_WATERROOM_MAP_STG]  O_PLN_WATERROOM_MAP\\n    ON Column_Name.Type_of_work = O_PLN_WATERROOM_MAP.ACTIVITY_SEQUENCE\\n    WHERE value IS NOT NULL\\n     ) WR\\n\\nINNER JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          WR.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          WR.PROJECT_ID=P.PROJECT_IDENTIFIER \\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          WR.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          WR.Project_Udate_DRANK = 1',",
				"     format: 'query',",
				"     staged: true) ~> source1",
				"source1 keyGenerate(output(SurrogateKey_ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
				"          LoadDateTime = currentUTC()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          Project_ID as integer,",
				"          Project_Identifier as string,",
				"          SBU_ID as integer,",
				"          Level_ID as integer,",
				"          Tower as string,",
				"          Level as string,",
				"          Sclicer as string,",
				"          Activity_ID as integer,",
				"          Value as string,",
				"          Type_of_work as string,",
				"          Category as string,",
				"          Update_Date as date,",
				"          LoadDateTime as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_WATERROOM_FACT];'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID,",
				"          Project_ID = PROJECT_ID,",
				"          Project_Identifier = PROJECT_IDENTIFIER,",
				"          SBU_ID,",
				"          Level_ID = LEVEL_ID,",
				"          Tower = tower,",
				"          Level,",
				"          Sclicer,",
				"          Activity_ID = ACTIVITY_ID,",
				"          Value = value,",
				"          Type_of_work,",
				"          Category = CATEGORY,",
				"          Update_Date = Upload_Date,",
				"          LoadDateTime",
				"     )) ~> sink1"
			]
		}
	}
}