{
	"name": "DF_PLN_STRUCTURE",
	"properties": {
		"folder": {
			"name": "DWH/Facts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_PLN_STRACTURE_FACT_TEMP",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_PLN_STRACTURE_FACT_TRG",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "LS_AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     MAX_ID as integer (0)",
				"}",
				"source(output(",
				"          Upload_Date as date,",
				"          Proect_Identifier as string,",
				"          Area as string,",
				"          Level_Id as integer,",
				"          sbu_id as string,",
				"          LEVEL as string,",
				"          Pour_count as string,",
				"          POUR as string,",
				"          Sequence_of_Appearance as integer,",
				"          value as date,",
				"          project_id as integer,",
				"          Next_Date as date,",
				"          Avg_days as integer,",
				"          View_Map as integer,",
				"          value_Average as integer",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select  a.Upload_Date,  a.Project_id as Proect_Identifier, a.Area, c.LEVEL_MAP_ID AS Level_Id, a.sbu_id,\\n        a.LEVEL, a.Pour_count, a.POUR, a.Sequence_of_Appearance,\\n        a.VALUE as value,a.Sort_ID as project_id, b.Next_Date, b.AVG_DAYS as Avg_days,\\n        CASE \\n            WHEN a.AREA = \\'Tower\\' THEN     1\\n            WHEN a.AREA = \\'Podium\\' THEN     2\\n            WHEN a.AREA = \\'Podium-TA\\' THEN 3\\n            WHEN a.AREA = \\'Tower A\\' THEN     4\\n            WHEN a.AREA = \\'Podium-TB\\' THEN 5\\n            WHEN a.AREA = \\'Tower B\\' THEN     6\\n            WHEN a.AREA = \\'Tower C\\' THEN     7\\n            WHEN a.AREA = \\'Tower D\\' THEN     8\\n        ELSE NULL\\n        END AS View_Map,\\n        CASE WHEN a.VALUE < GETDATE() THEN 1 ELSE 0 END AS value_Average from \\n(select * from STG.O_PLN_STRUCTURE_POURING_STG1) a\\nleft join\\n(select a.Project_Identifier, a.AREA,a.LEVEL, a.POUR,a.VALUE,\\n    LAG(a.VALUE) over(partition by a.Project_Identifier,a.Pour order by a.Pour,value) as Next_Date,\\n    DATEDIFF(day,LAG(a.VALUE) OVER(PARTITION BY a.Project_Identifier ,a.POUR ORDER BY a.POUR,a.VALUE),a.VALUE) AS AVG_DAYS from\\n     (select * from STG.O_PLN_STRUCTURE_POURING_STG1 where LOWER(POUR) like \\'slab%\\'  AND LOWER(LEVEL) NOT LIKE \\'grade%\\') a) b\\nON a.Project_Identifier = b.Project_Identifier AND a.Pour = b.Pour AND a.VALUE = b.value\\nleft join\\n(select * from DWH.PLN_LEVEL_MAP_ALL_DIM) c ON  a.LEVEL = c.LEVEL',",
				"     format: 'query',",
				"     staged: true) ~> source1",
				"source1 keyGenerate(output(SurrogateKey_ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
				"          LoadDateTime = currentUTC()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          Id as integer,",
				"          Upload_Date as date,",
				"          Project_Identifier as string,",
				"          Project_Id as string,",
				"          Level_Id as integer,",
				"          Sbu_id as integer,",
				"          Area as string,",
				"          Level as string,",
				"          Pour_count as string,",
				"          Pour as string,",
				"          Sequence_of_Appearance as integer,",
				"          value as string,",
				"          Next_Date as string,",
				"          Avg_days as integer,",
				"          View_Map as integer,",
				"          value_Average as integer,",
				"          LoadDateTime as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_STRUCTURE_FACT];'],",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Id = ID,",
				"          Upload_Date,",
				"          Level_Id,",
				"          Area,",
				"          Level = LEVEL,",
				"          Pour_count,",
				"          Pour = POUR,",
				"          Sequence_of_Appearance,",
				"          Avg_days,",
				"          View_Map,",
				"          value_Average,",
				"          LoadDateTime,",
				"          Project_Id = project_id",
				"     )) ~> sink1"
			]
		}
	}
}