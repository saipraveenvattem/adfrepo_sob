{
	"name": "DF_PLN_CORRIDOR",
	"properties": {
		"folder": {
			"name": "DWH/Facts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_O_PLN_CORRIDOR_RAW_STG_TRG",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_PLN_CORRIDOR_TRG",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     MAX_ID as integer (0)",
				"}",
				"source(output(",
				"          PROJECT_ID as integer,",
				"          LEVEL_ID as integer,",
				"          SBU_ID as integer,",
				"          TOWER as string,",
				"          Activity_Id as integer,",
				"          PROJECT_IDENTIFIER as string,",
				"          LEVEL as string,",
				"          Scilicer as string,",
				"          value as integer,",
				"          TYPE_OF_WORK as string,",
				"          CATEGORY as string,",
				"          CATEGORY_SORT as integer,",
				"          UPLOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT \\n    P.Sort_ID as PROJECT_ID,\\n    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n    SM.SBU_MAP_ID AS SBU_ID,\\n    A.TOWER    ,\\n     A.Activity_Id,\\n     P.PROJECT_IDENTIFIER,\\n     A.LEVEL,\\n     \\'Corridor\\' as Scilicer,\\n  --CASE\\n  --          WHEN TRIM(A.value) IN (\\'\\',\\'-\\',\\'0%\\',\\'00%\\') THEN 0\\n  --          WHEN A.value IS NOT NULL AND TRIM(A.value) NOT IN (\\'\\',\\'-\\',\\'0%\\',\\'00%\\') THEN 1\\n  --          ELSE 0\\n  --      END AS value,\\n  \\n  CAST(REPLACE(CASE     WHEN TRIM(A.value) IN (\\'\\',\\'NA\\') THEN \\'0%\\' else TRIM(A.value) end, \\'%\\', \\'\\') AS Decimal)/100 AS value,\\n\\n    A.TYPE_OF_WORK    ,\\n    A.CATEGORY   ,\\n\\n          CASE \\n            WHEN TRIM(A.CATEGORY) IN(\\'BUILDERS WORK\\') THEN  2\\n            WHEN TRIM(A.CATEGORY) IN(\\'MEP\\') THEN  12\\n            WHEN TRIM(A.CATEGORY) IN(\\'PLASTER\\') THEN  3\\n            WHEN TRIM(A.CATEGORY) IN(\\'SCREED\\') THEN  5\\n            WHEN TRIM(A.CATEGORY) IN(\\'TILE\\') THEN  9\\n            WHEN TRIM(A.CATEGORY) IN(\\'MARBLE\\') THEN  10\\n            WHEN TRIM(A.CATEGORY) IN(\\'FACADE\\') THEN  11\\n            WHEN TRIM(A.CATEGORY) IN(\\'GYAUM\\') THEN  6\\n            WHEN TRIM(A.CATEGORY) IN(\\'PAINT\\') THEN  8\\n            ELSE 20\\n        END AS CATEGORY_SORT,\\n    A.UPLOAD_DATE  \\n         \\nFROM\\n(\\n        SELECT CAST(O_PLN_CORRIDOR_RAW.UPLOAD_TIME AS DATE) AS UPLOAD_DATE,\\n        O_PLN_CORRIDOR_RAW.PROJECT_ID,\\n        O_PLN_CORRIDOR_RAW.TOWER,\\n        O_PLN_CORRIDOR_RAW.LEVEL,\\n     COLUMN_NAME.* ,\\n        \\'CORRIDOR\\' AS SCLICER,\\n       \\n        O_PLN_CORRIDOR_MAP.ACTIVITY_ID,\\n        O_PLN_CORRIDOR_MAP.SBU_ID,\\n        O_PLN_CORRIDOR_MAP.CATEGORY,\\n\\n        DENSE_RANK () OVER     (PARTITION BY  PROJECT_ID\\n                            ORDER BY  CAST(UPLOAD_TIME AS DATE) DESC\\n                            )     PROJECT_UDATE_DRANK\\n FROM [STG].[O_PLN_CORRIDOR_RAW_STG]  O_PLN_CORRIDOR_RAW\\nCROSS APPLY (\\n\\nSELECT     CORRIDOR_MEP_MARKING_FOR_BUILDERS_WORK     ,     \\'Corridor MEP Marking for Builders Work\\'\\nUNION ALL SELECT CORRIDOR_CUTTING_AND_CHASING_OF_BLOCKWORK     ,    \\'Corridor Cutting & Chasing of Blockwork\\'\\nUNION ALL SELECT CORRIDOR_MEP_SERVICES_INSTALLATION     ,     \\'Corridor MEP Services Installation\\'\\nUNION ALL SELECT CORRIDOR_WALL_MEP_SERVICES_PACKING     ,     \\'Corridor Wall MEP Services Packing\\'\\nUNION ALL SELECT CORRIDOR_PLASTER     ,     \\'Corridor Plaster\\'\\nUNION ALL SELECT CORRIDOR_SCREED     ,     \\'Corridor Screed\\'\\nUNION ALL SELECT GRINDING_CLEARANCE_FOR_TILE     ,     \\'Grinding Clearance for Tile\\'\\nUNION ALL SELECT TILE_MARKING     ,    \\'Tile Marking\\'\\nUNION ALL SELECT BULL_MARKING     ,     \\'Bull Marking\\'\\nUNION ALL SELECT ELECTRICAL_CONDUITS     ,     \\'Electrical Conduits\\'\\nUNION ALL SELECT COLD_WATER_SUPPLY     ,     \\'Cold water supply\\'\\nUNION ALL SELECT FIRE_FIGHTING_PIPE_SUPPORT     ,     \\'Fire Fighting Pipe Support\\'\\nUNION ALL SELECT MODULAR_INSTALATION     ,    \\'Modular Instalation\\'\\nUNION ALL SELECT FRAMING_CLEARANCE_BY_MEP     ,     \\'Framing Clearance by MEP\\'\\nUNION ALL SELECT CENTER_LINE_MARKING_FOR_FACADE_INSTALLATION     ,     \\'Center line marking for Facade Installation\\'\\nUNION ALL SELECT CORRIDOR_CURTAIN_WALL_BOX_INSTALLATION     ,    \\'Corridor Curtain Wall Box Installation\\'\\nUNION ALL SELECT CORRIDOR_CURTAIN_WALL_FRAME_INSTALLATION     ,    \\'Corridor Curtain Wall Frame Installation\\'\\nUNION ALL SELECT CORRIDOR_CURTAIN_WALL_GLASS_INSTALLATION     ,     \\'Corridor Curtain Wall Glass Installation\\'\\nUNION ALL SELECT CORRIDOR_CURTAIN_WALL_FLASHING_INSTALLATION     ,    \\'Corridor Curtain Wall Flashing Installation\\'\\nUNION ALL SELECT CORRIDOR_FLOOR_TILE     ,    \\'Corridor Floor Tile\\'\\nUNION ALL SELECT CORRIDOR_WALL_TILE     ,          \\'Corridor Wall Tile\\'\\nUNION ALL SELECT FIRE_HOSE_REEL_CABINET_INSTALLATION     ,     \\'Fire Hose Reel Cabinet Installation\\'\\nUNION ALL SELECT GROUTING_FOR_FRAMING_CLEARANCE     ,     \\'Grouting for Framing Clearance\\'\\nUNION ALL SELECT CORRIDOR_FC_FRAMING     ,     \\'Corridor FC Framing\\'\\nUNION ALL SELECT MEP_ACCESS_PANEL_MARKINGS_AND_INSPECTION     ,     \\'MEP Access Panel Markings & Inspection\\'\\nUNION ALL SELECT MEP_WORKS_FOR_BOARDING_CLEARANCE     ,    \\'MEP Works for Boarding Clearance \\'\\nUNION ALL SELECT FRAMING_LEVELLING     ,     \\'Framing Levelling\\'\\nUNION ALL SELECT CORRIDOR_FC_BOARDING     ,     \\'Corridor FC Boarding\\'\\nUNION ALL SELECT JOINT_TAPING_AND_SANDING     ,    \\'Joint Taping & Sanding\\'\\nUNION ALL SELECT CORRIDOR_CEILING_PRIMER     ,     \\'Corridor Ceiling Primer\\'\\nUNION ALL SELECT CORRIDOR_CEILING_STUCCO_1ST_AND_2ND_COAT     ,     \\'Corridor Ceiling Stucco (1st and 2nd Coat)\\'\\nUNION ALL SELECT CORRIDOR_CEILING_FIRST_COAT_PAINT     ,    \\'Corridor Ceiling First Coat Paint\\'\\nUNION ALL SELECT CORRIDOR_GROUTING     ,     \\'Corridor Grouting\\'\\nUNION ALL SELECT CORRIDOR_SILICONE     ,     \\'Corridor Silicone\\'\\nUNION ALL SELECT LEFT_OVER_SCREED     ,    \\'Left over Screed\\'\\nUNION ALL SELECT LEFT_OVER_AREA_FLOOR_TILE     ,    \\'Left Over Area Floor Tile\\'\\nUNION ALL SELECT LEFT_OVER_AREA_WALL_TILE     ,    \\'Left Over Area Wall Tile\\'\\nUNION ALL SELECT REMAINING_GROUT_AND_SILICONE_WORKS     ,     \\'Remaining Grout and Silicone Works\\'\\nUNION ALL SELECT CORRIDOR_MEP_FINAL_FIXTURES     ,    \\'Corridor MEP Final Fixtures\\'\\nUNION ALL SELECT CORRIDOR_FINAL_COAT_PAINT     ,    \\'Corridor Final Coat Paint\\'          \\n)AS COLUMN_NAME(VALUE,TYPE_OF_WORK)\\n   JOIN [STG].[O_PLN_CORRIDOR_MAP_STG]  O_PLN_CORRIDOR_MAP\\n    ON TRIM(COLUMN_NAME.TYPE_OF_WORK) = TRIM(O_PLN_CORRIDOR_MAP.ACTIVITY_SEQUENCE)\\n    WHERE VALUE IS NOT NULL) A\\n   \\n   INNER JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM]  LM\\n     ON          A.[LEVEL] = LM.[LEVEL]\\nLEFT JOIN [DWH].[PROJECTS_NEW_DIM] P\\n      ON          A.PROJECT_ID=P.PROJECT_IDENTIFIER\\nLEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          A.SBU_ID=SM.SBU_IDENTIFIER\\nWHERE          A.PROJECT_UDATE_DRANK = 1\\n',",
				"     format: 'query',",
				"     staged: true) ~> source1",
				"source1 keyGenerate(output(SurrogateKey_ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
				"          LoadDateTime = currentUTC()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          Project_ID as integer,",
				"          Project_Identifier as string,",
				"          SBU_ID as integer,",
				"          Level_ID as integer,",
				"          Tower as string,",
				"          Level as string,",
				"          Scilicer as string,",
				"          Activity_ID as integer,",
				"          Value as decimal(14,4),",
				"          Type_of_work as string,",
				"          Category as string,",
				"          Category_Sort as string,",
				"          Update_Date as date,",
				"          LoadDateTime as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['TRUNCATE TABLE DWH.PLN_CORRIDOR_FACT;'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID,",
				"          Project_ID = PROJECT_ID,",
				"          Project_Identifier = PROJECT_IDENTIFIER,",
				"          SBU_ID,",
				"          Level_ID = LEVEL_ID,",
				"          Tower = TOWER,",
				"          Level = LEVEL,",
				"          Scilicer,",
				"          Activity_ID = Activity_Id,",
				"          Value = value,",
				"          Type_of_work = TYPE_OF_WORK,",
				"          Category = CATEGORY,",
				"          Category_Sort = CATEGORY_SORT,",
				"          Update_Date = UPLOAD_DATE,",
				"          LoadDateTime",
				"     )) ~> sink1"
			]
		}
	}
}