{
	"name": "DF_WOODEN_DOOR",
	"properties": {
		"folder": {
			"name": "DWH/Facts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_O_PLN_DOORMANPOWER_MAP_STG_TRG",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "Import data from DS_O_PLN_DOOR_DELIVERY_RAW_STG_TRG"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_WOODEN_DOOR_FACT_TRG",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     MAX_ID as integer (0)",
				"}",
				"source(output(",
				"          Upload_Date as date,",
				"          PROJECT_ID as integer,",
				"          LEVEL_ID as integer,",
				"          SBU_ID as integer,",
				"          PROJECT_IDENTIFIER as string,",
				"          SBU_IDENTIFIER as string,",
				"          tower as string,",
				"          Building as string,",
				"          Type as string,",
				"          Level as string,",
				"          Flat_No as string,",
				"          Door_Type as string,",
				"          Jamb_Width as string,",
				"          Orientation as string,",
				"          Door_Id as string,",
				"          Fire_Rating as string,",
				"          Frame as string,",
				"          Foam as string,",
				"          Architrave as string,",
				"          Shutter as string,",
				"          Ironmongery as string,",
				"          Installer as string,",
				"          Total as string,",
				"          SC_Short as string,",
				"          SC_NAME as string,",
				"          DATE_WISE_SPLIT as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT          Sort.Upload_Date,\\n                P.Sort_ID as PROJECT_ID,\\n                    LM.LEVEL_MAP_ID AS LEVEL_ID,\\n                    SM.SBU_MAP_ID AS SBU_ID,\\n                    P.PROJECT_IDENTIFIER,\\n                         SM.SBU_IDENTIFIER,\\n                Sort.tower,\\n                Sort.Building,\\n                Sort.[Type],\\n                Sort.[Level],\\n                Sort.[Flat_No],\\n                Sort.[Door_Type],\\n                Sort.[Jamb_Width],\\n                Sort.Orientation,\\n                Sort.[Door_Id],\\n                Sort.[Fire_Rating],\\n                Sort.Frame,\\n                Sort.Foam,\\n                Sort.Architrave,\\n                Sort.Shutter,\\n                (REPLACE(Sort.Ironmongery,\\'-008\\',\\'\\')) AS Ironmongery,\\n                Sort.Installer,\\n                (REPLACE(Sort.Value_Total,\\'-\\',\\'\\')) AS Total,\\n                Sort.SC_Short,\\n                Sort.SC_NAME,\\n                CASE WHEN Frame = NULL AND Architrave != NULL THEN Architrave \\n                     WHEN Architrave = NULL AND Shutter != NULL THEN Shutter\\n                     WHEN Shutter = NULL AND Architrave != NULL THEN Architrave ELSE Frame END AS DATE_WISE_SPLIT \\n--INTO F_WOODEN_DOOR\\n FROM (\\nSELECT               SC_NAME,\\n                    SC_Short,\\n                    --DMPF.project_id,\\n                    DI.sbu_id,\\n                    Value_Total,\\n                    CAST (DI.upload_time AS DATE) AS Upload_Date,\\n                DI.project_id AS project_id,\\n                DI.tower,\\n                DI.Building,\\n                DI.[Type],\\n                DI.[Level],\\n                DI.[Flat_No],\\n                DENSE_RANK () OVER(PARTITION BY  DI.project_id ORDER BY  CAST(DI.upload_time AS DATE) DESC) D_RANK,\\n                NULLIF (TRIM(DI.[Flat_No_A]),\\'\\') AS \\'Flat_No_A\\',\\n                NULLIF (TRIM(DI.[Door_Type]),\\'\\') AS \\'Door_Type\\',\\n                NULLIF (TRIM(DI.[Jamb_Width]),\\'\\') AS \\'Jamb_Width\\',\\n                NULLIF (TRIM(DI.Orientation),\\'\\') AS Orientation,\\n                NULLIF (TRIM(DI.[Door_Id]),\\'\\') AS \\'Door_Id\\',\\n                NULLIF (TRIM(DI.[Fire_Rating]),\\'\\') AS \\'Fire_Rating\\',\\n                NULLIF (TRIM(DI.Frame),\\'\\') AS Frame,\\n                NULLIF (TRIM(DI.Foam),\\'\\') AS Foam,\\n                NULLIF (TRIM(DI.Architrave),\\'\\') AS Architrave,\\n                NULLIF (TRIM(DI.Shutter),\\'\\') AS Shutter,\\n                NULLIF (TRIM(DI.Ironmongery),\\'\\') AS Ironmongery,\\n                NULLIF (TRIM(DI.Installer),\\'\\') AS Installer\\nFROM (\\nSELECT     DMP.SC_NAME,\\n            DMP.SC_Short,\\n            DMP.project_id,\\n            SUM(CAST(DMP.value AS INT)) AS Value_Total\\n                \\n     FROM (   \\n            SELECT CAST(ddm.upload_time AS DATE) AS Upload_Date,\\n            ddm.project_id,\\n            ddm.tower,\\n            ddm.sbu_id,\\n            ddm.[Date],\\n            OPDM.SC_NAME,\\n            OPDM.SC_Short,\\n            Column_Name.SCC,\\n               CASE \\n                WHEN TRIM(Column_Name.value) IN (\\'-\\',\\'\\') THEN NULL\\n                ELSE Column_Name.value\\n            END AS value,\\n            DENSE_RANK () OVER (PARTITION BY ddm.project_id ORDER BY  CAST(ddm.upload_time AS DATE) DESC) DRANK\\n        FROM STG.O_PLN_DOOR_MANPOWER_STG  ddm\\n        CROSS apply  (     \\n                            SELECT  [SC1] , \\'SC1\\' \\n                  UNION ALL SELECT  [SC2],\\'SC2\\'\\n                  UNION ALL SELECT  [SC3],\\'SC3\\'\\n                  UNION ALL SELECT  [SC4],\\'SC4\\'\\n                  UNION ALL SELECT  [SC5],\\'SC5\\'\\n                  UNION ALL SELECT  [SC6],\\'SC6\\'\\n                  UNION ALL SELECT  [SC7],\\'SC7\\'\\n                  UNION ALL SELECT  [SC8],\\'SC8\\'\\n                  UNION ALL SELECT  [SC9],\\'SC9\\'\\n                  UNION ALL SELECT  [SC10],\\'SC10\\'\\n                  UNION ALL SELECT  [SC11],\\'SC11\\'\\n                  UNION ALL SELECT  [SC12],\\'SC12\\'\\n                  UNION ALL SELECT  [SC13],\\'SC13\\'\\n                  UNION ALL SELECT  [SC14],\\'SC14\\'\\n                  UNION ALL SELECT  [SC15],\\'SC15\\'\\n                  UNION ALL SELECT  [SC16],\\'SC16\\'\\n                  UNION ALL SELECT  [SC17],\\'SC17\\'\\n                  UNION ALL SELECT  [SC18],\\'SC18\\'\\n                  UNION ALL SELECT  [SC19],\\'SC19\\'\\n                  UNION ALL SELECT  [SC20],\\'SC20\\'\\n                            )AS Column_Name (value,SCC)\\n               \\n    INNER JOIN STG.O_PLN_DOORMANPOWER_MAP_STG OPDM\\n    ON Column_Name.SCC = OPDM.SC\\n    AND ddm.project_id = OPDM.project_id\\n    WHERE OPDM.SC_Short != (\\'\\')\\n     ) DMP\\n     \\n     WHERE DRANK = 1 \\n     GROUP BY DMP.SC_NAME,DMP.SC_Short,DMP.project_id\\n     ) DMPF RIGHT JOIN STG.O_PLN_DOOR_INSTALLATION_RAW_STG DI\\n          ON DI.Installer = DMPF.SC_Short\\n         AND DI.project_id = DMPF.project_id\\n     WHERE [Door_Id] NOT IN (\\'\\',\\'NULL\\') \\n    AND [Flat_No] NOT IN (\\'\\',\\'NULL\\')\\n     ) SORT\\n     LEFT JOIN [DWH].[PLN_LEVEL_MAP_ALL_DIM] AS LM\\n     ON          SORT.[LEVEL] = LM.[LEVEL]\\n     LEFT JOIN  [DWH].[PROJECTS_NEW_DIM] P\\n      ON          SORT.PROJECT_ID=P.PROJECT_IDENTIFIER \\n     LEFT JOIN [DWH].[PLN_SBU_MAPPING_DIM] SM\\n     ON          SORT.SBU_ID=SM.SBU_IDENTIFIER\\n     WHERE D_RANK = 1',",
				"     format: 'query',",
				"     staged: true) ~> source1",
				"source1 keyGenerate(output(SurrogateKey_ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(ID = SurrogateKey_ID+$MAX_ID,",
				"          LoadDateTime = currentUTC()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          Upload_Date as date,",
				"          project_id as integer,",
				"          SBU_Id as integer,",
				"          Sbu_Identifier as string,",
				"          Level_ID as integer,",
				"          Project_Identifier as string,",
				"          tower as string,",
				"          Building as string,",
				"          Type as string,",
				"          Level as string,",
				"          Flat_No as string,",
				"          Door_Type as string,",
				"          Jamb_Width as string,",
				"          Orientation as string,",
				"          Door_Id as string,",
				"          Fire_Rating as string,",
				"          Frame as string,",
				"          Foam as string,",
				"          Architrave as string,",
				"          Shutter as string,",
				"          Ironmongery as string,",
				"          Installer as string,",
				"          level_map as integer,",
				"          Total as string,",
				"          SC_Short as string,",
				"          SC_NAME as string,",
				"          DATE_WISE_SPLIT as string,",
				"          LoadDateTime as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['TRUNCATE TABLE [DWH].[PLN_WOODEN_DOOR_FACT]'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Id = ID,",
				"          Upload_Date,",
				"          project_id = PROJECT_ID,",
				"          SBU_Id = SBU_ID,",
				"          Sbu_Identifier = SBU_IDENTIFIER,",
				"          Level_ID = LEVEL_ID,",
				"          Project_Identifier = PROJECT_IDENTIFIER,",
				"          tower,",
				"          Building,",
				"          Type,",
				"          Level,",
				"          Flat_No,",
				"          Door_Type,",
				"          Jamb_Width,",
				"          Orientation,",
				"          Door_Id,",
				"          Fire_Rating,",
				"          Frame,",
				"          Foam,",
				"          Architrave,",
				"          Shutter,",
				"          Ironmongery,",
				"          Installer,",
				"          level_map = LEVEL_ID,",
				"          Total,",
				"          SC_Short,",
				"          SC_NAME,",
				"          DATE_WISE_SPLIT,",
				"          LoadDateTime",
				"     )) ~> sink1"
			]
		}
	}
}